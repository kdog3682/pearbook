export {
    alphabet,
    monthNames,
    googleFontAliases,
    shellEscapeRE,
    shellEscapeDict,
    dayNames,
shellUnescapeDict,
    weekdays,
    seasons,
    vueNativeAttrs,
    vueNativeFunctionKeys,
    commonFirstLetterWords,
    getCallerKeys,
    filetypes,
    filetypeMap,
    vueImplicitDataKeyRef,
    jspyref,
    monthAbrevs,
    utf_star,
    commonFunctionNames,
    operationAliases,
    lezerBaseIgnore,
    symbolNameRef,
    exampleArgTemplate,
    baseVueHtmlTemplate,
    standardJavascriptImports,
    cssUnits,
    cssIncrementTable,
    directions,
    CSSAttributeItems,
    vmap2,
    vueComponentOptionKeys,
    selfClosingTags,
    vimReservedWords,
    commonMathWords,
    cssAbrevs,
    builtInFunctions,
    cssAttributeItems,
    vimEscapeKeys,
    vimPrefixes,
    OPPOSITES,
    nativeLogs,
    MATH_IGNORE_WORDS,
    QUESTION_WORDS,
    turtleContextKeys,
    svgContainerTags,
    stateContextJsonKeys,
    EMDASH,
    shortMonths,
    months,
    regexLibrary,
    chalkColors,
    colorSchemas,
    assertionErrorMessages,
    terminalColors,
    browserBindings,
    allHtmlTags,
    htmlTags,
    commonExtensions,
    commonExtensions as extensions,
    shortMaterialColorAliases,
    materialColorAliases,
    indexedMaterialColors,
    myColors,
    fileDict,
    javascriptNativeFunctions,
    javascriptOneSpaceWords,
    pythonOneSpaceWords,
    speechSynthesisLanguages,
    htmlColors,
    flatColorBrewer,
    nojiAliases,
    vmap,
    teachingStyleCSS,
    nativeWindowKeys,
    nativeJavascriptConstructors,
    javascriptReservedWords,
    pythonReservedWords,
    tailwindColors,
    DIRECTIONS,
    UTF,
    commonStyleKeys,
    svgTags,
    styleCSS,
    ColorBrewerAliases,
    GoogleFontAliases,
    colorBrewer,
    javascriptBasicTypes,
    JavascriptLibraries,
    BASE_CSS,
    //libraries,
    JavascriptLibraryItems,
    javascriptNativeBindings,
    FILE_DICT,
    THREE_LETTER_WORDS,
    MATERIAL_COLORS_DICT,
    TWO_LETTER_WORDS,
    TWO_LETTER_WORDS as twoLetterWords,
    FILE_EXTENSIONS,
    FILE_EXTENSIONS as fileExtensions,
    PORT,
    CURRENT_DIRECTORY,
    FILE_DIRECTORIES,
    FILE_DIRECTORIES as dirDict,
    HTML_MASTER_KEY_MAP,
    startingLineConfigRE,
    viableTagRE,
    VUE_FOR_DICT,
    VUE_SINGLE_TO_DOUBLE_REF,
    HTML_CLOSING_TAGS,
    HTML_NO_CLOSERS,
    roygbiv,
    LOCAL_HOST_URL,
    PRIMES,
    materialColors
}

const INDEX_HTML_FILE = "/home/kdog3682/2023/index.html"
const LOCAL_HOST_URL = "http://localhost:3000/"
//const LOCAL_HOST_URL = "http://localhost:3000"
const clipfile = "clip.js"
const cssdir = "/home/kdog3682/CWF/public/"
const dldir = "/mnt/chromeos/MyFiles/Downloads/"
const drivedir = '/mnt/chromeos/GoogleDrive/MyDrive/'
const jsdir = "/home/kdog3682/2023/"
const rootdir = "/home/kdog3682/"
const jsondir = "/home/kdog3682/JSONS/"
const logdir = "/home/kdog3682/LOGS/"
const mathdir = "/home/kdog3682/MATH/"
const pdfdir = "/home/kdog3682/PDFS/"
const picdir = "/home/kdog3682/PICS/"
const pydir = "/home/kdog3682/PYTHON/"
const sandir = "/mnt/chromeos/removable/Sandisk/"
const txtdir = "/home/kdog3682/TEXTS/"
const htmlClosers = [
    "circle",
    "rect",
    "line",
]
const HTML_CLOSING_TAGS = [
'transition',
    'label',
    "caption",
    "colgroup",
    "tr",
    "th",
    "tfoot",
    "thead",
    "tbody",
    'form',
    //"circle",
    //"rect",
    //"path",
    "code",
    "marker",
    "html",
    "pattern",
    "foreignObject",
    "table",
    "th",
    "td",
    "tr",
    "thead",
    "tbody",
    "defs",
    "li",
    "ol",
    "ul",
    "slot",
    "svg",
    "g",
    "style",
    "ol",
    "footer",
    "header",
    "p",
    "pre",
    "script",
    "body",
    "ul",
    "li",
    "p",
    "textarea",
    "button",
    "section",
    "fieldset",
    "legend",
    "text",
    "div",
    "h1",
    "h2",
    "h3",
    "main",
    "blockquote",
    "span",
    "article",
    "body",
    "html",
    "head",
    "template",
    "h4",
    "h5",
    "h6"
]

const startingLineConfigRE =
    /^([\w-]+) *= *(.+)|^([:@][\w-]+)(?: *= *(.+))?|^(\w+)\((.*)\)/

const viableTagRE = /^(?:template|slot|v-|span)/

const vmap = {
    if: "v-if",
    ref: "ref",
    click: "@click",
    mouseover: "@mouseover",
    mouseleave: "@mouseleave",
    mouseout: "@mouseout",
    input: "@input",
    change: "@change",
    enter: "@keydown.enter",
    keydown: "@keydown",
    bind: "v-bind",
    show: "v-show",
    if: "v-if",
    elif: "v-else-if",
    "v-if": "v-if",
    "v-else-if": "v-else-if",
    "v-else": "v-else",
    else: "v-else",
    class: "class",
    key: ":key",
    for: "v-for",
    html: "v-html",
    model: "v-model",
    slot: "v-slot"
}
var HTML_MASTER_KEY_MAP = {
    w: "width",
    h: "height",
    if: "v-if",
    click: "@click",
    enter: "@keydown.enter",
    bind: "v-bind",
    show: "v-show",
    if: "v-if",
    elif: "v-else-if",
    else: "v-else",
    key: ":key",
    for: "v-for",
    html: "v-html",
    model: "v-model",
    slot: "v-slot"
}

const VUE_SINGLE_TO_DOUBLE_REF = {
    style: "computedStyle"
}
const VUE_FOR_DICT = {
    children: "child"
}
const HTML_NO_CLOSERS = [
    "col",
 'polygon',

"i",
    "input",
    //"circle",
    //"rect",
    //"line",
    "hr",
    "br",
    "stop",
    "link",
    "img",
    "meta"
    //"circle",
    //"rect",
]
const roygbiv = [
    "red",
    "orange",
    "yellow",
    "green",
    "blue",
    "indigo",
    "violet"
]
const PRIMES = [
    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,
    53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,
    109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,
    173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229,
    233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,
    293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,
    367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,
    433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491,
    499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571,
    577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641,
    643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,
    719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,
    797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,
    863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,
    947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013
]

const CURRENT_DIRECTORY = "/home/kdog3682/2023"
const PORT = 3000
const materialColors = {
    red: {
        50: "#ffebee",
        100: "#ffcdd2",
        200: "#ef9a9a",
        300: "#e57373",
        400: "#ef5350",
        500: "#f44336",
        600: "#e53935",
        700: "#d32f2f",
        800: "#c62828",
        900: "#b71c1c",
        a100: "#ff8a80",
        a200: "#ff5252",
        a400: "#ff1744",
        a700: "#d50000"
    },
    pink: {
        50: "#fce4ec",
        100: "#f8bbd0",
        200: "#f48fb1",
        300: "#f06292",
        400: "#ec407a",
        500: "#e91e63",
        600: "#d81b60",
        700: "#c2185b",
        800: "#ad1457",
        900: "#880e4f",
        a100: "#ff80ab",
        a200: "#ff4081",
        a400: "#f50057",
        a700: "#c51162"
    },
    purple: {
        50: "#f3e5f5",
        100: "#e1bee7",
        200: "#ce93d8",
        300: "#ba68c8",
        400: "#ab47bc",
        500: "#9c27b0",
        600: "#8e24aa",
        700: "#7b1fa2",
        800: "#6a1b9a",
        900: "#4a148c",
        a100: "#ea80fc",
        a200: "#e040fb",
        a400: "#d500f9",
        a700: "#aa00ff"
    },
    deepPurple: {
        50: "#ede7f6",
        100: "#d1c4e9",
        200: "#b39ddb",
        300: "#9575cd",
        400: "#7e57c2",
        500: "#673ab7",
        600: "#5e35b1",
        700: "#512da8",
        800: "#4527a0",
        900: "#311b92",
        a100: "#b388ff",
        a200: "#7c4dff",
        a400: "#651fff",
        a700: "#6200ea"
    },
    indigo: {
        50: "#e8eaf6",
        100: "#c5cae9",
        200: "#9fa8da",
        300: "#7986cb",
        400: "#5c6bc0",
        500: "#3f51b5",
        600: "#3949ab",
        700: "#303f9f",
        800: "#283593",
        900: "#1a237e",
        a100: "#8c9eff",
        a200: "#536dfe",
        a400: "#3d5afe",
        a700: "#304ffe"
    },
    blue: {
        50: "#e3f2fd",
        100: "#bbdefb",
        200: "#90caf9",
        300: "#64b5f6",
        400: "#42a5f5",
        500: "#2196f3",
        600: "#1e88e5",
        700: "#1976d2",
        800: "#1565c0",
        900: "#0d47a1",
        a100: "#82b1ff",
        a200: "#448aff",
        a400: "#2979ff",
        a700: "#2962ff"
    },
    lightBlue: {
        50: "#e1f5fe",
        100: "#b3e5fc",
        200: "#81d4fa",
        300: "#4fc3f7",
        400: "#29b6f6",
        500: "#03a9f4",
        600: "#039be5",
        700: "#0288d1",
        800: "#0277bd",
        900: "#01579b",
        a100: "#80d8ff",
        a200: "#40c4ff",
        a400: "#00b0ff",
        a700: "#0091ea"
    },
    cyan: {
        50: "#e0f7fa",
        100: "#b2ebf2",
        200: "#80deea",
        300: "#4dd0e1",
        400: "#26c6da",
        500: "#00bcd4",
        600: "#00acc1",
        700: "#0097a7",
        800: "#00838f",
        900: "#006064",
        a100: "#84ffff",
        a200: "#18ffff",
        a400: "#00e5ff",
        a700: "#00b8d4"
    },
    teal: {
        50: "#e0f2f1",
        100: "#b2dfdb",
        200: "#80cbc4",
        300: "#4db6ac",
        400: "#26a69a",
        500: "#009688",
        600: "#00897b",
        700: "#00796b",
        800: "#00695c",
        900: "#004d40",
        a100: "#a7ffeb",
        a200: "#64ffda",
        a400: "#1de9b6",
        a700: "#00bfa5"
    },
    green: {
        50: "#e8f5e9",
        100: "#c8e6c9",
        200: "#a5d6a7",
        300: "#81c784",
        400: "#66bb6a",
        500: "#4caf50",
        600: "#43a047",
        700: "#388e3c",
        800: "#2e7d32",
        900: "#1b5e20",
        a100: "#b9f6ca",
        a200: "#69f0ae",
        a400: "#00e676",
        a700: "#00c853"
    },
    lightGreen: {
        50: "#f1f8e9",
        100: "#dcedc8",
        200: "#c5e1a5",
        300: "#aed581",
        400: "#9ccc65",
        500: "#8bc34a",
        600: "#7cb342",
        700: "#689f38",
        800: "#558b2f",
        900: "#33691e",
        a100: "#ccff90",
        a200: "#b2ff59",
        a400: "#76ff03",
        a700: "#64dd17"
    },
    lime: {
        50: "#f9fbe7",
        100: "#f0f4c3",
        200: "#e6ee9c",
        300: "#dce775",
        400: "#d4e157",
        500: "#cddc39",
        600: "#c0ca33",
        700: "#afb42b",
        800: "#9e9d24",
        900: "#827717",
        a100: "#f4ff81",
        a200: "#eeff41",
        a400: "#c6ff00",
        a700: "#aeea00"
    },
    yellow: {
        50: "#fffde7",
        100: "#fff9c4",
        200: "#fff59d",
        300: "#fff176",
        400: "#ffee58",
        500: "#ffeb3b",
        600: "#fdd835",
        700: "#fbc02d",
        800: "#f9a825",
        900: "#f57f17",
        a100: "#ffff8d",
        a200: "#ffff00",
        a400: "#ffea00",
        a700: "#ffd600"
    },
    amber: {
        50: "#fff8e1",
        100: "#ffecb3",
        200: "#ffe082",
        300: "#ffd54f",
        400: "#ffca28",
        500: "#ffc107",
        600: "#ffb300",
        700: "#ffa000",
        800: "#ff8f00",
        900: "#ff6f00",
        a100: "#ffe57f",
        a200: "#ffd740",
        a400: "#ffc400",
        a700: "#ffab00"
    },
    orange: {
        50: "#fff3e0",
        100: "#ffe0b2",
        200: "#ffcc80",
        300: "#ffb74d",
        400: "#ffa726",
        500: "#ff9800",
        600: "#fb8c00",
        700: "#f57c00",
        800: "#ef6c00",
        900: "#e65100",
        a100: "#ffd180",
        a200: "#ffab40",
        a400: "#ff9100",
        a700: "#ff6d00"
    },
    deepOrange: {
        50: "#fbe9e7",
        100: "#ffccbc",
        200: "#ffab91",
        300: "#ff8a65",
        400: "#ff7043",
        500: "#ff5722",
        600: "#f4511e",
        700: "#e64a19",
        800: "#d84315",
        900: "#bf360c",
        a100: "#ff9e80",
        a200: "#ff6e40",
        a400: "#ff3d00",
        a700: "#dd2c00"
    },
    brown: {
        50: "#efebe9",
        100: "#d7ccc8",
        200: "#bcaaa4",
        300: "#a1887f",
        400: "#8d6e63",
        500: "#795548",
        600: "#6d4c41",
        700: "#5d4037",
        800: "#4e342e",
        900: "#3e2723"
    },
    grey: {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#eeeeee",
        300: "#e0e0e0",
        400: "#bdbdbd",
        500: "#9e9e9e",
        600: "#757575",
        700: "#616161",
        800: "#424242",
        900: "#212121"
    },
    blueGrey: {
        50: "#eceff1",
        100: "#cfd8dc",
        200: "#b0bec5",
        300: "#90a4ae",
        400: "#78909c",
        500: "#607d8b",
        600: "#546e7a",
        700: "#455a64",
        800: "#37474f",
        900: "#263238"
    }
}

var ColorTransformRef = {
    black: "#000000",
    yellow: "#FFD700",
    "near-black": "#111111",
    "dark-gray": "#333333",
    "mid-gray": "#555555",
    gray: "#777777",
    silver: "#999999",
    "light-silver": "#AAAAAA",
    "moon-gray": "#CCCCCC",
    "light-gray": "#EEEEEE",
    "near-white": "#F4F4F4",
    white: "#FFFFFF",
    "dark-red": "#E7040F",
    red: "#FF4136",
    "light-red": "#FF725C",
    orange: "#FF6300",
    gold: "#FFB700",
    "light-yellow": "#FBF1A9",
    purple: "#5E2CA5",
    "light-purple": "#A463F2",
    "dark-pink": "#D5008F",
    "hot-pink": "#FF41B4",
    pink: "#FF80CC",
    "light-pink": "#FFA3D7",
    "dark-green": "#137752",
    green: "#19A974",
    "light-green": "#9EEBCF",
    navy: "#001B44",
    "dark-blue": "#00449E",
    blue: "#357EDD",
    "light-blue": "#96CCFF",
    "lightest-blue": "#CDECFF",
    "washed-blue": "#F6FFFE",
    "washed-green": "#E8FDF5",
    "washed-yellow": "#FFFCEB",
    "washed-red": "#FFDFDF"
}

const THREE_LETTER_WORDS = [
    "ago",
    "all",
    "any",
    "bad",
    "big",
    "few",
    "hot",
    "how",
    "mad",
    "new",
    "now",
    "old",
    "one",
    "red",
    "sad",
    "six",
    "ten",
    "two",
    "and",
    "but",
    "for",
    "nor",
    "off",
    "the",
    "yet",
    "air",
    "ant",
    "bed",
    "boy",
    "can",
    "car",
    "cat",
    "dad",
    "day",
    "dew",
    "dog",
    "elf",
    "elk",
    "gym",
    "ink",
    "jet",
    "key",
    "log",
    "man",
    "mom",
    "one",
    "pal",
    "rug",
    "saw",
    "son",
    "sun",
    "urn",
    "vet",
    "way",
    "yap",
    "zag",
    "zen",
    "zoo",
    "her",
    "him",
    "his",
    "our",
    "she",
    "you",
    "ace",
    "add",
    "act",
    "aid",
    "ail",
    "are",
    "ask",
    "ate",
    "bar",
    "dig",
    "eat",
    "get",
    "has",
    "let",
    "met",
    "nap",
    "out",
    "put",
    "run",
    "sat",
    "say",
    "see",
    "tan",
    "use",
    "was",
    "wed",
    "zap"
]

var TWO_LETTER_WORDS = [
    "to",
    "mr",
    "ms",
    "on",
    "he",
    "my",
    "it",
    "we",
    "in",
    "ha",
    "am",
    "ox",
    "go",
    "be",
    "of",
    "up",
    "so",
    "by",
    "yo",
    "no",
    "id",
    "oh",
    "ah",
    "if",
    "do",
    "or",
    "as",
    "us",
    "me",
    "at",
    "hi",
    "an",
    "is"
]

var MATERIAL_COLORS_DICT = {
    red5: "#f44336",
    red: "#f44336",
    red1: "#ffcdd2",
    red2: "#ef9a9a",
    red3: "#e57373",
    red4: "#ef5350",
    red6: "#e53935",
    red7: "#d32f2f",
    red8: "#c62828",
    red9: "#b71c1c",
    red100: "#ff8a80",
    red200: "#ff5252",
    red400: "#ff1744",
    red700: "#d50000",
    pink5: "#e91e63",
    pink: "#e91e63",
    pink1: "#f8bbd0",
    pink2: "#f48fb1",
    pink3: "#f06292",
    pink4: "#ec407a",
    pink6: "#d81b60",
    pink7: "#c2185b",
    pink8: "#ad1457",
    pink9: "#880e4f",
    pink100: "#ff80ab",
    pink200: "#ff4081",
    pink400: "#f50057",
    pink700: "#c51162",
    purple5: "#9c27b0",
    purple: "#9c27b0",
    purple1: "#e1bee7",
    purple2: "#ce93d8",
    purple3: "#ba68c8",
    purple4: "#ab47bc",
    purple6: "#8e24aa",
    purple7: "#7b1fa2",
    purple8: "#6a1b9a",
    purple9: "#4a148c",
    purple100: "#ea80fc",
    purple200: "#e040fb",
    purple400: "#d500f9",
    purple700: "#aa00ff",
    deepPurple5: "#673ab7",
    deepPurple: "#673ab7",
    deepPurple1: "#d1c4e9",
    deepPurple2: "#b39ddb",
    deepPurple3: "#9575cd",
    deepPurple4: "#7e57c2",
    deepPurple6: "#5e35b1",
    deepPurple7: "#512da8",
    deepPurple8: "#4527a0",
    deepPurple9: "#311b92",
    deepPurple100: "#b388ff",
    deepPurple200: "#7c4dff",
    deepPurple400: "#651fff",
    deepPurple700: "#6200ea",
    indigo5: "#3f51b5",
    indigo: "#3f51b5",
    indigo1: "#c5cae9",
    indigo2: "#9fa8da",
    indigo3: "#7986cb",
    indigo4: "#5c6bc0",
    indigo6: "#3949ab",
    indigo7: "#303f9f",
    indigo8: "#283593",
    indigo9: "#1a237e",
    indigo100: "#8c9eff",
    indigo200: "#536dfe",
    indigo400: "#3d5afe",
    indigo700: "#304ffe",
    blue5: "#2196f3",
    blue: "#2196f3",
    blue1: "#bbdefb",
    blue2: "#90caf9",
    blue3: "#64b5f6",
    blue4: "#42a5f5",
    blue6: "#1e88e5",
    blue7: "#1976d2",
    blue8: "#1565c0",
    blue9: "#0d47a1",
    blue100: "#82b1ff",
    blue200: "#448aff",
    blue400: "#2979ff",
    blue700: "#2962ff",
    lightBlue5: "#03a9f4",
    lightBlue: "#03a9f4",
    lightBlue1: "#b3e5fc",
    lightBlue2: "#81d4fa",
    lightBlue3: "#4fc3f7",
    lightBlue4: "#29b6f6",
    lightBlue6: "#039be5",
    lightBlue7: "#0288d1",
    lightBlue8: "#0277bd",
    lightBlue9: "#01579b",
    lightBlue100: "#80d8ff",
    lightBlue200: "#40c4ff",
    lightBlue400: "#00b0ff",
    lightBlue700: "#0091ea",
    cyan5: "#00bcd4",
    cyan: "#00bcd4",
    cyan1: "#b2ebf2",
    cyan2: "#80deea",
    cyan3: "#4dd0e1",
    cyan4: "#26c6da",
    cyan6: "#00acc1",
    cyan7: "#0097a7",
    cyan8: "#00838f",
    cyan9: "#006064",
    cyan100: "#84ffff",
    cyan200: "#18ffff",
    cyan400: "#00e5ff",
    cyan700: "#00b8d4",
    teal5: "#009688",
    teal: "#009688",
    teal1: "#b2dfdb",
    teal2: "#80cbc4",
    teal3: "#4db6ac",
    teal4: "#26a69a",
    teal6: "#00897b",
    teal7: "#00796b",
    teal8: "#00695c",
    teal9: "#004d40",
    teal100: "#a7ffeb",
    teal200: "#64ffda",
    teal400: "#1de9b6",
    teal700: "#00bfa5",
    green5: "#4caf50",
    green: "#4caf50",
    green1: "#c8e6c9",
    green2: "#a5d6a7",
    green3: "#81c784",
    green4: "#66bb6a",
    green6: "#43a047",
    green7: "#388e3c",
    green8: "#2e7d32",
    green9: "#1b5e20",
    green100: "#b9f6ca",
    green200: "#69f0ae",
    green400: "#00e676",
    green700: "#00c853",
    lightGreen5: "#8bc34a",
    lightGreen: "#8bc34a",
    lightGreen1: "#dcedc8",
    lightGreen2: "#c5e1a5",
    lightGreen3: "#aed581",
    lightGreen4: "#9ccc65",
    lightGreen6: "#7cb342",
    lightGreen7: "#689f38",
    lightGreen8: "#558b2f",
    lightGreen9: "#33691e",
    lightGreen100: "#ccff90",
    lightGreen200: "#b2ff59",
    lightGreen400: "#76ff03",
    lightGreen700: "#64dd17",
    lime5: "#cddc39",
    lime: "#cddc39",
    lime1: "#f0f4c3",
    lime2: "#e6ee9c",
    lime3: "#dce775",
    lime4: "#d4e157",
    lime6: "#c0ca33",
    lime7: "#afb42b",
    lime8: "#9e9d24",
    lime9: "#827717",
    lime100: "#f4ff81",
    lime200: "#eeff41",
    lime400: "#c6ff00",
    lime700: "#aeea00",
    yellow5: "#ffeb3b",
    yellow: "#ffeb3b",
    yellow1: "#fff9c4",
    yellow2: "#fff59d",
    yellow3: "#fff176",
    yellow4: "#ffee58",
    yellow6: "#fdd835",
    yellow7: "#fbc02d",
    yellow8: "#f9a825",
    yellow9: "#f57f17",
    yellow100: "#ffff8d",
    yellow200: "#ffff00",
    yellow400: "#ffea00",
    yellow700: "#ffd600",
    amber5: "#ffc107",
    amber: "#ffc107",
    amber1: "#ffecb3",
    amber2: "#ffe082",
    amber3: "#ffd54f",
    amber4: "#ffca28",
    amber6: "#ffb300",
    amber7: "#ffa000",
    amber8: "#ff8f00",
    amber9: "#ff6f00",
    amber100: "#ffe57f",
    amber200: "#ffd740",
    amber400: "#ffc400",
    amber700: "#ffab00",
    orange5: "#ff9800",
    orange: "#ff9800",
    orange1: "#ffe0b2",
    orange2: "#ffcc80",
    orange3: "#ffb74d",
    orange4: "#ffa726",
    orange6: "#fb8c00",
    orange7: "#f57c00",
    orange8: "#ef6c00",
    orange9: "#e65100",
    orange100: "#ffd180",
    orange200: "#ffab40",
    orange400: "#ff9100",
    orange700: "#ff6d00",
    deepOrange5: "#ff5722",
    deepOrange: "#ff5722",
    deepOrange1: "#ffccbc",
    deepOrange2: "#ffab91",
    deepOrange3: "#ff8a65",
    deepOrange4: "#ff7043",
    deepOrange6: "#f4511e",
    deepOrange7: "#e64a19",
    deepOrange8: "#d84315",
    deepOrange9: "#bf360c",
    deepOrange100: "#ff9e80",
    deepOrange200: "#ff6e40",
    deepOrange400: "#ff3d00",
    deepOrange700: "#dd2c00",
    brown5: "#795548",
    brown: "#795548",
    brown1: "#d7ccc8",
    brown2: "#bcaaa4",
    brown3: "#a1887f",
    brown4: "#8d6e63",
    brown6: "#6d4c41",
    brown7: "#5d4037",
    brown8: "#4e342e",
    brown9: "#3e2723",
    grey5: "#9e9e9e",
    grey: "#9e9e9e",
    grey1: "#f5f5f5",
    grey2: "#eeeeee",
    grey3: "#e0e0e0",
    grey4: "#bdbdbd",
    grey6: "#757575",
    grey7: "#616161",
    grey8: "#424242",
    grey9: "#212121",
    blueGrey5: "#607d8b",
    blueGrey: "#607d8b",
    blueGrey1: "#cfd8dc",
    blueGrey2: "#b0bec5",
    blueGrey3: "#90a4ae",
    blueGrey4: "#78909c",
    blueGrey6: "#546e7a",
    blueGrey7: "#455a64",
    blueGrey8: "#37474f",
    blueGrey9: "#263238"
}
var FILE_EXTENSIONS = [
    "dialogue",
    "note",
    "md",
    "vimrc",
    "txt",
    "grammar",
    "drafts",
    "js",
    "py",
    "vim",
    "json",
    "css",
    "html",
    "math",
    "history",
    "ts",
    "vue",
    "pdf"
]

const alphabet = [
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z"
]
const FILE_DIRECTORIES = {

         './': jsdir,
         '../': rootdir,
         '~/': rootdir,
    dldir,
    drivedir,
    drive: drivedir,
    trash: "/home/kdog3682/TRASH/",
    '': '/home/kdog3682/2023/',
    resources: "/home/kdog3682/RESOURCES/",
    trashdir: "/home/kdog3682/TRASH/",
    js: jsdir,
    css: cssdir,
    pdf: pdfdir,
    txt: txtdir,
    json: jsondir,
    math: mathdir,
    jpg: picdir,
    jpeg: picdir,
    png: picdir,
    svg: picdir,
    log: logdir,
    py: pydir,
    pydir: pydir,
    python: pydir,
    dir2023: CURRENT_DIRECTORY,
    javascript: CURRENT_DIRECTORY,
    2023: CURRENT_DIRECTORY
}
const FILE_DICT = {
    hlez: "/home/kdog3682/.npm-global/lib/node_modules/@lezer/markdown/dist/index.cjs",
    mlez: "/home/kdog3682/.npm-global/lib/node_modules/@lezer/markdown/dist/index.cjs",
    ftc: "/home/kdog3682/.vim/ftplugin/css.vim",
    fhtml: "/home/kdog3682/.vim/ftplugin/html.vim",
    fth: "/home/kdog3682/.vim/ftplugin/html.vim",
    ftmd: "/home/kdog3682/.vim/ftplugin/markdown.vim",
    fmath: "/home/kdog3682/.vim/ftplugin/math.vim",
    fm: "/home/kdog3682/.vim/ftplugin/math.vim",
    ftext: "/home/kdog3682/.vim/ftplugin/text.vim",
    v: "/home/kdog3682/.vimrc",
    vimrc: "/home/kdog3682/.vimrc",
    gi: "/home/kdog3682/2023/.gitignore",
    hb: "/home/kdog3682/2023/HTMLBuilder.js",
    ps: "/home/kdog3682/2023/Puppeteer.js",
    base: "/home/kdog3682/2023/base.css",
    chl: "/home/kdog3682/2023/changelog.md",
    c: "/home/kdog3682/2023/clip.js",
    cu: "/home/kdog3682/2023/css-utils.js",
    gac: "/home/kdog3682/2023/googleAppConnector.js",
    in: "/home/kdog3682/2023/index.html",
    i: "/home/kdog3682/2023/index.html",
    mu: "/home/kdog3682/2023/ma.js",
    mr: "/home/kdog3682/2023/math-review.txt",
    m2: "/home/kdog3682/2023/math.txt",
    n: "/home/kdog3682/2023/notes.txt",
    pj: "/home/kdog3682/2023/package-lock.json",
    s: "/home/kdog3682/2023/scratchpad.txt",
    sj: "/home/kdog3682/2023/server.js",
    u: "/home/kdog3682/2023/utils.js",
    cwf: "/home/kdog3682/CWF.files.json",
    ap: "/home/kdog3682/CWF/a.py",
    ga: "/home/kdog3682/CWF/ga.py",
    git: "/home/kdog3682/CWF/githubscript.py",
    pdf: "/home/kdog3682/CWF/pdf.py",
    a3: "/home/kdog3682/CWF/public/a3.js",
    a4: "/home/kdog3682/CWF/public/a4.js",
    au: "/home/kdog3682/CWF/public/app-utils.js",
    a2: "/home/kdog3682/CWF/public/app2.js",
    asd: "/home/kdog3682/CWF/public/asd",
    bcs: "/home/kdog3682/CWF/public/base.css",
    cl: "/home/kdog3682/CWF/public/class.js",
    c3: "/home/kdog3682/CWF/public/class3.js",
    c4: "/home/kdog3682/CWF/public/class4.js",
    cd: "/home/kdog3682/CWF/public/clip-data.js",
    clip: "/home/kdog3682/CWF/public/clip.js",
    cold: "/home/kdog3682/CWF/public/clip.js",
    c2: "/home/kdog3682/CWF/public/clip2.js",
    cjs: "/home/kdog3682/CWF/public/comments.js",
    ct: "/home/kdog3682/CWF/public/component-test.js",
    cuo: "/home/kdog3682/CWF/public/css-utils.js",
    ej: "/home/kdog3682/CWF/public/env.js",
    emt: "/home/kdog3682/CWF/public/exeter-math.txt",
    foo: "/home/kdog3682/CWF/public/foo.css",
    goo: "/home/kdog3682/CWF/public/goo.css",
    gui: "/home/kdog3682/CWF/public/gui.txt",
    hc: "/home/kdog3682/CWF/public/html-commands.vim",
    krt: "/home/kdog3682/CWF/public/katex.ref.txt",
    mds: "/home/kdog3682/CWF/public/math-doc-string.txt",
    mcj: "/home/kdog3682/CWF/public/math.config.js",
    mc: "/home/kdog3682/CWF/public/mc.js",
    a: "/home/kdog3682/CWF/public/mc.js",
    nxn: "/home/kdog3682/CWF/public/na-xie-nian.js",
    nc: "/home/kdog3682/CWF/public/nc.js",
    new: "/home/kdog3682/CWF/public/new.js",
    notes: "/home/kdog3682/CWF/public/notes.txt",
    od: "/home/kdog3682/CWF/public/outbound-data.js",
    out: "/home/kdog3682/CWF/public/output.js",
    pos: "/home/kdog3682/CWF/public/position-control.js",
    pub: "/home/kdog3682/CWF/public/public",
    pug: "/home/kdog3682/CWF/public/pug.js",
    pugt: "/home/kdog3682/CWF/public/pug.txt",
    scrape: "/home/kdog3682/CWF/public/scrape.js",
    spl: "/home/kdog3682/CWF/public/split.txt",
    tvd: "/home/kdog3682/CWF/public/temp-vue-data.html",
    temp: "/home/kdog3682/CWF/public/temp.html",
    th: "/home/kdog3682/CWF/public/test.html",
    t2: "/home/kdog3682/CWF/public/test2.html",
    t3: "/home/kdog3682/CWF/public/test3.html",
    tc: "/home/kdog3682/CWF/public/text-commands.vim",
    tm: "/home/kdog3682/CWF/public/text-messages.txt",
    tod: "/home/kdog3682/CWF/public/today.js",
    ur: "/home/kdog3682/CWF/public/useful-references.js",
    ujs: "/home/kdog3682/CWF/public/utils.js",
    vc: "/home/kdog3682/CWF/public/vim-commands",
    vb: "/home/kdog3682/CWF/public/vue-base.js",
    vda: "/home/kdog3682/CWF/public/vue-data.js",
    vd: "/home/kdog3682/CWF/public/vue-data.js",
    am: "/home/kdog3682/JAVASCRIPT/app-main.js",
    jcl: "/home/kdog3682/JAVASCRIPT/class.js",
    ijh: "/home/kdog3682/JAVASCRIPT/index.html",
    ij: "/home/kdog3682/JAVASCRIPT/index.mjs",
    ut: "/home/kdog3682/JAVASCRIPT/utils.mjs",
    clm: "/home/kdog3682/LOGS/CHANGELOG.md",
    deps: "/home/kdog3682/LOGS/dependencies.log",
    myf: "/home/kdog3682/LOGS/myFiles.log",
    fl: "/home/kdog3682/LOGS/myFiles.log",
    tl: "/home/kdog3682/LOGS/today.log",
    cur: "/home/kdog3682/MATH/current.math",
    sm: "/home/kdog3682/MATH/story.math",
    ms: "/home/kdog3682/MATH/story.math",
    b: "/home/kdog3682/PYTHON/base.py",
    env: "/home/kdog3682/PYTHON/env.py",
    p: "/home/kdog3682/PYTHON/pdf.py",
    red: "/home/kdog3682/PYTHON/redditscript.py",
    rp: "/home/kdog3682/PYTHON/run.py",
    zip: "/home/kdog3682/PYTHON/zipscript.py",
    sfe: "/home/kdog3682/SERVER/server-frontend.js",
    sir: "/home/kdog3682/SERVER/server.js",
    cj: "/home/kdog3682/TEXTS/code.journal.txt",
    le: "/home/kdog3682/TEXTS/code.learning.txt",
    cn: "/home/kdog3682/TEXTS/code.notes.txt",
    gr: "/home/kdog3682/TEXTS/grades.txt",
    grades: "/home/kdog3682/TEXTS/grades.txt",
    g: "/home/kdog3682/TEXTS/grades.txt",
    help: "/home/kdog3682/TEXTS/help.txt",
    m: "/home/kdog3682/TEXTS/m.txt",
    ma: "/home/kdog3682/TEXTS/math.archive.txt",
    mj: "/home/kdog3682/TEXTS/me.journal.txt",
    rt: "/home/kdog3682/TEXTS/reddit.txt",
    iab: "/home/kdog3682/VIM/functions.vim",
    vf: "/home/kdog3682/VIM/functions.vim",
    sh: "/home/kdog3682/VIM/setup.sh",
    vimd: "/home/kdog3682/VIM/variables.vim",
    vv: "/home/kdog3682/VIM/variables.vim",
    logs: "/home/kdog3682/logs.txt",
    rq: "/home/kdog3682/reddit-questions.txt",
    ace: "/mnt/chromeos/MyFiles/Downloads/Acing the New SAT Math PDF Book.pdf",
    acejson:
        "/mnt/chromeos/MyFiles/Downloads/Acing the New SAT Math PDF Book.pdf.json",
    x: "class.js.extracts.09-30-2022.log",
    mb: "mathbook.raw.txt",
    rj: "run.js"
}

const javascriptNativeBindings = [
    "console",
    "Date",
    "RegExp",
    "Vue",
    "Event",
    "Error",
    "SyntaxError",
    "eval",
    "Math",
    "String",
    "arguments",
    "window",
    "Function",
    "Number",
    "Object",
    "Array",
    "Set",
    "Promise",
    "JSON",
    "fetch",
    "localStorage",
    "module",
    "navigator",
    "document",
    "clearTimeout",
    "require",
    "console",
    "SpeechSynthesisUtterance",
    "window",
    "setTimeout",
    "eval",
    "isFinite",
    "isNaN",
    "parseFloat",
    "parseInt",
    "encodeURI",
    "encodeURIComponent",
    "decodeURI",
    "decodeURIComponent",
    "setInterval"

]

const JavascriptLibraryItems = [
    "jshint.js",
    "jshint.js",
    "vue.js",
    "vue.min.js",
    "socket.io.js",
    "codemirror.js",
    "lorem.js",
    "vue3.js",
    "katex.min.js",
    "vuex.min.js",
    "nerdamer.js",
    "katex.min.css",
    "jquery.min.js",
    "mathquill.min.js",
    "mathquill.css",
    "prosemirror.js",
    "prosemirror.css",
    "standalone.min.js",
    "jsxgraphcore.js",
    "jsxgraph.css",
    "parser-babel.js",
    "parser-html.min.js"
]

const BASE_CSS = `

    * {
        box-sizing: border-box; margin: 0; padding: 0;
        outline: none;
    }
    body, html {
        height: 100%; width: 100%;
        font-family: sans;
    }
    html {
        font-size: 12pt;
    }
    body {
         position: relative;
    }

.container {
  background: linear-gradient(to right, #F43B47, #453A94);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}


    .button {
      border-radius: 5px;
      cursor: pointer;
      display: inline-block;
      font-size: 16px;
      padding: 10px 20px;
    }


    .fade-enter-active { transition: opacity 1s }
    .fade-leave-active { transition: opacity 1.5s } 
    .fade-enter, .fade-leave-to { opacity: 0; }
`


const JavascriptLibraries = {
    jshint: ["jshint.js"],
    vue: ["vue.min.js"],
    io: ["socket.io.js"],
    codemirror: ["codemirror.js"],
    lorem: ["lorem.js"],
    vue3: ["vue3.js"],
    me: ['class.js', 'variables.js'],
    katex: ["katex.min.js", "katex.min.css"],
    vuex: ["vuex.min.js"],
    var: ["variables.js"],
    nerdamer: ["nerdamer.js"],
    jquery: ["jquery.min.js"],
    mathquill: ["mathquill.min.js", "mathquill.css"],
    prosemirror: ["prosemirror.js", "prosemirror.css"],
    prettier: [
        "standalone.min.js",
        "parser-babel.js",
        "parser-html.min.js"
    ],
    jsx: ["jsxgraphcore.js", "jsxgraph.css"]
}
const javascriptBasicTypes = [
    "Function",
    "Number",
    "Object",
    "Array",
    "Set",
    "Promise",
    "Null",
    "Undefined",
    "String"
]

const vueKeys = [
    "_uid",
    "_isVue",
    "$options",
    "_renderProxy",
    "_self",
    "$parent",
    "$root",
    "$children",
    "$refs",
    "_watcher",
    "_inactive",
    "_directInactive",
    "_isMounted",
    "_isDestroyed",
    "_isBeingDestroyed",
    "_events",
    "_hasHookEvent",
    "_vnode",
    "_staticTrees",
    "$vnode",
    "$slots",
    "$scopedSlots",
    "_c",
    "$createElement",
    "$attrs",
    "$listeners",
    "_watchers",
    "_props",
    "_data",
    "$el"
]

const colorBrewer = {
    sequential: {
        OrRd: [
            "#fff7ec",
            "#fee8c8",
            "#fdd49e",
            "#fdbb84",
            "#fc8d59",
            "#ef6548",
            "#d7301f",
            "#b30000",
            "#7f0000"
        ],
        PuBu: [
            "#fff7fb",
            "#ece7f2",
            "#d0d1e6",
            "#a6bddb",
            "#74a9cf",
            "#3690c0",
            "#0570b0",
            "#045a8d",
            "#023858"
        ],
        BuPu: [
            "#f7fcfd",
            "#e0ecf4",
            "#bfd3e6",
            "#9ebcda",
            "#8c96c6",
            "#8c6bb1",
            "#88419d",
            "#810f7c",
            "#4d004b"
        ],
        Oranges: [
            "#fff5eb",
            "#fee6ce",
            "#fdd0a2",
            "#fdae6b",
            "#fd8d3c",
            "#f16913",
            "#d94801",
            "#a63603",
            "#7f2704"
        ],
        BuGn: [
            "#f7fcfd",
            "#e5f5f9",
            "#ccece6",
            "#99d8c9",
            "#66c2a4",
            "#41ae76",
            "#238b45",
            "#006d2c",
            "#00441b"
        ],
        YlOrBr: [
            "#ffffe5",
            "#fff7bc",
            "#fee391",
            "#fec44f",
            "#fe9929",
            "#ec7014",
            "#cc4c02",
            "#993404",
            "#662506"
        ],
        YlGn: [
            "#ffffe5",
            "#f7fcb9",
            "#d9f0a3",
            "#addd8e",
            "#78c679",
            "#41ab5d",
            "#238443",
            "#006837",
            "#004529"
        ],
        Reds: [
            "#fff5f0",
            "#fee0d2",
            "#fcbba1",
            "#fc9272",
            "#fb6a4a",
            "#ef3b2c",
            "#cb181d",
            "#a50f15",
            "#67000d"
        ],
        RdPu: [
            "#fff7f3",
            "#fde0dd",
            "#fcc5c0",
            "#fa9fb5",
            "#f768a1",
            "#dd3497",
            "#ae017e",
            "#7a0177",
            "#49006a"
        ],
        Greens: [
            "#f7fcf5",
            "#e5f5e0",
            "#c7e9c0",
            "#a1d99b",
            "#74c476",
            "#41ab5d",
            "#238b45",
            "#006d2c",
            "#00441b"
        ],
        YlGnBu: [
            "#ffffd9",
            "#edf8b1",
            "#c7e9b4",
            "#7fcdbb",
            "#41b6c4",
            "#1d91c0",
            "#225ea8",
            "#253494",
            "#081d58"
        ],
        Purples: [
            "#fcfbfd",
            "#efedf5",
            "#dadaeb",
            "#bcbddc",
            "#9e9ac8",
            "#807dba",
            "#6a51a3",
            "#54278f",
            "#3f007d"
        ],
        GnBu: [
            "#f7fcf0",
            "#e0f3db",
            "#ccebc5",
            "#a8ddb5",
            "#7bccc4",
            "#4eb3d3",
            "#2b8cbe",
            "#0868ac",
            "#084081"
        ],
        Greys: [
            "#ffffff",
            "#f0f0f0",
            "#d9d9d9",
            "#bdbdbd",
            "#969696",
            "#737373",
            "#525252",
            "#252525",
            "#000000"
        ],
        YlOrRd: [
            "#ffffcc",
            "#ffeda0",
            "#fed976",
            "#feb24c",
            "#fd8d3c",
            "#fc4e2a",
            "#e31a1c",
            "#bd0026",
            "#800026"
        ],
        PuRd: [
            "#f7f4f9",
            "#e7e1ef",
            "#d4b9da",
            "#c994c7",
            "#df65b0",
            "#e7298a",
            "#ce1256",
            "#980043",
            "#67001f"
        ],
        Blues: [
            "#f7fbff",
            "#deebf7",
            "#c6dbef",
            "#9ecae1",
            "#6baed6",
            "#4292c6",
            "#2171b5",
            "#08519c",
            "#08306b"
        ],
        PuBuGn: [
            "#fff7fb",
            "#ece2f0",
            "#d0d1e6",
            "#a6bddb",
            "#67a9cf",
            "#3690c0",
            "#02818a",
            "#016c59",
            "#014636"
        ],
        Viridis: [
            "#440154",
            "#482777",
            "#3f4a8a",
            "#31678e",
            "#26838f",
            "#1f9d8a",
            "#6cce5a",
            "#b6de2b",
            "#fee825"
        ]
    },
    divergent: {
        Spectral: [
            "#9e0142",
            "#d53e4f",
            "#f46d43",
            "#fdae61",
            "#fee08b",
            "#ffffbf",
            "#e6f598",
            "#abdda4",
            "#66c2a5",
            "#3288bd",
            "#5e4fa2"
        ],
        RdYlGn: [
            "#a50026",
            "#d73027",
            "#f46d43",
            "#fdae61",
            "#fee08b",
            "#ffffbf",
            "#d9ef8b",
            "#a6d96a",
            "#66bd63",
            "#1a9850",
            "#006837"
        ],
        RdBu: [
            "#67001f",
            "#b2182b",
            "#d6604d",
            "#f4a582",
            "#fddbc7",
            "#f7f7f7",
            "#d1e5f0",
            "#92c5de",
            "#4393c3",
            "#2166ac",
            "#053061"
        ],
        PiYG: [
            "#8e0152",
            "#c51b7d",
            "#de77ae",
            "#f1b6da",
            "#fde0ef",
            "#f7f7f7",
            "#e6f5d0",
            "#b8e186",
            "#7fbc41",
            "#4d9221",
            "#276419"
        ],
        PRGn: [
            "#40004b",
            "#762a83",
            "#9970ab",
            "#c2a5cf",
            "#e7d4e8",
            "#f7f7f7",
            "#d9f0d3",
            "#a6dba0",
            "#5aae61",
            "#1b7837",
            "#00441b"
        ],
        RdYlBu: [
            "#a50026",
            "#d73027",
            "#f46d43",
            "#fdae61",
            "#fee090",
            "#ffffbf",
            "#e0f3f8",
            "#abd9e9",
            "#74add1",
            "#4575b4",
            "#313695"
        ],
        BrBG: [
            "#543005",
            "#8c510a",
            "#bf812d",
            "#dfc27d",
            "#f6e8c3",
            "#f5f5f5",
            "#c7eae5",
            "#80cdc1",
            "#35978f",
            "#01665e",
            "#003c30"
        ],
        RdGy: [
            "#67001f",
            "#b2182b",
            "#d6604d",
            "#f4a582",
            "#fddbc7",
            "#ffffff",
            "#e0e0e0",
            "#bababa",
            "#878787",
            "#4d4d4d",
            "#1a1a1a"
        ],
        PuOr: [
            "#7f3b08",
            "#b35806",
            "#e08214",
            "#fdb863",
            "#fee0b6",
            "#f7f7f7",
            "#d8daeb",
            "#b2abd2",
            "#8073ac",
            "#542788",
            "#2d004b"
        ]
    },
    qualitative: {
        Set2: [
            "#66c2a5",
            "#fc8d62",
            "#8da0cb",
            "#e78ac3",
            "#a6d854",
            "#ffd92f",
            "#e5c494",
            "#b3b3b3"
        ],
        Accent: [
            "#7fc97f",
            "#beaed4",
            "#fdc086",
            "#ffff99",
            "#386cb0",
            "#f0027f",
            "#bf5b17",
            "#666666"
        ],
        Set1: [
            "#e41a1c",
            "#377eb8",
            "#4daf4a",
            "#984ea3",
            "#ff7f00",
            "#ffff33",
            "#a65628",
            "#f781bf",
            "#999999"
        ],
        Set3: [
            "#8dd3c7",
            "#ffffb3",
            "#bebada",
            "#fb8072",
            "#80b1d3",
            "#fdb462",
            "#b3de69",
            "#fccde5",
            "#d9d9d9",
            "#bc80bd",
            "#ccebc5",
            "#ffed6f"
        ],
        Dark2: [
            "#1b9e77",
            "#d95f02",
            "#7570b3",
            "#e7298a",
            "#66a61e",
            "#e6ab02",
            "#a6761d",
            "#666666"
        ],
        Paired: [
            "#a6cee3",
            "#1f78b4",
            "#b2df8a",
            "#33a02c",
            "#fb9a99",
            "#e31a1c",
            "#fdbf6f",
            "#ff7f00",
            "#cab2d6",
            "#6a3d9a",
            "#ffff99",
            "#b15928"
        ],
        Pastel2: [
            "#b3e2cd",
            "#fdcdac",
            "#cbd5e8",
            "#f4cae4",
            "#e6f5c9",
            "#fff2ae",
            "#f1e2cc",
            "#cccccc"
        ],
        Pastel1: [
            "#fbb4ae",
            "#b3cde3",
            "#ccebc5",
            "#decbe4",
            "#fed9a6",
            "#ffffcc",
            "#e5d8bd",
            "#fddaec",
            "#f2f2f2"
        ]
    }
}

const GoogleFontAliases = {
    code: "source-code-pro",
    "noto-chinese": "Noto Serif SC",
    crimson: "Crimson Text",
    poppins: "Poppins",
    montserrat: "Montserrat",
    alegreya: "Alegreya",
    playfair: "Playfair Display",
    bubbly: "Playfair Display",
    open: "Open Sans",
    os: "Open Sans",
    lato: "Lato",
    montserrat: "Montserrat",
    raleway: "Raleway",
    source: "Source Sans Pro",
    noto: "Noto Sans",
    chinese: "Noto Serif SC",
    chiserif: "Noto Serif SC",
    chisans: "Noto Sans SC",
    noji: "Noto Emoji",
    crimson: "Crimson Text",
    ubuntu: "Ubuntu",
    poppins: "Poppins",
    oswald: "Oswald",
    slab: "Roboto Slab",
    roboto: "Roboto",
    merriweather: "Merriweather",
    merry: "Merriweather",
    playfair: "Playfair Display",
    pt: "PT Serif",
    lora: "Lora",
    inter: "Inter",
    georgia: "Georgia",
    times: "Times New Roman",
    abril: "Abril Fatface",
    pacifico: "Pacifico",
    inconsolata: "Inconsolata",
    "source-code": "Source Code Pro",
    fira: "Fira Code",
    comic: "Comic Sans MS",
    nans: "Noto Sans",
    OT: "Old Standard TT",
    playfair: "Playfair Display",
    raleway: "Raleway",
    sourcepro: "Source Sans Pro",
    ubuntu: "Ubuntu",
    wsans: "Work Sans",
    algereya: "Alegreya",
    cabin: "Cabin",
    droid: "Droid Serif",
    exo: "Exo 2",
    garamond: "Garamond",
    josefin: "Josefin Sans",
    mw: "Merriweather",
    nunsans: "Nunito Sans",
    ptsans: "PT Sans",
    amatic: "Amatic SC",
    archivo: "Archivo Narrow",
    BK: "Baskerville",
    CR: "Cormorant",
    didot: "Didot",
    garamond: "EB Garamond",
    FT: "Futura",
    GH: "Gochi Hand",
    IM: "Impact",
    LB: "Lobster",
    lobster: "Lobster",
    MS: "Monospace",
    PC: "Pacifico",
    PL: "Palatino Linotype",
    PLY: "Play",
    QK: "Quicksand",
    SF: "Satisfy",
    SU: "Segoe UI",
    TR: "Trebuchet MS",
    VK: "Vollkorn"
}

var ColorBrewerAliases = {
    "yellow-green": "YlGn",
    "yellow-green-blue": "YlGnBu",
    "green-blue": "GnBu",
    "blue-green": "BuGn",
    "purple-blue-green": "PuBuGn",
    "purple-blue": "PuBu",
    "blue-purple": "BuPu",
    "red-purple": "RdPu",
    "purple-red": "PuRd",
    "orange-red": "OrRd",
    "yellow-orange-red": "YlOrRd",
    purples: "Purples",
    blues: "Blues",
    greens: "Greens",
    oranges: "Oranges",
    reds: "Reds",
    "purple-orange": "PuOr",
    "purple-green": "PRGn",
    "pink-green": "PiYG",
    "red-blue": "RdBu",
    "red-yellow-blue": "RdYlBu",
    "red-yellow-green": "RdYlGn",
    spectral: "Spectral"
}

const styleCSS = `
* {
    box-sizing: border-box; margin: 0; padding: 0;
    outline: none;
    overflow-x: hidden;
    overflow-y: scroll;
}

html, body {
    height: 100%; width: 100%;
}

html {
    font-size: 12pt;
}

body {
     position: relative;
}

.button {
  border-radius: 5px;
  cursor: pointer;
  display: inline-block;
  font-size: 16px;
  padding: 10px 20px;
}

.gradient-text {
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

hr {
  border: none;
  height: 1pt;
  background-color: black;
  margin: 6pt 0;
}
`
const vueComponentKeys = [
    "data",
    "props",
    "propsData",
    "computed",
    "methods",
    "watch",
    "beforeCreate",
    "created",
    "beforeMount",
    "mounted",
    "beforeUpdate",
    "updated",
    "activated",
    "deactivated",
    "beforeDestroy",
    "destroyed",
    "errorCaptured",
    "directives",
    "filters",
    "components",
    "provide",
    "inject",
    "inheritAttrs",
    "model",
    "functional",
    "render",
    "template",
    "name",
    "delimiters",
    "comments"
]

const svgTags = [
    "svg",
    "rect",
    "circle",
    "ellipse",
    "line",
    "polyline",
    "polygon",
    "path",
    "text",
    "g",
    "defs",
    "mask",
    "image",
    "use",
    "symbol",
    "clipPath",
    "foreignObject",
    "style",
    "animate",
    "animateTransform",
    "animateMotion",
    "stop",
    "linearGradient",
    "radialGradient"
]

const nativeWindowKeys = [
    "queryLocalFonts",
    "showDirectoryPicker",
    "showOpenFilePicker",
    "showSaveFilePicker",
    "webkitStorageInfo",
    "oncontentvisibilityautostatechanged",
    "window",
    "self",
    "document",
    "name",
    "location",
    "customElements",
    "history",
    "navigation",
    "locationbar",
    "menubar",
    "personalbar",
    "scrollbars",
    "statusbar",
    "toolbar",
    "status",
    "closed",
    "frames",
    "length",
    "top",
    "opener",
    "parent",
    "frameElement",
    "navigator",
    "origin",
    "external",
    "screen",
    "innerWidth",
    "innerHeight",
    "scrollX",
    "pageXOffset",
    "scrollY",
    "pageYOffset",
    "visualViewport",
    "screenX",
    "screenY",
    "outerWidth",
    "outerHeight",
    "devicePixelRatio",
    "clientInformation",
    "screenLeft",
    "screenTop",
    "styleMedia",
    "onsearch",
    "isSecureContext",
    "trustedTypes",
    "performance",
    "onappinstalled",
    "onbeforeinstallprompt",
    "crypto",
    "indexedDB",
    "sessionStorage",
    "localStorage",
    "onbeforexrselect",
    "onabort",
    "onbeforeinput",
    "onblur",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncuechange",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onerror",
    "onfocus",
    "onformdata",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onload",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onmousewheel",
    "onpause",
    "onplay",
    "onplaying",
    "onprogress",
    "onratechange",
    "onreset",
    "onresize",
    "onscroll",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "onauxclick",
    "ongotpointercapture",
    "onlostpointercapture",
    "onpointerdown",
    "onpointermove",
    "onpointerrawupdate",
    "onpointerup",
    "onpointercancel",
    "onpointerover",
    "onpointerout",
    "onpointerenter",
    "onpointerleave",
    "onselectstart",
    "onselectionchange",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "ontransitionrun",
    "ontransitionstart",
    "ontransitionend",
    "ontransitioncancel",
    "onafterprint",
    "onbeforeprint",
    "onbeforeunload",
    "onhashchange",
    "onlanguagechange",
    "onmessage",
    "onmessageerror",
    "onoffline",
    "ononline",
    "onpagehide",
    "onpageshow",
    "onpopstate",
    "onrejectionhandled",
    "onstorage",
    "onunhandledrejection",
    "onunload",
    "crossOriginIsolated",
    "scheduler",
    "alert",
    "atob",
    "blur",
    "btoa",
    "cancelAnimationFrame",
    "cancelIdleCallback",
    "captureEvents",
    "clearInterval",
    "clearTimeout",
    "close",
    "confirm",
    "createImageBitmap",
    "fetch",
    "find",
    "focus",
    "getComputedStyle",
    "getSelection",
    "matchMedia",
    "moveBy",
    "moveTo",
    "open",
    "postMessage",
    "print",
    "prompt",
    "queueMicrotask",
    "releaseEvents",
    "reportError",
    "requestAnimationFrame",
    "requestIdleCallback",
    "resizeBy",
    "resizeTo",
    "scroll",
    "scrollBy",
    "scrollTo",
    "setInterval",
    "setTimeout",
    "stop",
    "structuredClone",
    "webkitCancelAnimationFrame",
    "webkitRequestAnimationFrame",
    "originAgentCluster",
    "speechSynthesis",
    "oncontentvisibilityautostatechange",
    "openDatabase",
    "webkitRequestFileSystem",
    "webkitResolveLocalFileSystemURL",
    "chrome",
    "credentialless",
    "caches",
    "cookieStore",
    "ondevicemotion",
    "ondeviceorientation",
    "ondeviceorientationabsolute",
    "launchQueue",
    "onbeforematch",
    "getDigitalGoodsService",
    "getScreenDetails"
]
const TEX_TO_SYMBOL_COUNT = {
    "\\pi": 1,
    "\\sin": 1,
    "\\cos": 1,
    "\\tan": 1,
    "\\lim": 1,
    "\\int": 1,
    "\\oint": 1,
    "\\log": 1,
    "\\ln": 1,
    "\\frac": 1,
    "\\sum": 1,
    "\\prod": 1,
    "\\infty": 1,
    "\\prime": 1,
    "\\cdot": 1,
    "\\times": 1,
    "\\div": 1,
    "\\approx": 1,
    "\\equiv": 1,
    "\\neq": 1,
    "\\leq": 1,
    "\\geq": 1,
    "\\dots": 1,
    "\\vdots": 1,
    "\\ddots": 1
}

const commonStyleKeys = [
    "absolute",
    "zIndex",
    "relative",
    "display",
    "left",
    "top",
    "width",
    "height",
    "margin",
    "padding",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "marginTop",
    "paddingBottom",
    "paddingLeft",
    "paddingRight",
    "paddingTop",
    "color",
    "background",
    "paddingVertical",
    "marginVertical",
    "paddingHorizontal",
    "marginHorizontal",
    "color",
    "backgroundColor",
    "fontFamily",
    "fontSize",
    "fontWeight",
    "textAlign",
    "lineHeight",
    "padding",
    "margin",
    "border",
    "display",
    "position",
    "width",
    "height",
    "float",
    "clear",
    "textDecoration",
    "listStyleType",
    "boxSizing",
    "width",
    "height"
]
const UTF = {
    plus: "\u002B",
    minus: "\u2212",
    plus_or_minus: "\u00B1",
    times: "\u00D7",
    divided_by: "\u00F7",
    minus_or_plus: "\u2213",
    sum: "\u2211",
    square_root: "\u221A",
    infinity: "\u221E",
    approximately_equal: "\u2248",
    not_equal: "\u2260",
    less_than_or_equal_to: "\u2264",
    greater_than_or_equal_to: "\u2265",
    circled_plus: "\u2295",
    circled_times: "\u2297",
    dot: "\u22C5",
    intersection: "\u2229",
    union: "\u222A",
    element_of: "\u2208",
    not_an_element_of: "\u2209",
    empty_set: "\u2205",
    for_all: "\u2200",
    there_exists: "\u2203",
    there_does_not_exist: "\u2204"
}

const DIRECTIONS = [
    "top",
    "right",
    "bottom",
    "left"
    //"x",
    //"y",
]

var tailwindColorKeys = [
    "slate",
    "gray",
    "zinc",
    "neutral",
    "stone",
    "red",
    "orange",
    "amber",
    "yellow",
    "lime",
    "green",
    "emerald",
    "teal",
    "cyan",
    "sky",
    "blue",
    "indigo",
    "violet",
    "purple",
    "fuchsia",
    "pink",
    "rose"
]

const tailwindColors = {
  "white": {
    "50": "#e8e8e8",
    "100": "#d1d1d1",
    "200": "#b9b9b9",
    "300": "#a2a2a2",
    "400": "#8b8b8b",
    "500": "#747474",
    "600": "#5d5d5d",
    "700": "#464646",
    "800": "#2e2e2e",
    "900": "#171717"
  },
  "black": {
    "50": "#171717",
    "100": "#2e2e2e",
    "200": "#464646",
    "300": "#5d5d5d",
    "400": "#747474",
    "500": "#8b8b8b",
    "600": "#a2a2a2",
    "700": "#b9b9b9",
    "800": "#d1d1d1",
    "900": "#e8e8e8"
  },
    grey: {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#eeeeee",
        300: "#e0e0e0",
        400: "#bdbdbd",
        500: "#9e9e9e",
        600: "#757575",
        700: "#616161",
        800: "#424242",
        900: "#212121"
    },

    grey: {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#eeeeee",
        300: "#e0e0e0",
        400: "#bdbdbd",
        500: "#9e9e9e",
        600: "#757575",
        700: "#616161",
        800: "#424242",
        900: "#212121"
    },
    slate: {
        50: "#f8fafc",
        100: "#f1f5f9",
        200: "#e2e8f0",
        300: "#cbd5e1",
        400: "#94a3b8",
        500: "#64748b",
        600: "#475569",
        700: "#334155",
        800: "#1e293b",
        900: "#0f172a",
        950: "#020617"
    },
    gray: {
        50: "#f9fafb",
        100: "#f3f4f6",
        200: "#e5e7eb",
        300: "#d1d5db",
        400: "#9ca3af",
        500: "#6b7280",
        600: "#4b5563",
        700: "#374151",
        800: "#1f2937",
        900: "#111827",
        950: "#030712"
    },
    zinc: {
        50: "#fafafa",
        100: "#f4f4f5",
        200: "#e4e4e7",
        300: "#d4d4d8",
        400: "#a1a1aa",
        500: "#71717a",
        600: "#52525b",
        700: "#3f3f46",
        800: "#27272a",
        900: "#18181b",
        950: "#09090b"
    },
    neutral: {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#e5e5e5",
        300: "#d4d4d4",
        400: "#a3a3a3",
        500: "#737373",
        600: "#525252",
        700: "#404040",
        800: "#262626",
        900: "#171717",
        950: "#0a0a0a"
    },
    stone: {
        50: "#fafaf9",
        100: "#f5f5f4",
        200: "#e7e5e4",
        300: "#d6d3d1",
        400: "#a8a29e",
        500: "#78716c",
        600: "#57534e",
        700: "#44403c",
        800: "#292524",
        900: "#1c1917",
        950: "#0c0a09"
    },
    red: {
        50: "#fef2f2",
        100: "#fee2e2",
        200: "#fecaca",
        300: "#fca5a5",
        400: "#f87171",
        500: "#ef4444",
        600: "#dc2626",
        700: "#b91c1c",
        800: "#991b1b",
        900: "#7f1d1d",
        950: "#450a0a"
    },
    orange: {
        50: "#fff7ed",
        100: "#ffedd5",
        200: "#fed7aa",
        300: "#fdba74",
        400: "#fb923c",
        500: "#f97316",
        600: "#ea580c",
        700: "#c2410c",
        800: "#9a3412",
        900: "#7c2d12",
        950: "#431407"
    },
    amber: {
        50: "#fffbeb",
        100: "#fef3c7",
        200: "#fde68a",
        300: "#fcd34d",
        400: "#fbbf24",
        500: "#f59e0b",
        600: "#d97706",
        700: "#b45309",
        800: "#92400e",
        900: "#78350f",
        950: "#451a03"
    },
    yellow: {
        50: "#fefce8",
        100: "#fef9c3",
        200: "#fef08a",
        300: "#fde047",
        400: "#facc15",
        500: "#eab308",
        600: "#ca8a04",
        700: "#a16207",
        800: "#854d0e",
        900: "#713f12",
        950: "#422006"
    },
    lime: {
        50: "#f7fee7",
        100: "#ecfccb",
        200: "#d9f99d",
        300: "#bef264",
        400: "#a3e635",
        500: "#84cc16",
        600: "#65a30d",
        700: "#4d7c0f",
        800: "#3f6212",
        900: "#365314",
        950: "#1a2e05"
    },
    green: {
        50: "#f0fdf4",
        100: "#dcfce7",
        200: "#bbf7d0",
        300: "#86efac",
        400: "#4ade80",
        500: "#22c55e",
        600: "#16a34a",
        700: "#15803d",
        800: "#166534",
        900: "#14532d",
        950: "#052e16"
    },
    emerald: {
        50: "#ecfdf5",
        100: "#d1fae5",
        200: "#a7f3d0",
        300: "#6ee7b7",
        400: "#34d399",
        500: "#10b981",
        600: "#059669",
        700: "#047857",
        800: "#065f46",
        900: "#064e3b",
        950: "#022c22"
    },
    teal: {
        50: "#f0fdfa",
        100: "#ccfbf1",
        200: "#99f6e4",
        300: "#5eead4",
        400: "#2dd4bf",
        500: "#14b8a6",
        600: "#0d9488",
        700: "#0f766e",
        800: "#115e59",
        900: "#134e4a",
        950: "#042f2e"
    },
    cyan: {
        50: "#ecfeff",
        100: "#cffafe",
        200: "#a5f3fc",
        300: "#67e8f9",
        400: "#22d3ee",
        500: "#06b6d4",
        600: "#0891b2",
        700: "#0e7490",
        800: "#155e75",
        900: "#164e63",
        950: "#083344"
    },
    sky: {
        50: "#f0f9ff",
        100: "#e0f2fe",
        200: "#bae6fd",
        300: "#7dd3fc",
        400: "#38bdf8",
        500: "#0ea5e9",
        600: "#0284c7",
        700: "#0369a1",
        800: "#075985",
        900: "#0c4a6e",
        950: "#082f49"
    },
    blue: {
        50: "#eff6ff",
        100: "#dbeafe",
        200: "#bfdbfe",
        300: "#93c5fd",
        400: "#60a5fa",
        500: "#3b82f6",
        600: "#2563eb",
        700: "#1d4ed8",
        800: "#1e40af",
        900: "#1e3a8a",
        950: "#172554"
    },
    indigo: {
        50: "#eef2ff",
        100: "#e0e7ff",
        200: "#c7d2fe",
        300: "#a5b4fc",
        400: "#818cf8",
        500: "#6366f1",
        600: "#4f46e5",
        700: "#4338ca",
        800: "#3730a3",
        900: "#312e81",
        950: "#1e1b4b"
    },
    violet: {
        50: "#f5f3ff",
        100: "#ede9fe",
        200: "#ddd6fe",
        300: "#c4b5fd",
        400: "#a78bfa",
        500: "#8b5cf6",
        600: "#7c3aed",
        700: "#6d28d9",
        800: "#5b21b6",
        900: "#4c1d95",
        950: "#2e1065"
    },
    purple: {
        50: "#faf5ff",
        100: "#f3e8ff",
        200: "#e9d5ff",
        300: "#d8b4fe",
        400: "#c084fc",
        500: "#a855f7",
        600: "#9333ea",
        700: "#7e22ce",
        800: "#6b21a8",
        900: "#581c87",
        950: "#3b0764"
    },
    fuchsia: {
        50: "#fdf4ff",
        100: "#fae8ff",
        200: "#f5d0fe",
        300: "#f0abfc",
        400: "#e879f9",
        500: "#d946ef",
        600: "#c026d3",
        700: "#a21caf",
        800: "#86198f",
        900: "#701a75",
        950: "#4a044e"
    },
    pink: {
        50: "#fdf2f8",
        100: "#fce7f3",
        200: "#fbcfe8",
        300: "#f9a8d4",
        400: "#f472b6",
        500: "#ec4899",
        600: "#db2777",
        700: "#be185d",
        800: "#9d174d",
        900: "#831843",
        950: "#500724"
    },
    rose: {
        50: "#fff1f2",
        100: "#ffe4e6",
        200: "#fecdd3",
        300: "#fda4af",
        400: "#fb7185",
        500: "#f43f5e",
        600: "#e11d48",
        700: "#be123c",
        800: "#9f1239",
        900: "#881337",
        950: "#4c0519"
    }
}

const vimReservedWords = [
  "function",
  "return",
  "let",
  "g:",
  "b:",
  "l:",
  "a:",
  "if",
  "elseif",
  "else",
  "while",
  "for",
  "endwhile",
  "endfor",
  "echo",
  "execute",
  "normal",
  "silent",
  "source",
  "runtimepath",
  "try",
  "catch",
  "finally",
  "autocmd",
  "abort",
  "return",
  "exit",
  "v:errmsg",
  "v:count",
  "substitute",
  "match",
  "add",
  "remove",
  "extend",
  "has_key"
]

const javascriptReservedWords = [
    "arguments",
    "RegExp",
    "Error",
    "await",
    "break",
    "case",
    "catch",
    "class",
    "const",
    "continue",
    "debugger",
    "default",
    "delete",
    "do",
    "else",
    "enum",
    "export",
    "extends",
    "false",
    "finally",
    "for",
    "function",
    "if",
    "implements",
    "import",
    "in",
    "instanceof",
    "interface",
    "let",
    "new",
    "null",
    "package",
    "private",
    "protected",
    "public",
    "return",
    "static",
    "super",
    "switch",
    "this",
    "throw",
    "true",
    "try",
    "typeof",
    "var",
    "void",
    "while",
    "with",
    "yield",
    "Math",
    "Date",
    "Array",
    "Number",
    "Object",
    "String",
    "parseInt",
    "parseFloat",
    "document",
    "Promise",
    "JSON",
    "Map",
    "undefined",
    "console",
    "console.log",
    "Set",
    "encodeURIComponent",
    "decodeURIComponent"
]

const pythonReservedWords = [
    "False",
    "None",
    "True",
    "and",
    "as",
    "assert",
    "async",
    "await",
    "break",
    "class",
    "continue",
    "def",
    "del",
    "elif",
    "else",
    "except",
    "finally",
    "for",
    "from",
    "global",
    "if",
    "import",
    "in",
    "is",
    "lambda",
    "nonlocal",
    "not",
    "or",
    "pass",
    "raise",
    "return",
    "try",
    "while",
    "with",
    "yield"
]

// Define a dictionary object
const nojiAliases = {
    grinning: "😀",
    smiling: "😀",
    grin: "😁",
    beaming: "😁",
    joy: "😂",
    "tears of joy": "😂",
    laughing: "😂",
    rofl: "🤣",
    "rolling on the floor laughing": "🤣",
    smile: "😃",
    happy: "😃",
    "heart eyes": "🥰",
    skull: "💀",
    "victory hand": "✌️",
    "palm tree": "🌴",
    turtle: "🐢",
    goat: "🐐",
    mushroom: "🍄",
    "soccer ball": "⚽",
    beer: "🍻",
    crown: "👑",
    camera: "📸",
    "grimacing face": "😬",
    eyes: "👀",
    "police car light": "🚨",
    house: "🏡",
    dove: "🕊️",
    trophy: "🏆",
    "smiling cat with heart-eyes": "😻",
    "glowing star": "🌟",
    "nazar amulet": "🧿",
    "four leaf clover": "🍀",
    "artist palette": "🎨",
    "steaming bowl": "🍜"
    // Add more aliases and corresponding Noto Emoji characters here...
}

const htmlTags = [
    "thead",
    "tbody",
    "!DOCTYPE",
    "html",
    "template",
    "head",
    "title",
    "meta",
    "body",
    "header",
    "nav",
    "main",
    "section",
    "article",
    "aside",
    //"footer",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "p",
    "a",
    "img",
    "ul",
    "ol",
    "li",
    "table",
    "tr",
    "th",
    "td",
    "form",
    "input",
    "textarea",
    "button",
    "label",
    "select",
    "option",
    "audio",
    "video",
    "canvas",
    "svg",
    "iframe",
    "script",
    "style",
    "pre"
]

const javascriptNativeFunctions = [
    Number,
    String,
    Object,
    Array,
    Promise,
    Set,
    Function
]

const nativeJavascriptFunctions  = [
  "Array",
  "Math",
  "JSON",
  "Number",
  "Object",
  "console",
  "window",
]

const nativeJavascriptConstructors = [
    Number,
    String,
    Object,
    Array,
    Promise,
    Set,
    Function
]

const teachingStyleCSS = `

* {
    box-sizing: border-box; 
    margin: 0; 
    padding: 0;
    outline: none;
}


html {
    font-size: 16px;
}

body {
    position: relative;
}

.button {
    border-radius: 5px;
    cursor: pointer;
    display: inline-block;
    font-size: 16px;
    padding: 10px 20px;
}

.gradient-text {
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

hr {
    border: none;
    height: 1pt;
    background-color: black;
    margin: 6pt 0;
}
`
const emojis = {
    100: "\ud83d\udcaf",
    1234: "\ud83d\udd22",
    grinning: "\ud83d\ude00",
    smiley: "\ud83d\ude03",
    smile: "\ud83d\ude04",
    grin: "\ud83d\ude01",
    laughing: "\ud83d\ude06",
    sweat_smile: "\ud83d\ude05",
    rofl: "\ud83e\udd23",
    joy: "\ud83d\ude02",
    slightly_smiling_face: "\ud83d\ude42",
    upside_down_face: "\ud83d\ude43",
    wink: "\ud83d\ude09",
    blush: "\ud83d\ude0a",
    innocent: "\ud83d\ude07",
    smiling_face_with_three_hearts: "\ud83e\udd70",
    heart_eyes: "\ud83d\ude0d",
    star_struck: "\ud83e\udd29",
    kissing_heart: "\ud83d\ude18",
    kissing: "\ud83d\ude17",
    relaxed: "\u263a\ufe0f",
    kissing_closed_eyes: "\ud83d\ude1a",
    kissing_smiling_eyes: "\ud83d\ude19",
    smiling_face_with_tear: "\ud83e\udd72",
    yum: "\ud83d\ude0b",
    stuck_out_tongue: "\ud83d\ude1b",
    stuck_out_tongue_winking_eye: "\ud83d\ude1c",
    zany_face: "\ud83e\udd2a",
    stuck_out_tongue_closed_eyes: "\ud83d\ude1d",
    money_mouth_face: "\ud83e\udd11",
    hugs: "\ud83e\udd17",
    hand_over_mouth: "\ud83e\udd2d",
    shushing_face: "\ud83e\udd2b",
    thinking: "\ud83e\udd14",
    zipper_mouth_face: "\ud83e\udd10",
    raised_eyebrow: "\ud83e\udd28",
    neutral_face: "\ud83d\ude10",
    expressionless: "\ud83d\ude11",
    no_mouth: "\ud83d\ude36",
    face_in_clouds: "\ud83d\ude36\u200d\ud83c\udf2b\ufe0f",
    smirk: "\ud83d\ude0f",
    unamused: "\ud83d\ude12",
    roll_eyes: "\ud83d\ude44",
    grimacing: "\ud83d\ude2c",
    face_exhaling: "\ud83d\ude2e\u200d\ud83d\udca8",
    lying_face: "\ud83e\udd25",
    relieved: "\ud83d\ude0c",
    pensive: "\ud83d\ude14",
    sleepy: "\ud83d\ude2a",
    drooling_face: "\ud83e\udd24",
    sleeping: "\ud83d\ude34",
    mask: "\ud83d\ude37",
    face_with_thermometer: "\ud83e\udd12",
    face_with_head_bandage: "\ud83e\udd15",
    nauseated_face: "\ud83e\udd22",
    vomiting_face: "\ud83e\udd2e",
    sneezing_face: "\ud83e\udd27",
    hot_face: "\ud83e\udd75",
    cold_face: "\ud83e\udd76",
    woozy_face: "\ud83e\udd74",
    dizzy_face: "\ud83d\ude35",
    face_with_spiral_eyes: "\ud83d\ude35\u200d\ud83d\udcab",
    exploding_head: "\ud83e\udd2f",
    cowboy_hat_face: "\ud83e\udd20",
    partying_face: "\ud83e\udd73",
    disguised_face: "\ud83e\udd78",
    sunglasses: "\ud83d\ude0e",
    nerd_face: "\ud83e\udd13",
    monocle_face: "\ud83e\uddd0",
    confused: "\ud83d\ude15",
    worried: "\ud83d\ude1f",
    slightly_frowning_face: "\ud83d\ude41",
    open_mouth: "\ud83d\ude2e",
    hushed: "\ud83d\ude2f",
    astonished: "\ud83d\ude32",
    flushed: "\ud83d\ude33",
    pleading_face: "\ud83e\udd7a",
    frowning: "\ud83d\ude26",
    anguished: "\ud83d\ude27",
    fearful: "\ud83d\ude28",
    cold_sweat: "\ud83d\ude30",
    disappointed_relieved: "\ud83d\ude25",
    cry: "\ud83d\ude22",
    sob: "\ud83d\ude2d",
    scream: "\ud83d\ude31",
    confounded: "\ud83d\ude16",
    persevere: "\ud83d\ude23",
    disappointed: "\ud83d\ude1e",
    sweat: "\ud83d\ude13",
    weary: "\ud83d\ude29",
    tired_face: "\ud83d\ude2b",
    yawning_face: "\ud83e\udd71",
    triumph: "\ud83d\ude24",
    rage: "\ud83d\ude21",
    angry: "\ud83d\ude20",
    cursing_face: "\ud83e\udd2c",
    smiling_imp: "\ud83d\ude08",
    imp: "\ud83d\udc7f",
    skull: "\ud83d\udc80",
    skull_and_crossbones: "\u2620\ufe0f",
    hankey: "\ud83d\udca9",
    clown_face: "\ud83e\udd21",
    japanese_ogre: "\ud83d\udc79",
    japanese_goblin: "\ud83d\udc7a",
    ghost: "\ud83d\udc7b",
    alien: "\ud83d\udc7d",
    space_invader: "\ud83d\udc7e",
    robot: "\ud83e\udd16",
    smiley_cat: "\ud83d\ude3a",
    smile_cat: "\ud83d\ude38",
    joy_cat: "\ud83d\ude39",
    heart_eyes_cat: "\ud83d\ude3b",
    smirk_cat: "\ud83d\ude3c",
    kissing_cat: "\ud83d\ude3d",
    scream_cat: "\ud83d\ude40",
    crying_cat_face: "\ud83d\ude3f",
    pouting_cat: "\ud83d\ude3e",
    see_no_evil: "\ud83d\ude48",
    hear_no_evil: "\ud83d\ude49",
    speak_no_evil: "\ud83d\ude4a",
    kiss: "\ud83d\udc8b",
    love_letter: "\ud83d\udc8c",
    cupid: "\ud83d\udc98",
    gift_heart: "\ud83d\udc9d",
    sparkling_heart: "\ud83d\udc96",
    heartpulse: "\ud83d\udc97",
    heartbeat: "\ud83d\udc93",
    revolving_hearts: "\ud83d\udc9e",
    two_hearts: "\ud83d\udc95",
    heart_decoration: "\ud83d\udc9f",
    broken_heart: "\ud83d\udc94",
    heart_on_fire: "\u2764\ufe0f\u200d\ud83d\udd25",
    mending_heart: "\u2764\ufe0f\u200d\ud83e\ude79",
    heart: "\u2764\ufe0f"
}

const speechSynthesisLanguages = {
    "English (US)": "en-US",
    "Portuguese (Brazil)": "pt-BR",
    "Hindi (India)": "hi-IN",
    "French (France)": "fr-FR",
    "Spanish (Spain)": "es-ES",
    "Dutch (Netherlands)": "nl-NL",
    "Swedish (Sweden)": "sv-SE",
    "Japanese (Japan)": "ja-JP",
    "Korean (South Korea)": "ko-KR",
    "Swahili (Kenya)": "sw-KE",
    "Chinese (China)": "zh-CN",
    "Russian (Russia)": "ru-RU",
    "Ukrainian (Ukraine)": "uk-UA",
    "Malay (Malaysia)": "ms-MY",
    "Bengali (Bangladesh)": "bn-BD",
    "Bulgarian (Bulgaria)": "bg-BG",
    "Chinese (Taiwan)": "zh-TW",
    "Hebrew (Israel)": "iw-IL",
    "Turkish (Turkey)": "tr-TR",
    Arabic: "ar",
    "French (Canada)": "fr-CA",
    "Bosnian (Bosnia and Herzegovina)": "bs-BA",
    "Norwegian Bokmål (Norway)": "nb-NO",
    "Croatian (Croatia)": "hr-HR",
    "Indonesian (Indonesia)": "in-ID",
    "Greek (Greece)": "el-GR",
    "Filipino (Philippines)": "fil-PH",
    "Danish (Denmark)": "da-DK",
    "Tamil (India)": "ta-IN",
    "Finnish (Finland)": "fi-FI",
    "Hungarian (Hungary)": "hu-HU",
    "Sinhala (Sri Lanka)": "si-LK",
    "Slovak (Slovakia)": "sk-SK",
    "Marathi (India)": "mr-IN",
    "Khmer (Cambodia)": "km-KH",
    "Czech (Czech Republic)": "cs-CZ",
    "Portuguese (Portugal)": "pt-PT",
    "English (UK)": "en-GB",
    "Icelandic (Iceland)": "is-IS",
    "Kannada (India)": "kn-IN",
    "Latvian (Latvia)": "lv-LV",
    "Yue Chinese (Hong Kong SAR)": "yue-HK",
    "Telugu (India)": "te-IN",
    "Estonian (Estonia)": "et-EE",
    "Lithuanian (Lithuania)": "lt-LT",
    "Albanian (Albania)": "sq-AL",
    "Sundanese (Indonesia)": "su-ID",
    "Polish (Poland)": "pl-PL",
    "Romanian (Romania)": "ro-RO",
    "Nepali (Nepal)": "ne-NP",
    "Urdu (Pakistan)": "ur-PK"
}

var flatColorBrewer = {
    OrRd: [
        "#fff7ec",
        "#fee8c8",
        "#fdd49e",
        "#fdbb84",
        "#fc8d59",
        "#ef6548",
        "#d7301f",
        "#b30000",
        "#7f0000"
    ],
    PuBu: [
        "#fff7fb",
        "#ece7f2",
        "#d0d1e6",
        "#a6bddb",
        "#74a9cf",
        "#3690c0",
        "#0570b0",
        "#045a8d",
        "#023858"
    ],
    BuPu: [
        "#f7fcfd",
        "#e0ecf4",
        "#bfd3e6",
        "#9ebcda",
        "#8c96c6",
        "#8c6bb1",
        "#88419d",
        "#810f7c",
        "#4d004b"
    ],
    Oranges: [
        "#fff5eb",
        "#fee6ce",
        "#fdd0a2",
        "#fdae6b",
        "#fd8d3c",
        "#f16913",
        "#d94801",
        "#a63603",
        "#7f2704"
    ],
    BuGn: [
        "#f7fcfd",
        "#e5f5f9",
        "#ccece6",
        "#99d8c9",
        "#66c2a4",
        "#41ae76",
        "#238b45",
        "#006d2c",
        "#00441b"
    ],
    YlOrBr: [
        "#ffffe5",
        "#fff7bc",
        "#fee391",
        "#fec44f",
        "#fe9929",
        "#ec7014",
        "#cc4c02",
        "#993404",
        "#662506"
    ],
    YlGn: [
        "#ffffe5",
        "#f7fcb9",
        "#d9f0a3",
        "#addd8e",
        "#78c679",
        "#41ab5d",
        "#238443",
        "#006837",
        "#004529"
    ],
    Reds: [
        "#fff5f0",
        "#fee0d2",
        "#fcbba1",
        "#fc9272",
        "#fb6a4a",
        "#ef3b2c",
        "#cb181d",
        "#a50f15",
        "#67000d"
    ],
    RdPu: [
        "#fff7f3",
        "#fde0dd",
        "#fcc5c0",
        "#fa9fb5",
        "#f768a1",
        "#dd3497",
        "#ae017e",
        "#7a0177",
        "#49006a"
    ],
    Greens: [
        "#f7fcf5",
        "#e5f5e0",
        "#c7e9c0",
        "#a1d99b",
        "#74c476",
        "#41ab5d",
        "#238b45",
        "#006d2c",
        "#00441b"
    ],
    YlGnBu: [
        "#ffffd9",
        "#edf8b1",
        "#c7e9b4",
        "#7fcdbb",
        "#41b6c4",
        "#1d91c0",
        "#225ea8",
        "#253494",
        "#081d58"
    ],
    Purples: [
        "#fcfbfd",
        "#efedf5",
        "#dadaeb",
        "#bcbddc",
        "#9e9ac8",
        "#807dba",
        "#6a51a3",
        "#54278f",
        "#3f007d"
    ],
    GnBu: [
        "#f7fcf0",
        "#e0f3db",
        "#ccebc5",
        "#a8ddb5",
        "#7bccc4",
        "#4eb3d3",
        "#2b8cbe",
        "#0868ac",
        "#084081"
    ],
    Greys: [
        "#ffffff",
        "#f0f0f0",
        "#d9d9d9",
        "#bdbdbd",
        "#969696",
        "#737373",
        "#525252",
        "#252525",
        "#000000"
    ],
    YlOrRd: [
        "#ffffcc",
        "#ffeda0",
        "#fed976",
        "#feb24c",
        "#fd8d3c",
        "#fc4e2a",
        "#e31a1c",
        "#bd0026",
        "#800026"
    ],
    PuRd: [
        "#f7f4f9",
        "#e7e1ef",
        "#d4b9da",
        "#c994c7",
        "#df65b0",
        "#e7298a",
        "#ce1256",
        "#980043",
        "#67001f"
    ],
    Blues: [
        "#f7fbff",
        "#deebf7",
        "#c6dbef",
        "#9ecae1",
        "#6baed6",
        "#4292c6",
        "#2171b5",
        "#08519c",
        "#08306b"
    ],
    PuBuGn: [
        "#fff7fb",
        "#ece2f0",
        "#d0d1e6",
        "#a6bddb",
        "#67a9cf",
        "#3690c0",
        "#02818a",
        "#016c59",
        "#014636"
    ],
    Viridis: [
        "#440154",
        "#482777",
        "#3f4a8a",
        "#31678e",
        "#26838f",
        "#1f9d8a",
        "#6cce5a",
        "#b6de2b",
        "#fee825"
    ],
    Spectral: [
        "#9e0142",
        "#d53e4f",
        "#f46d43",
        "#fdae61",
        "#fee08b",
        "#ffffbf",
        "#e6f598",
        "#abdda4",
        "#66c2a5",
        "#3288bd",
        "#5e4fa2"
    ],
    RdYlGn: [
        "#a50026",
        "#d73027",
        "#f46d43",
        "#fdae61",
        "#fee08b",
        "#ffffbf",
        "#d9ef8b",
        "#a6d96a",
        "#66bd63",
        "#1a9850",
        "#006837"
    ],
    RdBu: [
        "#67001f",
        "#b2182b",
        "#d6604d",
        "#f4a582",
        "#fddbc7",
        "#f7f7f7",
        "#d1e5f0",
        "#92c5de",
        "#4393c3",
        "#2166ac",
        "#053061"
    ],
    PiYG: [
        "#8e0152",
        "#c51b7d",
        "#de77ae",
        "#f1b6da",
        "#fde0ef",
        "#f7f7f7",
        "#e6f5d0",
        "#b8e186",
        "#7fbc41",
        "#4d9221",
        "#276419"
    ],
    PRGn: [
        "#40004b",
        "#762a83",
        "#9970ab",
        "#c2a5cf",
        "#e7d4e8",
        "#f7f7f7",
        "#d9f0d3",
        "#a6dba0",
        "#5aae61",
        "#1b7837",
        "#00441b"
    ],
    RdYlBu: [
        "#a50026",
        "#d73027",
        "#f46d43",
        "#fdae61",
        "#fee090",
        "#ffffbf",
        "#e0f3f8",
        "#abd9e9",
        "#74add1",
        "#4575b4",
        "#313695"
    ],
    BrBG: [
        "#543005",
        "#8c510a",
        "#bf812d",
        "#dfc27d",
        "#f6e8c3",
        "#f5f5f5",
        "#c7eae5",
        "#80cdc1",
        "#35978f",
        "#01665e",
        "#003c30"
    ],
    RdGy: [
        "#67001f",
        "#b2182b",
        "#d6604d",
        "#f4a582",
        "#fddbc7",
        "#ffffff",
        "#e0e0e0",
        "#bababa",
        "#878787",
        "#4d4d4d",
        "#1a1a1a"
    ],
    PuOr: [
        "#7f3b08",
        "#b35806",
        "#e08214",
        "#fdb863",
        "#fee0b6",
        "#f7f7f7",
        "#d8daeb",
        "#b2abd2",
        "#8073ac",
        "#542788",
        "#2d004b"
    ],
    Set2: [
        "#66c2a5",
        "#fc8d62",
        "#8da0cb",
        "#e78ac3",
        "#a6d854",
        "#ffd92f",
        "#e5c494",
        "#b3b3b3"
    ],
    Accent: [
        "#7fc97f",
        "#beaed4",
        "#fdc086",
        "#ffff99",
        "#386cb0",
        "#f0027f",
        "#bf5b17",
        "#666666"
    ],
    Set1: [
        "#e41a1c",
        "#377eb8",
        "#4daf4a",
        "#984ea3",
        "#ff7f00",
        "#ffff33",
        "#a65628",
        "#f781bf",
        "#999999"
    ],
    Set3: [
        "#8dd3c7",
        "#ffffb3",
        "#bebada",
        "#fb8072",
        "#80b1d3",
        "#fdb462",
        "#b3de69",
        "#fccde5",
        "#d9d9d9",
        "#bc80bd",
        "#ccebc5",
        "#ffed6f"
    ],
    Dark2: [
        "#1b9e77",
        "#d95f02",
        "#7570b3",
        "#e7298a",
        "#66a61e",
        "#e6ab02",
        "#a6761d",
        "#666666"
    ],
    Paired: [
        "#a6cee3",
        "#1f78b4",
        "#b2df8a",
        "#33a02c",
        "#fb9a99",
        "#e31a1c",
        "#fdbf6f",
        "#ff7f00",
        "#cab2d6",
        "#6a3d9a",
        "#ffff99",
        "#b15928"
    ],
    Pastel2: [
        "#b3e2cd",
        "#fdcdac",
        "#cbd5e8",
        "#f4cae4",
        "#e6f5c9",
        "#fff2ae",
        "#f1e2cc",
        "#cccccc"
    ],
    Pastel1: [
        "#fbb4ae",
        "#b3cde3",
        "#ccebc5",
        "#decbe4",
        "#fed9a6",
        "#ffffcc",
        "#e5d8bd",
        "#fddaec",
        "#f2f2f2"
    ]
}
const htmlColors = {
    aliceblue: "#f0f8ff",
    antiquewhite: "#faebd7",
    aqua: "#00ffff",
    aquamarine: "#7fffd4",
    azure: "#f0ffff",
    beige: "#f5f5dc",
    bisque: "#ffe4c4",
    black: "#000000",
    blanchedalmond: "#ffebcd",
    blue: "#0000ff",
    blueviolet: "#8a2be2",
    brown: "#a52a2a",
    burlywood: "#deb887",
    cadetblue: "#5f9ea0",
    chartreuse: "#7fff00",
    chocolate: "#d2691e",
    coral: "#ff7f50",
    cornflowerblue: "#6495ed",
    cornsilk: "#fff8dc",
    crimson: "#dc143c",
    cyan: "#00ffff",
    darkblue: "#00008b",
    darkcyan: "#008b8b",
    darkgoldenrod: "#b8860b",
    darkgray: "#a9a9a9",
    darkgreen: "#006400",
    darkgrey: "#a9a9a9",
    darkkhaki: "#bdb76b",
    darkmagenta: "#8b008b",
    darkolivegreen: "#556b2f",
    darkorange: "#ff8c00",
    darkorchid: "#9932cc",
    darkred: "#8b0000",
    darksalmon: "#e9967a",
    darkseagreen: "#8fbc8f",
    darkslateblue: "#483d8b",
    darkslategray: "#2f4f4f",
    darkslategrey: "#2f4f4f",
    darkturquoise: "#00ced1",
    darkviolet: "#9400d3",
    deeppink: "#ff1493",
    deepskyblue: "#00bfff",
    dimgray: "#696969",
    dimgrey: "#696969",
    dodgerblue: "#1e90ff",
    firebrick: "#b22222",
    floralwhite: "#fffaf0",
    forestgreen: "#228b22",
    fuchsia: "#ff00ff",
    gainsboro: "#dcdcdc",
    ghostwhite: "#f8f8ff",
    goldenrod: "#daa520",
    gold: "#ffd700",
    gray: "#808080",
    green: "#008000",
    greenyellow: "#adff2f",
    grey: "#808080",
    honeydew: "#f0fff0",
    hotpink: "#ff69b4",
    indianred: "#cd5c5c",
    indigo: "#4b0082",
    ivory: "#fffff0",
    khaki: "#f0e68c",
    lavenderblush: "#fff0f5",
    lavender: "#e6e6fa",
    lawngreen: "#7cfc00",
    lemonchiffon: "#fffacd",
    lightblue: "#add8e6",
    lightcoral: "#f08080",
    lightcyan: "#e0ffff",
    lightgoldenrodyellow: "#fafad2",
    lightgray: "#d3d3d3",
    lightgreen: "#90ee90",
    lightgrey: "#d3d3d3",
    lightpink: "#ffb6c1",
    lightsalmon: "#ffa07a",
    lightseagreen: "#20b2aa",
    lightskyblue: "#87cefa",
    lightslategray: "#778899",
    lightslategrey: "#778899",
    lightsteelblue: "#b0c4de",
    lightyellow: "#ffffe0",
    lime: "#00ff00",
    limegreen: "#32cd32",
    linen: "#faf0e6",
    magenta: "#ff00ff",
    maroon: "#800000",
    mediumaquamarine: "#66cdaa",
    mediumblue: "#0000cd",
    mediumorchid: "#ba55d3",
    mediumpurple: "#9370db",
    mediumseagreen: "#3cb371",
    mediumslateblue: "#7b68ee",
    mediumspringgreen: "#00fa9a",
    mediumturquoise: "#48d1cc",
    mediumvioletred: "#c71585",
    midnightblue: "#191970",
    mintcream: "#f5fffa",
    mistyrose: "#ffe4e1",
    moccasin: "#ffe4b5",
    navajowhite: "#ffdead",
    navy: "#000080",
    oldlace: "#fdf5e6",
    olive: "#808000",
    olivedrab: "#6b8e23",
    orange: "#ffa500",
    orangered: "#ff4500",
    orchid: "#da70d6",
    palegoldenrod: "#eee8aa",
    palegreen: "#98fb98",
    paleturquoise: "#afeeee",
    palevioletred: "#db7093",
    papayawhip: "#ffefd5",
    peachpuff: "#ffdab9",
    peru: "#cd853f",
    pink: "#ffc0cb",
    plum: "#dda0dd",
    powderblue: "#b0e0e6",
    purple: "#800080",
    rebeccapurple: "#663399",
    red: "#ff0000",
    rosybrown: "#bc8f8f",
    royalblue: "#4169e1",
    saddlebrown: "#8b4513",
    salmon: "#fa8072",
    sandybrown: "#f4a460",
    seagreen: "#2e8b57",
    seashell: "#fff5ee",
    sienna: "#a0522d",
    silver: "#c0c0c0",
    skyblue: "#87ceeb",
    slateblue: "#6a5acd",
    slategray: "#708090",
    slategrey: "#708090",
    snow: "#fffafa",
    springgreen: "#00ff7f",
    steelblue: "#4682b4",
    tan: "#d2b48c",
    teal: "#008080",
    thistle: "#d8bfd8",
    tomato: "#ff6347",
    turquoise: "#40e0d0",
    violet: "#ee82ee",
    wheat: "#f5deb3",
    white: "#ffffff",
    whitesmoke: "#f5f5f5",
    yellow: "#ffff00",
    yellowgreen: "#9acd32",
    red: "#ff6347",
    green: "#00ff7f",
    blue: "#b0e0e6",
}
const jsReversed = [
    "arguments",
    "await",
    "break",
    "case",
    "catch",
    "char",
    "class",
    "const",
    //'continue',
    "debugger",
    "default",
    "delete",
    "do",
    "else",
    "enum",
    "eval",
    "export",
    "false",
    "final",
    "finally",
    "for",
    "function",
    "if",
    "import",
    "in",
    "instanceof",
    "let",
    "new",
    //'null',
    //'super',
    //'this',
    "return",
    "static",
    "switch",
    "throw",
    "throws",
    //'true',
    "try",
    "typeof",
    "var",
    //'void',
    "while",
    "with",
    "yield"
]

const pythonOneSpaceWords = [
    "False",
    "None",
    "True",
    "and",
    "as",
    "assert",
    "async",
    "await",
    "break",
    "class",
    "continue",
    "def",
    "del",
    "elif",
    "else",
    "except",
    "finally",
    "for",
    "from",
    "global",
    "if",
    "import",
    "in",
    "is",
    "lambda",
    "nonlocal",
    "not",
    "or",
    "pass",
    "raise",
    "return",
    "try",
    "while",
    "with",
    "yield"
]

const javascriptOneSpaceWords = [
  'await',
  //'boolean',
  //'break',
  'byte',
  'case',
  'catch',
  'char',
  'class',
  'const',
  //'continue',
  'debugger',
  'default',
  'delete',
  'do',
  'else',
  'enum',
  'eval',
  'export',
  'false',
  'final',
  'finally',
  'for',
  'function',
  'if',
  'import',
  'in',
  'instanceof',
  'let',
  'new',
  //'null',
  //'super',
  //'this',
  'return',
  'static',
  'switch',
  'throw',
  'throws',
  //'true',
  'try',
  'typeof',
  'var',
  //'void',
  'while',
  'with',
  'yield'
]


const myColors = [
  "aliceblue",
  "coral",
  "cornflowerblue",
  "cornsilk",
  "crimson",
  "cyan",
  "fuchsia",
  "goldenrod",
  "honeydew",
  "hotpink",
  "indianred",
  "indigo",
  "ivory",
  "khaki",
  "lawngreen",
  "lemonchiffon",
  "lightcyan",
  "lightgreen",
  "lightgrey",
  "lightpink",
  "lightsalmon",
  "lightseagreen",
  "lightskyblue",
  "lightslategray",
  "lightslategrey",
  "lightsteelblue",
  "lightyellow",
  "rebeccapurple",
  "rosybrown",
  "royalblue",
  "salmon",
  "seagreen",
  "seashell",
  "springgreen",
  "steelblue",
  "tomato",
]

//console.log(Object.keys(tailwindColors))
//console.log(Object.keys(materialColors))



const indexedMaterialColors = {"red":["#ffebee","#ffcdd2","#ef9a9a","#e57373","#ef5350","#f44336","#e53935","#d32f2f","#c62828","#b71c1c","#ff8a80","#ff5252","#ff1744","#d50000"],"pink":["#fce4ec","#f8bbd0","#f48fb1","#f06292","#ec407a","#e91e63","#d81b60","#c2185b","#ad1457","#880e4f","#ff80ab","#ff4081","#f50057","#c51162"],"purple":["#f3e5f5","#e1bee7","#ce93d8","#ba68c8","#ab47bc","#9c27b0","#8e24aa","#7b1fa2","#6a1b9a","#4a148c","#ea80fc","#e040fb","#d500f9","#aa00ff"],"deepPurple":["#ede7f6","#d1c4e9","#b39ddb","#9575cd","#7e57c2","#673ab7","#5e35b1","#512da8","#4527a0","#311b92","#b388ff","#7c4dff","#651fff","#6200ea"],"indigo":["#e8eaf6","#c5cae9","#9fa8da","#7986cb","#5c6bc0","#3f51b5","#3949ab","#303f9f","#283593","#1a237e","#8c9eff","#536dfe","#3d5afe","#304ffe"],"blue":["#e3f2fd","#bbdefb","#90caf9","#64b5f6","#42a5f5","#2196f3","#1e88e5","#1976d2","#1565c0","#0d47a1","#82b1ff","#448aff","#2979ff","#2962ff"],"lightBlue":["#e1f5fe","#b3e5fc","#81d4fa","#4fc3f7","#29b6f6","#03a9f4","#039be5","#0288d1","#0277bd","#01579b","#80d8ff","#40c4ff","#00b0ff","#0091ea"],"cyan":["#e0f7fa","#b2ebf2","#80deea","#4dd0e1","#26c6da","#00bcd4","#00acc1","#0097a7","#00838f","#006064","#84ffff","#18ffff","#00e5ff","#00b8d4"],"teal":["#e0f2f1","#b2dfdb","#80cbc4","#4db6ac","#26a69a","#009688","#00897b","#00796b","#00695c","#004d40","#a7ffeb","#64ffda","#1de9b6","#00bfa5"],"green":["#e8f5e9","#c8e6c9","#a5d6a7","#81c784","#66bb6a","#4caf50","#43a047","#388e3c","#2e7d32","#1b5e20","#b9f6ca","#69f0ae","#00e676","#00c853"],"lightGreen":["#f1f8e9","#dcedc8","#c5e1a5","#aed581","#9ccc65","#8bc34a","#7cb342","#689f38","#558b2f","#33691e","#ccff90","#b2ff59","#76ff03","#64dd17"],"lime":["#f9fbe7","#f0f4c3","#e6ee9c","#dce775","#d4e157","#cddc39","#c0ca33","#afb42b","#9e9d24","#827717","#f4ff81","#eeff41","#c6ff00","#aeea00"],"yellow":["#fffde7","#fff9c4","#fff59d","#fff176","#ffee58","#ffeb3b","#fdd835","#fbc02d","#f9a825","#f57f17","#ffff8d","#ffff00","#ffea00","#ffd600"],"amber":["#fff8e1","#ffecb3","#ffe082","#ffd54f","#ffca28","#ffc107","#ffb300","#ffa000","#ff8f00","#ff6f00","#ffe57f","#ffd740","#ffc400","#ffab00"],"orange":["#fff3e0","#ffe0b2","#ffcc80","#ffb74d","#ffa726","#ff9800","#fb8c00","#f57c00","#ef6c00","#e65100","#ffd180","#ffab40","#ff9100","#ff6d00"],"deepOrange":["#fbe9e7","#ffccbc","#ffab91","#ff8a65","#ff7043","#ff5722","#f4511e","#e64a19","#d84315","#bf360c","#ff9e80","#ff6e40","#ff3d00","#dd2c00"],"brown":["#efebe9","#d7ccc8","#bcaaa4","#a1887f","#8d6e63","#795548","#6d4c41","#5d4037","#4e342e","#3e2723"],"grey":["#fafafa","#f5f5f5","#eeeeee","#e0e0e0","#bdbdbd","#9e9e9e","#757575","#616161","#424242","#212121"],"blueGrey":["#eceff1","#cfd8dc","#b0bec5","#90a4ae","#78909c","#607d8b","#546e7a","#455a64","#37474f","#263238"]}

function foo1687287516() {
    //import { appendSelf, writeUnitTest, read, clip, appendVariable, write, rpw, isFile, sysget, } from "./node-utils.js"
    //import { edit, abrev } from "./utils.js"
    appendSelf(Object.keys(materialColors).reduce((acc, x) => {
        const a = abrev(x)
        if (a === x) {
            if (!acc.hasOwnProperty(a[0])) {
                acc[a[0]] = x
            }
            acc[a] = x
        }
        else {
            acc[a] = x
            acc[x] = x
        }
        return acc
    }, {}))
}

const materialColorAliases = {
  "red": "red",
  "p": "pink",
  "pink": "pink",
  "purple": "purple",
  "dp": "deepPurple",
  "deepPurple": "deepPurple",
  "i": "indigo",
  "indigo": "indigo",
  "b": "blue",
  "blue": "blue",
  "lb": "lightBlue",
  "lightBlue": "lightBlue",
  "c": "cyan",
  "cyan": "cyan",
  "t": "teal",
  "teal": "teal",
  "g": "green",
  "green": "green",
  "lg": "lightGreen",
  "lightGreen": "lightGreen",
  "l": "lime",
  "lime": "lime",
  "y": "yellow",
  "yellow": "yellow",
  "a": "amber",
  "amber": "amber",
  "o": "orange",
  "orange": "orange",
  "do": "deepOrange",
  "deepOrange": "deepOrange",
  "brown": "brown",
  "grey": "grey",
  "bg": "blueGrey",
  "blueGrey": "blueGrey"
}

const shortMaterialColorAliases = {
  "r": "red",
  "p": "pink",
  "purple": "purple",
  "i": "indigo",
  "b": "blue",
  "lb": "lightBlue",
  "c": "cyan",
  "t": "teal",
  "g": "green",
  "lg": "lightGreen",
  "y": "yellow",
  "a": "amber",
  "o": "orange",
  "do": "deepOrange",
  "grey": "grey",
  "bg": "blueGrey",
}
var commonExtensions = [
    "js",
    "py",
    "txt",
    "json",
    "vim",
    "css",
    "html",
    "pdf",
    "svg",
    "jpg",
    "png",
    "typ",
]


const allHtmlTags = HTML_NO_CLOSERS.concat(HTML_CLOSING_TAGS)
const browserBindings = ['Vue', 'eval', 'window', 'ndy']

const terminalColors = {
    EMPTY: '',
    BLACK: '\x1b[30m',
    RED: '\x1b[31m',
    GREEN: '\x1b[32m',
    YELLOW: '\x1b[33m',
    BLUE: '\x1b[34m',
    RESET: '\x1b[0m',
    BRIGHT: '\x1b[1m',
    BOLD: '\x1b[1m',
}

const assertionErrorMessages = {
    'splitByRegex': {
        default: 'no match',
    },
    'objectGetter': 'Invalid $key to retrieve object',
    'mdComprehensiveVue': {
        default: 'A base component is required as the second arg',
    },
        'CSSBuilder2.build': 'The make fn does not exist',
        QueryList: 'QueryList requires transform()',
        "QueryList.set": 'QueryList requires transform()',
        "VueSetup.getComponent": {
            default: 'x is null',
            template: "The component doesnt exist for key [$key]. Most likely, you forget to register [$key] as an export.",
        },
        'CSSParserBuilder.run.functionWrap': {
            default: `items is empty.
                This happened for the first time on
                Tue 11 Jul 2023 03:59PM.

                The reason was forgot commas @ maxHeight return value in cssApps.js
            `,
        }
}

const huskyColorSchema = [
    {color: 'red'},
    {color: 'red'},
    {color: 'red'},
    {color: 'red'},
    {color: 'red'},
    {color: 'red'},
    {color: 'red'},
]
const colorSchemas = {
    husky: huskyColorSchema,
    asdf: huskyColorSchema,
}

const materialIcons = [
  "Hide",
  "Fill",
  "Search",
  "Home",
  "Menu",
  "Close",
  "Settings",
  "Done",
  "Expand More",
  "Check Circle",
  "Favorite",
  "Add",
  "Delete",
  "Arrow Back",
  "Star",
  "Chevron Right",
  "Logout",
  "Add Circle",
  "Cancel",
  "Arrow Forward",
  "More Vert",
  "Check",
  "Check Box",
  "Toggle On",
  "Grade",
  "Refresh",
  "Login",
  "Chevron Left",
  "Expand Less",
  "More Horiz",
  "Apps",
  "Download",
  "Remove",
  "Bolt",
  "Toggle Off",
  "Arrow Upward",
  "Filter List",
  "Delete Forever",
  "Autorenew",
  "Key",
  "Arrow Downward",
  "Sync",
  "Sort",
  "Block",
  "Add Box",
  "Restart Alt",
  "Menu Open",
  "Backspace",
  "Undo",
  "Done All",
  "Arrow Right",
  "Manage Search",
  "Double Arrow",
  "Sync Alt",
  "Zoom In",
  "Done Outline",
  "Drag Indicator",
  "Fullscreen",
  "Star Half",
  "Settings Accessibility",
  "Ios Share",
  "Reply",
  "Unfold More",
  "Library Add",
  "Cached",
  "Terminal",
  "Change Circle",
  "Swap Horiz",
  "Swap Vert",
  "Close Fullscreen",
  "App Registration",
  "File Open",
  "Minimize",
  "Open With",
  "Dataset",
  "Add Task",
  "Start",
  "Keyboard Voice",
  "Forward",
  "Downloading",
  "Settings Applications",
  "Compare Arrows",
  "Redo",
  "Publish",
  "Arrow Left",
  "Zoom Out",
  "Html",
  "Token",
  "Fullscreen Exit",
  "Delete Sweep",
  "First Page",
  "View Timeline",
  "Assistant Navigation",
  "Sync Problem",
  "Clear All",
  "Density Medium",
  "Heart Plus",
  "Expand",
  "Last Page",
  "Unfold Less",
  "Arrow Outward",
  "Download Done",
  "123",
  "Swipe Left",
  "Saved Search",
  "Place Item",
  "Maximize",
  "Javascript",
  "Output",
  "Search Off",
  "Swipe Up",
  "Fit Screen",
  "Select All",
  "Dynamic Form",
  "Hide Source",
  "Swipe Right",
  "Browse Gallery",
  "Check Small",
  "Css",
  "Density Small",
  "Assistant Direction",
  "Move Up",
  "Data Thresholding",
  "Install Mobile",
  "Move Down",
  "Abc",
  "Dataset Linked",
  "Enable",
  "Install Desktop",
  "View Kanban",
  "Browse Activity",
  "Reply All",
  "Switch Left",
  "Compress",
  "Swipe Down",
  "Remove Done",
  "Apps Outage",
  "Star Rate",
  "Hide",
  "Switch Right",
  "Swipe Vertical",
  "More Up",
  "Sync Disabled",
  "Pinch",
  "Eject",
  "Key Off",
  "Php",
  "View Cozy",
  "Transcribe",
  "Width Normal",
  "Heart Minus",
  "Share Reviews",
  "Width Full",
  "Extension Off",
  "More Down",
  "Width Wide",
  "Repartition",
  "Density Large",
  "Cycle",
  "Hls",
  "Hls Off",
  "Progress Activity",
  "Rebase",
  "Expand Content",
  "Expand All",
  "Rebase Edit",
  "Collapse All",
  "Empty Dashboard",
  "Arrow Split",
  "Switches",
  "Directory Sync",
  "Quick Reference",
  "Cards",
  "Deployed Code",
  "Side Navigation",
  "Data Check",
  "Acute",
  "Bubble",
  "Left Click",
  "Data Alert",
  "Move Item",
  "Steppers",
  "Stack",
  "Stat 3",
  "Page Info",
  "Search Check",
  "Point Scan",
  "Question Exchange",
  "Preliminary",
  "Toolbar",
  "Sweep",
  "New Window",
  "Captive Portal",
  "Page Control",
  "Patient List",
  "Stat 2",
  "Unknown Med",
  "Dialogs",
  "Stack Star",
  "Capture",
  "Step Into",
  "Arrow Insert",
  "Heart Check",
  "Magnification Large",
  "Partner Reports",
  "Drag Pan",
  "Magnification Small",
  "Stat 1",
  "Dropdown",
  "Sliders",
  "Move Group",
  "Step",
  "Bottom Navigation",
  "Stack Off",
  "All Match",
  "Bottom Drawer",
  "Buttons Alt",
  "Chip Extraction",
  "Bottom Sheets",
  "Chronic",
  "Pip",
  "Resize",
  "Tabs",
  "Chips",
  "Iframe",
  "Input Circle",
  "Reopen Window",
  "Ripples",
  "Rule Settings",
  "Toast",
  "Unknown 5",
  "Right Click",
  "Share Windows",
  "Shelf Position",
  "Subheader",
  "Drag Click",
  "Step Out",
  "Step Over",
  "Switch Access",
  "Error Med",
  "Amend",
  "App Badging",
  "Event List",
  "Output Circle",
  "Pip Exit",
  "Iframe Off",
  "Arrow Range",
  "Bubbles",
  "Arrows Outward",
  "Person",
  "Group",
  "Share",
  "Thumb Up",
  "Groups",
  "Person Add",
  "Public",
  "Handshake",
  "Support Agent",
  "Face",
  "Sentiment Satisfied",
  "Rocket Launch",
  "Group Add",
  "Workspace Premium",
  "Psychology",
  "Diversity 3",
  "Emoji Objects",
  "Water Drop",
  "Eco",
  "Pets",
  "Travel Explore",
  "Mood",
  "Sunny",
  "Quiz",
  "Sentiment Dissatisfied",
  "Military Tech",
  "Thumb Down",
  "Gavel",
  "Recycling",
  "Diamond",
  "Monitor Heart",
  "Emoji People",
  "Diversity 1",
  "Workspaces",
  "Vaccines",
  "Compost",
  "Forest",
  "Recommend",
  "Waving Hand",
  "Person Remove",
  "Wc",
  "Medication",
  "Sentiment Neutral",
  "Group Work",
  "Diversity 2",
  "Front Hand",
  "Psychology Alt",
  "Cruelty Free",
  "Man",
  "Medical Information",
  "Coronavirus",
  "Add Reaction",
  "Rocket",
  "Female",
  "Potted Plant",
  "Emoji Nature",
  "Rainy",
  "Person Off",
  "Cookie",
  "Woman",
  "Mood Bad",
  "Male",
  "Bedtime",
  "Solar Power",
  "Communication",
  "Thunderstorm",
  "Groups 2",
  "Emoji Flags",
  "Masks",
  "Hive",
  "Heart Broken",
  "Clear Day",
  "Boy",
  "Whatshot",
  "Cloudy Snowing",
  "Wind Power",
  "Emoji Transportation",
  "Elderly",
  "Face 6",
  "Reduce Capacity",
  "Sick",
  "Pregnant Woman",
  "Face 3",
  "Bloodtype",
  "Group Remove",
  "Egg",
  "Medication Liquid",
  "Groups 3",
  "Co2",
  "Clear Night",
  "Weight",
  "Skull",
  "Face 4",
  "Emoji Events",
  "Oil Barrel",
  "Transgender",
  "Elderly Woman",
  "Clean Hands",
  "Sanitizer",
  "Person 2",
  "Public Off",
  "Face 2",
  "Social Distance",
  "Routine",
  "Sign Language",
  "South America",
  "Sunny Snowing",
  "Emoji Symbols",
  "Garden Cart",
  "Flood",
  "Face 5",
  "Egg Alt",
  "Cyclone",
  "Girl",
  "Person 4",
  "Dentistry",
  "Tsunami",
  "Group Off",
  "Outdoor Garden",
  "Severe Cold",
  "Snowing",
  "Person 3",
  "Tornado",
  "Landslide",
  "Vaping Rooms",
  "Safety Divider",
  "Foggy",
  "Woman 2",
  "Volcano",
  "Man 2",
  "Blind",
  "Vape Free",
  "Not Accessible",
  "Man 4",
  "Radiology",
  "Rib Cage",
  "Hand Bones",
  "Bedtime Off",
  "Rheumatology",
  "Man 3",
  "Orthopedics",
  "Tibia",
  "Skeleton",
  "Partner Exchange",
  "Humerus",
  "Agender",
  "Femur",
  "Foot Bones",
  "Tibia Alt",
  "Femur Alt",
  "Humerus Alt",
  "Communities",
  "Diversity 4",
  "Ulna Radius",
  "Specific Gravity",
  "Cognition",
  "Breastfeeding",
  "Eyeglasses",
  "Psychiatry",
  "Labs",
  "Crowdsource",
  "Footprint",
  "Vital Signs",
  "Nutrition",
  "Neurology",
  "Social Leaderboard",
  "Demography",
  "Globe Asia",
  "Stethoscope",
  "Conditions",
  "Lab Research",
  "Sentiment Excited",
  "Clinical Notes",
  "Sentiment Stressed",
  "Taunt",
  "Altitude",
  "Glucose",
]


const chalkColors = {
    BLACK: '\x1b[30m',
    RED: '\x1b[31m',
    GREEN: '\x1b[32m',
    YELLOW: '\x1b[33m',
    BLUE: '\x1b[34m',
    RESET: '\x1b[0m',
    BRIGHT: '\x1b[1m',
}


const javascriptGrammarTerms = [
  "noSemi",
  "incdec",
  "incdecPrefix",
  "insertSemi",
  "spaces",
  "newline",
  "LineComment",
  "BlockComment",
  "Script",
  "ExportDeclaration",
  "Star",
  "VariableName",
  "String",
  "Escape",
  "FunctionDeclaration",
  "VariableDefinition",
  "TypeParamList",
  "TypeDefinition",
  "Number",
  "TemplateType",
  "InterpolationEnd",
  "templateType",
  "InterpolationStart",
  "typeofMemberExpression",
  "PropertyName",
  "TemplateString",
  "templateEscape",
  "templateExpr",
  "RegExp",
  "ArrayExpression",
  "Property",
  "PropertyDefinition",
  "Block",
  "TypeArgList",
  "LessThan",
  "ArgList",
  "UnaryExpression",
  "YieldExpression",
  "AwaitExpression",
  "ParenthesizedExpression",
  "ClassExpression",
  "ClassBody",
  "MethodDeclaration",
  "Decorator",
  "PrivatePropertyName",
  "PrivatePropertyDefinition",
  "PropertyDeclaration",
  "Optional",
  "TypeAnnotation",
  "StaticBlock",
  "FunctionExpression",
  "ArrowFunction",
  "ParamList",
  "ArrayPattern",
  "ObjectPattern",
  "PatternProperty",
  "MemberExpression",
  "BinaryExpression",
  "divide",
  "questionOp",
  "AssignmentExpression",
  "JSXElement",
  "JSXSelfCloseEndTag",
  "JSXStartTag",
  "JSXSelfClosingTag",
  "JSXIdentifier",
  "JSXLowerIdentifier",
  "JSXNamespacedName",
  "JSXMemberExpression",
  "JSXAttributeValue",
  "JSXEndTag",
  "JSXOpenTag",
  "JSXFragmentTag",
  "JSXText",
  "JSXEscape",
  "JSXStartCloseTag",
  "JSXCloseTag",
  "SequenceExpression",
  "TypeName",
  "ParamTypeList",
  "IndexedType",
  "Label",
  "ObjectType",
  "MethodType",
  "PropertyType",
  "IndexSignature",
  "TypePredicate",
  "ClassDeclaration",
  "VariableDeclaration",
  "TypeAliasDeclaration",
  "InterfaceDeclaration",
  "EnumDeclaration",
  "NamespaceDeclaration",
  "AmbientDeclaration",
  "ExportGroup",
  "ImportDeclaration",
  "ImportGroup",
  "ForSpec",
  "ForInSpec",
  "ForOfSpec",
  "SingleExpression",
  "SingleClassItem",
  "Dialect_jsx",
  "Dialect_ts"
]


const regexLibrary = {
    'function': /^(?:var|const|class|(?:async )?function(?:\*|!)?) (\w+)/
}


const shortMonths = [
  "jan",
  "feb",
  "mar",
  "apr",
  "may",
  "jun",
  "jul",
  "aug",
  "sep",
  "oct",
  "nov",
  "dec"
]

const months = [
  "january",
  "february",
  "march",
  "april",
  "may",
  "june",
  "july",
  "august",
  "september",
  "october",
  "november",
  "december"
]

var EMDASH = '—'


const stateContextJsonKeys = [
    'isContainer',
    "spacerValue",
    "overrideClass",
    "overrideTag",
    "computedStyle",
    //"computedStyle",
    //"computedStyle",
    "computedClass",
    "tag",
    "key",
    "html",
    "kwargs",
    "component",
    "props",
    "attrs",
    "slots",
    "style",
    "value",
    "type",
    "class",
    "events",
    "directives",
    "delete",
    "spacer",
    "text",
]



const svgContainerTags = [
    "g",
    "mask",
    "svg",
    "pattern",
    "marker",
    "symbol",
    "defs",
]

const turtleContextKeys = [
  "id",
  "class",
  "style",
  "title",
  "aria-label",
  "cx",
  "cy",
  "x",
  "y",
  "width",
  "height",
  "r",
  "rx",
  "ry",
  "d",
  "x1",
  "y1",
  "x2",
  "y2",
  "points",
  "fill",
  "stroke",
  "stroke-width",
  "opacity",
  "fill-opacity",
  "stroke-opacity",
  "linearGradient",
  "radialGradient",
  "pattern",
  "font-family",
  "font-size",
  "font-weight",
  "text-anchor",
  "transform",
  "clip-path",
  "mask",
  "filter",
  "tag",
  "name",
  "attrs",
  'value',
  'translate',
  'rotate',
]


const builtInClasses = [
    "Promise",
    "ReferenceError",
    "Set",
    "Proxy",
    "Function",
    "Number",
    "Error",
    "RegExp",
    "Reflect",
    "Object",
    "String",
    "WeakSet",
    "Array",
    "TypeError",
    "SyntaxError",
    "Symbol",
    "BigInt",
    "Map",
    "Boolean",
    "WeakMap",
    "Date"
]

const builtInFunctions = [
    "escape",
    "isNaN",
    "encodeURIComponent",
    "decodeURI",
    "unescape",
    "eval",
    "isFinite",
    "parseInt",
    "encodeURI",
    "decodeURIComponent",
    "parseFloat"
]

const cssAbrevs = {
  "ac": "align-content",
  "ai": "align-items",
  "as": "align-self",
  "a": "animation",
  "afm": "animation-fill-mode",
  "aic": "animation-iteration-count",
  "an": "animation-name",
  "aps": "animation-play-state",
  "atf": "animation-timing-function",
  "bv": "backface-visibility",
  "b": "border",
  "bbm": "background-blend-mode",
  "bc": "border-color",
  "bo": "background-origin",
  "bp": "background-position",
  "bs": "box-shadow",
  "bb": "border-bottom",
  "bbc": "border-bottom-color",
  "bblr": "border-bottom-left-radius",
  "bbrr": "border-bottom-right-radius",
  "bbs": "border-bottom-style",
  "bbw": "border-bottom-width",
  "bio": "border-image-outset",
  "bir": "border-image-repeat",
  "biw": "border-image-width",
  "bl": "border-left",
  "blc": "border-left-color",
  "bls": "border-left-style",
  "blw": "border-left-width",
  "brc": "border-right-color",
  "brs": "border-right-style",
  "brw": "border-right-width",
  "bt": "border-top",
  "btc": "border-top-color",
  "btlr": "border-top-left-radius",
  "btrr": "border-top-right-radius",
  "bts": "border-top-style",
  "btw": "border-top-width",
  "bw": "border-width",
  "bdb": "box-decoration-break",
  "c": "color",
  "cf": "column-fill",
  "cg": "column-gap",
  "crc": "column-rule-color",
  "crs": "column-rule-style",
  "crw": "column-rule-width",
  "cw": "column-width",
  "ci": "counter-increment",
  "d": "display",
  "ec": "empty-cells",
  "f": "flex",
  "fb": "flex-basis",
  "fd": "flex-direction",
  "ff": "font-family",
  "fg": "flex-grow",
  "fs": "font-size",
  "fw": "font-weight",
  "ffs": "font-feature-settings",
  "fk": "font-kerning",
  "fsa": "font-size-adjust",
  "fv": "font-variant",
  "fvc": "font-variant-caps",
  "g": "grid",
  "ga": "grid-area",
  "gac": "grid-auto-columns",
  "gaf": "grid-auto-flow",
  "gar": "grid-auto-rows",
  "gc": "grid-column",
  "gce": "grid-column-end",
  "gcg": "grid-column-gap",
  "gcs": "grid-column-start",
  "gg": "grid-gap",
  "gr": "grid-row",
  "gre": "grid-row-end",
  "grg": "grid-row-gap",
  "grs": "grid-row-start",
  "gt": "grid-template",
  "gta": "grid-template-areas",
  "gtc": "grid-template-columns",
  "gtr": "grid-template-rows",
  "hp": "hanging-punctuation",
  "h": "height",
  "i": "isolation",
  "jc": "justify-content",
  "l": "left",
  "ls": "letter-spacing",
  "lh": "line-height",
  "lsi": "list-style-image",
  "lsp": "list-style-position",
  "lst": "list-style-type",
  "m": "margin",
  "mb": "margin-bottom",
  "ml": "margin-left",
  "mr": "margin-right",
  "mt": "margin-top",
  "mh": [
    "max-height",
    "min-height"
  ],
  "mw": [
    "max-width",
    "min-width"
  ],
  "mbm": "mix-blend-mode",
  "of": "object-fit",
  "op": "object-position",
  "o": "opacity",
  "oc": "outline-color",
  "oo": "outline-offset",
  "os": "outline-style",
  "ow": "outline-width",
  "ox": "overflow-x",
  "oy": "overflow-y",
  "p": "padding",
  "pb": "padding-bottom",
  "pl": "padding-left",
  "pr": "padding-right",
  "pt": "padding-top",
  "pba": "page-break-after",
  "pbb": "page-break-before",
  "pbi": "page-break-inside",
  "po": "perspective-origin",
  "pe": "pointer-events",
  "q": "quotes",
  "r": "right",
  "rg": "row-gap",
  "sb": "scroll-behavior",
  "tl": "table-layout",
  "ta": "text-align",
  "tal": "text-align-last",
  "td": "text-decoration",
  "tdc": "text-decoration-color",
  "tdl": "text-decoration-line",
  "tds": "text-decoration-style",
  "ti": "text-indent",
  "tj": "text-justify",
  "tt": "text-transform",
  "t": "top",
  "tp": "transition-property",
  "ttf": "transition-timing-function",
  "ub": "unicode-bidi",
  "us": "user-select",
  "va": "vertical-align",
  "v": "visibility",
  "ws": "white-space",
  "w": "width",
  "wb": "word-break",
  "ww": "word-wrap",
  "wm": "writing-mode",
  "zi": "z-index",
  "bg": "background",
  "maxh": "max-height",
  "minh": "min-height",
  "maxw": "max-width",
  "minw": "min-width"
}

const QUESTION_WORDS = [
    'want',
    'istaw',
    'would',
    'are',
    'can',
    'for',
    'will',
    'which',
    'whose',
    'shud',
    'who',
    'what',
    'where',
    'when',
    'why',
    'how',
    'should',
    'could',
    'do',
    'is',
    'have',
    'has',
    'does',
    'are',
    'might',
    'would',
    'can',
    'for',
    'will',
    'which',
    'whose',
    'shud',
    'who',
    'what',
    'where',
    'when',
    'why',
    'how',
    'should',
    'could',
    'do',
    'is',
    'have',
    'has',
    'does',
    'are',
    'might',
]

const MATH_IGNORE_WORDS = ['equals', 'to', 'means', 'as', 'is']


//console.log()
//FILE_DIRECTORIES


const nativeLogs = [
    "console.log",
    "log",
    "print",
    "pprint",
]


const OPPOSITES = {
    '{': '}',
    visible: 'hidden',
    hidden: 'visible',
    '[': ']',
    '(': ')',
    true: false,
    false: true,
    '^': '$',
    '}': '{',
    ']': '[',
    '>': '<',
    '<': '>',
    '>=': '<=',
    '<=': '>=',
    '=': '=',
    1: 0,
    0: 1,
}


const vimPrefixes = [
  "iab",
  "iabbrev",
  "nnoremap",
  "inoremap",
  "vnoremap",
  "cnoremap",
  "nnoremenu",
  "inoremenu",
  "vnoremenu",
  "cnoremenu",
  "noreabbrev",
  "noremenu",
  "nmap",
  "imap",
  "vmap",
  "cmap",
  "inoreab",
  "set",
  "iunmap",
  "nunmap",
  "source",
]

const vimEscapeKeys = [
  "<Esc>",
  "<Tab>",
  "<Enter>",
  "<Space>",
  "<BS>",
  "<Del>",
  "<Up>",
  "<Down>",
  "<Left>",
  "<Right>",
  "<Home>",
  "<End>",
  "<PageUp>",
  "<PageDown>",
  "<F1>",
  "<F2>",
  "<F3>",
  "<F4>",
  "<F5>",
  "<F6>",
  "<F7>",
  "<F8>",
  "<F9>",
  "<F10>",
  "<F11>",
  "<F12>",
  "<Insert>",
  "<C-a>",
  "<C-b>",
  "<C-c>",
  "<C-d>",
  "<C-e>",
  "<C-f>",
  "<C-g>",
  "<C-h>",
  "<C-i>",
  "<C-j>",
  "<C-k>",
  "<C-l>",
  "<C-m>",
  "<C-n>",
  "<C-o>",
  "<C-p>",
  "<C-q>",
  "<C-r>",
  "<C-s>",
  "<C-t>",
  "<C-u>",
  "<C-v>",
  "<C-w>",
  "<C-x>",
  "<C-y>",
  "<C-z>",
]

const cssAttributeItems = [
  {"key": "padding-left", "alias": "pl", "type": "pmwh"},
  {"key": "padding-right", "alias": "pr", "type": "pmwh"},
  {"key": "padding-top", "alias": "pt", "type": "pmwh"},
  {"key": "padding-bottom", "alias": "pb", "type": "pmwh"},
  {"key": "margin-top", "alias": "mt", "type": "pmwh"},
  {"key": "margin-right", "alias": "mr", "type": "pmwh"},
  {"key": "margin-bottom", "alias": "mb", "type": "pmwh"},
  {"key": "margin-left", "alias": "ml", "type": "pmwh"},
  {"key": "width", "alias": "w", "type": "pmwh"},
  {"key": "height", "alias": "h", "type": "pmwh"},
  {"key": "margin", "alias": "m", "type": "pmwh"},
  {"key": "padding", "alias": "p", "type": "pmwh"},
  {"key": "top", "alias": "t", "type": "pmwh"},
  {"key": "right", "alias": "r", "type": "pmwh"},
  {"key": "bottom", "alias": "b", "type": "pmwh"},
  {"key": "left", "alias": "l", "type": "pmwh"},
  {"key": "left", "alias": "x", "type": "pmwh"},
  {"key": "top", "alias": "y", "type": "pmwh"},
  {"key": "min-width", "alias": "minw", "type": "pmwh"},
  {"key": "max-width", "alias": "wmax", "type": "pmwh"},
  {"key": "max-height", "alias": "hmax", "type": "pmwh"},
  {"key": "border-radius", "alias": "br", "type": "pmwh"},
  {"key": "max-width", "alias": "maxw", "type": "pmwh"},
  {"key": "min-height", "alias": "minh", "type": "pmwh"},
  {"key": "max-height", "alias": "maxh", "type": "pmwh"},
  {"key": "border-width", "alias": "bw", "type": "pmwh"},
  {"key": "gap", "alias": "gap", "type": "pmwh"},
  {"key": "row-gap", "alias": "rgap", "type": "pmwh"},
  {"key": "column-gap", "alias": "cgap", "type": "pmwh"},
  {"key": "font-size", "alias": "fs", "type": "pmwh"},
  {"alias": "mx", "type": "pmwh", "keys": ["margin-left", "margin-right"]},
  {"alias": "mwh", "type": "pmwh", "keys": ["min-width", "min-height"]},
  {"alias": "px", "type": "pmwh", "keys": ["padding-left", "padding-right"]},
  {"alias": "my", "type": "pmwh", "keys": ["margin-top", "margin-bottom"]},
  {"alias": "py", "type": "pmwh", "keys": ["padding-top", "padding-bottom"]},
  {"alias": "wh", "type": "pmwh", "keys": ["width", "height"]},
  {"key": "background-color", "alias": "bg", "type": "color"},
  {"key": "border-color", "alias": "bc", "type": "color"},
  {"key": "outline-color", "alias": "oc", "type": "color"},
  {"key": "color", "alias": "fc", "type": "color"},
  {"key": "z-index", "alias": "zi", "type": "pmwh", "isUnitless": true},
  {"key": "line-height", "alias": "lh", "type": "pmwh", "isUnitless": true},
  {"key": "opacity", "alias": "o", "type": "pmwh", "isUnitless": true}
]
var googleFontAliases2 = { // see googleFontAliases for a better version
    "AR": "Arial",
    "CB": "Calibri",
    "CA": "Cambria",
    "CS": "Comic Sans MS",
    "GE": "Georgia",
    "HN": "Helvetica Neue",
    "OS": "Open Sans",
    "RB": "Roboto",
    "TN": "Times New Roman",
    "VR": "Verdana",
    "LT": "Lato",
    "MT": "Montserrat",
    "NS": "Noto Sans",
    "OT": "Old Standard TT",
    "PF": "Playfair Display",
    "RW": "Raleway",
    "SP": "Source Sans Pro",
    "TH": "Tahoma",
    "UB": "Ubuntu",
    "WS": "Work Sans",
    "AG": "Alegreya",
    "CBN": "Cabin",
    "DS": "Droid Serif",
    "EX": "Exo 2",
    "FS": "Fira Sans",
    "GM": "Garamond",
    "JS": "Josefin Sans",
    "MW": "Merriweather",
    "NSA": "Nunito Sans",
    "PS": "PT Sans",
    "AF": "Abril Fatface",
    "AM": "Amatic SC",
    "AN": "Archivo Narrow",
    "BK": "Baskerville",
    "CR": "Cormorant",
    "DT": "Didot",
    "EBG": "EB Garamond",
    "FT": "Futura",
    "GH": "Gochi Hand",
    "IM": "Impact",
    "LB": "Lobster",
    "MS": "Monospace",
    "PC": "Pacifico",
    "PL": "Palatino Linotype",
    "PLY": "Play",
    "QK": "Quicksand",
    "SF": "Satisfy",
    "SU": "Segoe UI",
    "TR": "Trebuchet MS",
    "VK": "Vollkorn"
}


const properNouns = {
  "proper_nouns": [
    "John",
    "Mary",
    "New York City",
    "Paris",
    "Einstein",
    "Mona Lisa",
    "Amazon",
    "Microsoft",
    "Statue of Liberty"
  ],
  "states": [
    "Alabama",
    "Alaska",
    "Arizona",
    "Arkansas",
    "California",
    "Colorado",
    "Connecticut",
    "Delaware",
    "Florida",
    "Georgia",
    "Hawaii",
    "Idaho",
    "Illinois",
    "Indiana",
    "Iowa",
    "Kansas",
    "Kentucky",
    "Louisiana",
    "Maine",
    "Maryland",
    "Massachusetts",
    "Michigan",
    "Minnesota",
    "Mississippi",
    "Missouri",
    "Montana",
    "Nebraska",
    "Nevada",
    "New Hampshire",
    "New Jersey",
    "New Mexico",
    "New York",
    "North Carolina",
    "North Dakota",
    "Ohio",
    "Oklahoma",
    "Oregon",
    "Pennsylvania",
    "Rhode Island",
    "South Carolina",
    "South Dakota",
    "Tennessee",
    "Texas",
    "Utah",
    "Vermont",
    "Virginia",
    "Washington",
    "West Virginia",
    "Wisconsin",
    "Wyoming"
  ]
}

const commonMathWords =  [
    "add",
    "subtract",
    "multiply",
    "convert",
    "rectangle",
    "positive",
    "negative",
    "integer",
    "number",
    "triangle",
    "perimeter",
    "percent",
    "rectangular",
    "triangular",
    "circular",
    "cost",
    "chance",
    "price",
    "subtract",
    "multiply",
    "divide",
    "plus",
    "minus",
    "times",
    "equal",
    "greater",
    "less",
    "number",
    "total",
    "difference",
    "product",
    "quotient",
    "sum",
    "total",
    "remainder",
    "fraction",
    "decimal",
    "percent",
    "average",
    "ratio",
    "proportion",
    "perimeter",
    "area",
    "volume",
    "angle",
    "side",
    "length",
    "width",
    "height",
    "radius",
    "diameter",
    "square",
    "rectangle",
    "triangle",
    "circle",
    "trapezoid",
    "parallelogram",
    "cylinder",
    "cone",
    "sphere",
    "root",
    "factor",
    "prime",
    "odd",
    "even",
    "sequence",
    "expression",
    "variable",
    "equation",
    "inequality",
    "function",
    "graph",
    "coordinate",
    "axis",
    "plot",
    "slope",
    "intercept",
    "rate",
    "speed",
    "distance",
    "time",
    "work",
    "age",
    "money",
    "percentile",
    "population",
    "probability",
    "experiment",
    "sample",
    "data",
    "average",
    "median",
    "mode",
    "range",
    "standard",
    "deviation",
    "probability",
    "combination",
    "permutation",
    "probability",
    "percentile",
    "independent",
    "dependent",
    "random",
    "distribution",
    "hypotenuse",
    "theorem",
    "diagonal",
    "circumference",
    "quadrilateral",
    "polygon",
    "composite",
    "algebraic",
    "variable",
    "solution",
    "evaluate",
    "solve",
    "simplify",
    "factorize",
    "calculate",
    "geometry",
    "trigonometry",
    "statistics",
    "calculus",
    "measurement",
    "equivalent",
    "factor",
    "lcm",
    "gcm",
    "multiple",
    "prime",
    "divisible",
    "denominator",
    "numerator",
    "conversion"
    
]

const selfClosingTags = [
  "area",
  "base",
  "br",
  "col",
  "embed",
  "hr",
  "img",
  "input",
  "link",
  "meta",
  "source",
  "track",
  "wbr"
]

const vueComponentOptionKeys = [
    'import',
  "name",
  "components",
  "props",
  "data",
  "render",
  "template",
  "computed",
  "methods",
  "watch",
  "created",
  "mounted",
  "errorCaptured",
  "updated",
  "destroyed",
  "beforeCreate",
  "beforeMount",
  "beforeUpdate",
  "beforeDestroy",
  "directives",
  "filters",
  "mixins",
  "extends",
  "provide",
  "inject",
  "model",
  "parent",
  "functional",
    "contextHandlers",
    "contextHandle",
    "contextHandles",
    "store",
]


const vmap2 = {
    if: "v-if",
    model: "v-model",
    elif: "v-else-if",
    for: "v-for",
    bind: "v-bind",
    show: "v-show",
    'slot': "v-slot",
}

const CSSAttributeItems = [
  {"key": "padding-left", "alias": "pl", "type": "pmwh"},
  {"key": "padding-right", "alias": "pr", "type": "pmwh"},
  {"key": "padding-top", "alias": "pt", "type": "pmwh"},
  {"key": "padding-bottom", "alias": "pb", "type": "pmwh"},
  {"key": "margin-top", "alias": "mt", "type": "pmwh"},
  {"key": "margin-right", "alias": "mr", "type": "pmwh"},
  {"key": "margin-bottom", "alias": "mb", "type": "pmwh"},
  {"key": "margin-left", "alias": "ml", "type": "pmwh"},
  {"key": "width", "alias": "w", "type": "pmwh"},
  {"key": "height", "alias": "h", "type": "pmwh"},
  {"key": "margin", "alias": "m", "type": "pmwh"},
  {"key": "padding", "alias": "p", "type": "pmwh"},
  {"key": "top", "alias": "t", "type": "pmwh"},
  {"key": "right", "alias": "r", "type": "pmwh"},
  {"key": "bottom", "alias": "b", "type": "pmwh"},
  {"key": "left", "alias": "l", "type": "pmwh"},
  {"key": "left", "alias": "x", "type": "pmwh"},
  {"key": "top", "alias": "y", "type": "pmwh"},
  {"key": "min-width", "alias": "minw", "type": "pmwh"},
  {"key": "max-width", "alias": "maxw", "type": "pmwh"},
  {"key": "border-radius", "alias": "br", "type": "pmwh"},
  {"key": "min-height", "alias": "minh", "type": "pmwh"},
  {"key": "max-height", "alias": "maxh", "type": "pmwh"},
  {"key": "border-width", "alias": "bw", "type": "pmwh"},
  {"key": "gap", "alias": "gap", "type": "pmwh"},
  {"key": "row-gap", "alias": "rgap", "type": "pmwh"},
  {"key": "column-gap", "alias": "cgap", "type": "pmwh"},
  {"key": "font-size", "alias": "fs", "type": "pmwh"},
  {"alias": "mx", "type": "pmwh", "keys": ["margin-left", "margin-right"]},
  {"alias": "my", "type": "pmwh", "keys": ["margin-top", "margin-bottom"]},
  {"alias": "px", "type": "pmwh", "keys": ["padding-left", "padding-right"]},
  {"alias": "py", "type": "pmwh", "keys": ["padding-top", "padding-bottom"]},
  {"alias": "wh", "type": "pmwh", "keys": ["width", "height"]},
  {"key": "background-color", "alias": "bg", "type": "color"},
  {"key": "border-color", "alias": "bc", "type": "color"},
  {"key": "outline-color", "alias": "oc", "type": "color"},
  {"key": "color", "alias": "fc", "type": "color"},
  {"key": "z-index", "alias": "zi", "type": "pmwh", "isUnitless": true},
  {"key": "line-height", "alias": "lh", "type": "pmwh", "isUnitless": true},
  {"key": "opacity", "alias": "o", "type": "pmwh", "isUnitless": true}
]


const styleKeys = [
    "accentColor",
    "additiveSymbols",
    "alignContent",
    "alignItems",
    "alignSelf",
    "alignmentBaseline",
    "all",
    "animation",
    "animationComposition",
    "animationDelay",
    "animationDirection",
    "animationDuration",
    "animationFillMode",
    "animationIterationCount",
    "animationName",
    "animationPlayState",
    "animationRange",
    "animationRangeEnd",
    "animationRangeStart",
    "animationTimeline",
    "animationTimingFunction",
    "appRegion",
    "appearance",
    "ascentOverride",
    "aspectRatio",
    "backdropFilter",
    "backfaceVisibility",
    "background",
    "backgroundAttachment",
    "backgroundBlendMode",
    "backgroundClip",
    "backgroundColor",
    "backgroundImage",
    "backgroundOrigin",
    "backgroundPosition",
    "backgroundPositionX",
    "backgroundPositionY",
    "backgroundRepeat",
    "backgroundRepeatX",
    "backgroundRepeatY",
    "backgroundSize",
    "basePalette",
    "baselineShift",
    "baselineSource",
    "blockSize",
    "border",
    "borderBlock",
    "borderBlockColor",
    "borderBlockEnd",
    "borderBlockEndColor",
    "borderBlockEndStyle",
    "borderBlockEndWidth",
    "borderBlockStart",
    "borderBlockStartColor",
    "borderBlockStartStyle",
    "borderBlockStartWidth",
    "borderBlockStyle",
    "borderBlockWidth",
    "borderBottom",
    "borderBottomColor",
    "borderBottomLeftRadius",
    "borderBottomRightRadius",
    "borderBottomStyle",
    "borderBottomWidth",
    "borderCollapse",
    "borderColor",
    "borderEndEndRadius",
    "borderEndStartRadius",
    "borderImage",
    "borderImageOutset",
    "borderImageRepeat",
    "borderImageSlice",
    "borderImageSource",
    "borderImageWidth",
    "borderInline",
    "borderInlineColor",
    "borderInlineEnd",
    "borderInlineEndColor",
    "borderInlineEndStyle",
    "borderInlineEndWidth",
    "borderInlineStart",
    "borderInlineStartColor",
    "borderInlineStartStyle",
    "borderInlineStartWidth",
    "borderInlineStyle",
    "borderInlineWidth",
    "borderLeft",
    "borderLeftColor",
    "borderLeftStyle",
    "borderLeftWidth",
    "borderRadius",
    "borderRight",
    "borderRightColor",
    "borderRightStyle",
    "borderRightWidth",
    "borderSpacing",
    "borderStartEndRadius",
    "borderStartStartRadius",
    "borderStyle",
    "borderTop",
    "borderTopColor",
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "borderTopStyle",
    "borderTopWidth",
    "borderWidth",
    "bottom",
    "boxShadow",
    "boxSizing",
    "breakAfter",
    "breakBefore",
    "breakInside",
    "bufferedRendering",
    "captionSide",
    "caretColor",
    "clear",
    "clip",
    "clipPath",
    "clipRule",
    "color",
    "colorInterpolation",
    "colorInterpolationFilters",
    "colorRendering",
    "colorScheme",
    "columnCount",
    "columnFill",
    "columnGap",
    "columnRule",
    "columnRuleColor",
    "columnRuleStyle",
    "columnRuleWidth",
    "columnSpan",
    "columnWidth",
    "columns",
    "contain",
    "containIntrinsicBlockSize",
    "containIntrinsicHeight",
    "containIntrinsicInlineSize",
    "containIntrinsicSize",
    "containIntrinsicWidth",
    "container",
    "containerName",
    "containerType",
    "content",
    "contentVisibility",
    "counterIncrement",
    "counterReset",
    "counterSet",
    "cursor",
    "cx",
    "cy",
    "d",
    "descentOverride",
    "direction",
    "display",
    "dominantBaseline",
    "emptyCells",
    "fallback",
    "fill",
    "fillOpacity",
    "fillRule",
    "filter",
    "flex",
    "flexBasis",
    "flexDirection",
    "flexFlow",
    "flexGrow",
    "flexShrink",
    "flexWrap",
    "float",
    "floodColor",
    "floodOpacity",
    "font",
    "fontDisplay",
    "fontFamily",
    "fontFeatureSettings",
    "fontKerning",
    "fontOpticalSizing",
    "fontPalette",
    "fontSize",
    "fontStretch",
    "fontStyle",
    "fontSynthesis",
    "fontSynthesisSmallCaps",
    "fontSynthesisStyle",
    "fontSynthesisWeight",
    "fontVariant",
    "fontVariantAlternates",
    "fontVariantCaps",
    "fontVariantEastAsian",
    "fontVariantLigatures",
    "fontVariantNumeric",
    "fontVariantPosition",
    "fontVariationSettings",
    "fontWeight",
    "forcedColorAdjust",
    "gap",
    "grid",
    "gridArea",
    "gridAutoColumns",
    "gridAutoFlow",
    "gridAutoRows",
    "gridColumn",
    "gridColumnEnd",
    "gridColumnGap",
    "gridColumnStart",
    "gridGap",
    "gridRow",
    "gridRowEnd",
    "gridRowGap",
    "gridRowStart",
    "gridTemplate",
    "gridTemplateAreas",
    "gridTemplateColumns",
    "gridTemplateRows",
    "height",
    "hyphenateCharacter",
    "hyphenateLimitChars",
    "hyphens",
    "imageOrientation",
    "imageRendering",
    "inherits",
    "initialLetter",
    "initialValue",
    "inlineSize",
    "inset",
    "insetBlock",
    "insetBlockEnd",
    "insetBlockStart",
    "insetInline",
    "insetInlineEnd",
    "insetInlineStart",
    "isolation",
    "justifyContent",
    "justifyItems",
    "justifySelf",
    "left",
    "letterSpacing",
    "lightingColor",
    "lineBreak",
    "lineGapOverride",
    "lineHeight",
    "listStyle",
    "listStyleImage",
    "listStylePosition",
    "listStyleType",
    "margin",
    "marginBlock",
    "marginBlockEnd",
    "marginBlockStart",
    "marginBottom",
    "marginInline",
    "marginInlineEnd",
    "marginInlineStart",
    "marginLeft",
    "marginRight",
    "marginTop",
    "marker",
    "markerEnd",
    "markerMid",
    "markerStart",
    "mask",
    "maskType",
    "mathDepth",
    "mathShift",
    "mathStyle",
    "maxBlockSize",
    "maxHeight",
    "maxInlineSize",
    "maxWidth",
    "minBlockSize",
    "minHeight",
    "minInlineSize",
    "minWidth",
    "mixBlendMode",
    "negative",
    "objectFit",
    "objectPosition",
    "objectViewBox",
    "offset",
    "offsetAnchor",
    "offsetDistance",
    "offsetPath",
    "offsetPosition",
    "offsetRotate",
    "opacity",
    "order",
    "orphans",
    "outline",
    "outlineColor",
    "outlineOffset",
    "outlineStyle",
    "outlineWidth",
    "overflow",
    "overflowAnchor",
    "overflowClipMargin",
    "overflowWrap",
    "overflowX",
    "overflowY",
    "overlay",
    "overrideColors",
    "overscrollBehavior",
    "overscrollBehaviorBlock",
    "overscrollBehaviorInline",
    "overscrollBehaviorX",
    "overscrollBehaviorY",
    "pad",
    "padding",
    "paddingBlock",
    "paddingBlockEnd",
    "paddingBlockStart",
    "paddingBottom",
    "paddingInline",
    "paddingInlineEnd",
    "paddingInlineStart",
    "paddingLeft",
    "paddingRight",
    "paddingTop",
    "page",
    "pageBreakAfter",
    "pageBreakBefore",
    "pageBreakInside",
    "pageOrientation",
    "paintOrder",
    "perspective",
    "perspectiveOrigin",
    "placeContent",
    "placeItems",
    "placeSelf",
    "pointerEvents",
    "position",
    "prefix",
    "quotes",
    "r",
    "range",
    "resize",
    "right",
    "rotate",
    "rowGap",
    "rubyPosition",
    "rx",
    "ry",
    "scale",
    "scrollBehavior",
    "scrollMargin",
    "scrollMarginBlock",
    "scrollMarginBlockEnd",
    "scrollMarginBlockStart",
    "scrollMarginBottom",
    "scrollMarginInline",
    "scrollMarginInlineEnd",
    "scrollMarginInlineStart",
    "scrollMarginLeft",
    "scrollMarginRight",
    "scrollMarginTop",
    "scrollPadding",
    "scrollPaddingBlock",
    "scrollPaddingBlockEnd",
    "scrollPaddingBlockStart",
    "scrollPaddingBottom",
    "scrollPaddingInline",
    "scrollPaddingInlineEnd",
    "scrollPaddingInlineStart",
    "scrollPaddingLeft",
    "scrollPaddingRight",
    "scrollPaddingTop",
    "scrollSnapAlign",
    "scrollSnapStop",
    "scrollSnapType",
    "scrollTimeline",
    "scrollTimelineAxis",
    "scrollTimelineName",
    "scrollbarGutter",
    "shapeImageThreshold",
    "shapeMargin",
    "shapeOutside",
    "shapeRendering",
    "size",
    "sizeAdjust",
    "speak",
    "speakAs",
    "src",
    "stopColor",
    "stopOpacity",
    "stroke",
    "strokeDasharray",
    "strokeDashoffset",
    "strokeLinecap",
    "strokeLinejoin",
    "strokeMiterlimit",
    "strokeOpacity",
    "strokeWidth",
    "suffix",
    "symbols",
    "syntax",
    "system",
    "tabSize",
    "tableLayout",
    "textAlign",
    "textAlignLast",
    "textAnchor",
    "textCombineUpright",
    "textDecoration",
    "textDecorationColor",
    "textDecorationLine",
    "textDecorationSkipInk",
    "textDecorationStyle",
    "textDecorationThickness",
    "textEmphasis",
    "textEmphasisColor",
    "textEmphasisPosition",
    "textEmphasisStyle",
    "textIndent",
    "textOrientation",
    "textOverflow",
    "textRendering",
    "textShadow",
    "textSizeAdjust",
    "textTransform",
    "textUnderlineOffset",
    "textUnderlinePosition",
    "textWrap",
    "timelineScope",
    "top",
    "touchAction",
    "transform",
    "transformBox",
    "transformOrigin",
    "transformStyle",
    "transition",
    "transitionBehavior",
    "transitionDelay",
    "transitionDuration",
    "transitionProperty",
    "transitionTimingFunction",
    "translate",
    "unicodeBidi",
    "unicodeRange",
    "userSelect",
    "vectorEffect",
    "verticalAlign",
    "viewTimeline",
    "viewTimelineAxis",
    "viewTimelineInset",
    "viewTimelineName",
    "viewTransitionName",
    "visibility",
    "whiteSpaceCollapse",
    "widows",
    "width",
    "willChange",
    "wordBreak",
    "wordSpacing",
    "wordWrap",
    "writingMode",
    "x",
    "y",
    "zIndex",
    "zoom"
]



const chatgpt = {
  "incrementTable": {
    "dimensions": {
      "width": 1,
      "height": 1,
      "max-width": 1,
      "max-height": 1,
      "min-width": 1,
      "min-height": 1
    },
    "margins": {
      "margin": 1,
      "margin-top": 1,
      "margin-right": 1,
      "margin-bottom": 1,
      "margin-left": 1
    },
    "paddings": {
      "padding": 5,
      "padding-top": 5,
      "padding-right": 5,
      "padding-bottom": 5,
      "padding-left": 5
    },
    "borders": {
      "border-width": 1,
      "border-top-width": 1,
      "border-right-width": 1,
      "border-bottom-width": 1,
      "border-left-width": 1
    },
    "typography": {
      "font-size": 1,
      "letter-spacing": 0.1,
      "line-height": 0.1
    },
    "opacity": 0.1,
    "z-index": 1,
    "positioning": {
      "top": 1,
      "right": 1,
      "bottom": 1,
      "left": 1
    },
    "transforms": {
      "scale": 0.1,
      "rotate": 1,
      "translate": 5,
      "skew": 1
    },
    "outline": {
      "outline-width": 1
    },
    "column": {
      "column-width": 5
    },
    "flex": {
      "flex-basis": 5,
      "flex-grow": 1,
      "flex-shrink": 1
    },
    "animation": {
      "animation-delay": 100,
      "animation-duration": 1
    },
    "grid": {
      "grid-template-columns": 1,
      "grid-template-rows": 1,
      "grid-template-areas": 1,
      "grid-column-gap": 1,
      "grid-row-gap": 1
    },
    "filter": {
      "blur": 1,
      "brightness": 0.1,
      "contrast": 0.1,
      "grayscale": 0.1,
      "hue-rotate": 1,
      "invert": 0.1,
      "saturate": 0.1,
      "sepia": 0.1
    },
    "box-shadow": 1
  }
}

const cssIncrementTable = {
      "width": 1,
      "height": 1,
      "max-width": 1,
      "max-height": 1,
      "min-width": 1,
      "min-height": 1,
      "margin": 1,
      "margin-top": 1,
      "margin-right": 1,
      "margin-bottom": 1,
      "margin-left": 1,
      "padding": 5,
      "padding-top": 5,
      "padding-right": 5,
      "padding-bottom": 5,
      "padding-left": 5,
      "border-width": 1,
      "border-top-width": 1,
      "border-right-width": 1,
      "border-bottom-width": 1,
      "border-left-width": 1,
      "font-size": 1,
      "letter-spacing": 0.1,
      "line-height": 0.1,
    "opacity": 0.1,
    "z-index": 1,
      "top": 1,
      "right": 1,
      "bottom": 1,
      "left": 1,
      "scale": 0.1,
      "rotate": 1,
      "translate": 5,
      "skew": 1,
      "outline-width": 1,
      "column-width": 5,
      "flex-basis": 5,
      "flex-grow": 1,
      "flex-shrink": 1,
      "animation-delay": 100,
      "animation-duration": 1,
      "grid-template-columns": 1,
      "grid-template-rows": 1,
      "grid-template-areas": 1,
      "grid-column-gap": 1,
      "grid-row-gap": 1,
      "blur": 1,
      "brightness": 0.1,
      "contrast": 0.1,
      "grayscale": 0.1,
      "hue-rotate": 1,
      "invert": 0.1,
      "saturate": 0.1,
      "sepia": 0.1
}


const cssUnits = [
  'em', 'ex', 'ch', 'rem', 'vw', 'vh', 'vmin', 'vmax', // Relative units
  'px', 'cm', 'mm', 'in', 'pt', 'pc', // Absolute length units
  '%', // Percentage unit
  'fr', // Fractional unit for CSS Grid Layout
]
const standardJavascriptImports = [
    'foo'
]


const directions = [ 'top', 'right', 'left', 'bottom', ]



const baseVueHtmlTemplate = `
    html

`


const exampleArgTemplate = `
    $hr
    pure: true
    date: $date
    arg: 

    $arg

    code:

    function main(s) {
        
    }
`

const symbolNameRef = {
    '`': 'accentGrave',
    '~': 'tilde',
    '!': 'exclam',
    '@': 'at',
    '#': 'hash',
    '$': 'dollar',
    '%': 'percent',
    '^': 'caret',
    '&': 'ampersand',
    '*': 'asterisk',
    '(': 'leftParens',
    ')': 'rightParens',
    '-': 'hyphen',
    '_': 'underscore',
    '=': 'equal',
    '+': 'plus',
    '[': 'leftSquareBrace',
    ']': 'rightSquareBrace',
    '{': 'leftCurlyBrace',
    '}': 'rightCurlyBrace',
    ';': 'semicolon',
    ':': 'colon',
    '\'': 'apost',
    '"': 'quote',
    ',': 'comma',
    '.': 'period',
    '<': 'lessThan',
    '>': 'greaterThan',
    '/': 'slash',
    '?': 'questionMark',
    '\\': 'backslash',
    '|': 'pipe',
}


const lezerBaseIgnore = [
        ";",
        ":",
        "{",
        "}",
        "[",
        "]",
        "(", 
        ")",
        ",",
        "=",
        "AssignOp",
        "def",
        "class",
        "return",
        "for",
]

const operationAliases = {
	'+': 'addition',
	'+=': 'addition',
	'-': 'subtraction',
	'-=': 'subtraction',
	'*': 'multiplication',
	'*=': 'multiplication',
	'/': 'division',
	'/=': 'division',
	'%': 'modulus',
}

const commonFunctionNames = [
    "action",
    "transform",
    "identity",
    "parse",
]


const utf_star = '★'

const monthAbrevs = [
  "jan",
  "feb",
  "mar",
  "apr",
  "may",
  "jun",
  "jul",
  "aug",
  "sep",
  "oct",
  "nov",
  "dec"
]


const fileDict = {"serv":"/home/kdog3682/2023/serveVite.js","csa":"/home/kdog3682/2023/cssApps.js","t6c":"/home/kdog3682/CWF/public/t6components.js","fonts":"https://fonts.google.com/","roll":"/home/kdog3682/2023/rollup.js","e2":"/home/kdog3682/2023/examples2.js","mfj":"/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/email_this_page/manifest.json","ecc":"/home/kdog3682/CWD/ec-components.js","emr":"/home/kdog3682/2023/math-review.txt","fpdf":"/home/kdog3682/CWF/jch/fpdf.js","emt":"/home/kdog3682/CWF/public/exeter-math.txt","eme":"/home/kdog3682/2023/me.txt","ech":"/home/kdog3682/2023/changelog.md","csd":"css-data.cleaned.json","algm":"algebraic-methods.js","ecn":"/home/kdog3682/2023/code-notes.txt","eco":"/home/kdog3682/2023/compiled.js","scrape":"/home/kdog3682/CWF/public/scrape.js","ftcd":"/home/kdog3682/.vim/ftplugin/css-data.vim","emg":"/home/kdog3682/2023/mathgen.js","ecu":"/home/kdog3682/2023/css-utils.js","ra":"/home/kdog3682/2023/routerApps.js","ecx":"/home/kdog3682/2023/cm-next.js","firebase":"https://console.firebase.google.com/u/0/project/hammy-math-class/database/hammy-math-class-default-rtdb/data/~2F","fs":"/home/kdog3682/2023/fire.js","vtc":"/home/kdog3682/CWF/public/voice-to-command.js",".":"public2 serv.js","od":"/home/kdog3682/CWF/public/outbound-data.js","oe":"/home/kdog3682/2023/elementObjects.js","1":"/home/kdog3682/CWD/html.js","2":"/home/kdog3682/CWD/html.js","3":"/home/kdog3682/CWD/html2.js","nyc":"https://www.schools.nyc.gov/docs/default-source/default-document-library/parent-facing-calendar-2022-23","ec":"/home/kdog3682/CWF/public/ec.js","vtt":"/home/kdog3682/2023/vim.temp.txt","ou":"/home/kdog3682/CWF/jch/utils.js","notes":"/home/kdog3682/2023/notes.txt","ej":"/home/kdog3682/CWF/public/env.js","fmath":"/home/kdog3682/.vim/ftplugin/math.vim","pre":"/home/kdog3682/PYTHON/runExampleFile.py","ftmd":"/home/kdog3682/.vim/ftplugin/markdown.vim","H":"/home/kdog3682/CWF/public/r4.html","src":"/home/kdog3682/CWF/sandisk/randomColor.js","eu":"/home/kdog3682/2023/utils.js","cmc":"/home/kdog3682/2023/cm-components.js","base":"/home/kdog3682/2023/base.css","mlez":"/home/kdog3682/.npm-global/lib/node_modules/@lezer/markdown/dist/index.cjs","cwt":"https://docs.google.com/spreadsheets/d/1Y3KRa7m3Nc8Z9ZGnKDFflGl5mldGBcosY1XIBYMF_Uo/edit#gid=1470853595","cmg":"canvas-math-graph.js","cmh":"/home/kdog3682/CWF/public/cm.html","cmi":"cmtest/index.html","cmj":"/home/kdog3682/2023/cm.js","r6h":"/home/kdog3682/CWF/public/r6.html","pro":"/home/kdog3682/.profile","sir":"/home/kdog3682/SERVER/server.js","cmp":"/home/kdog3682/2023/cm-prettier.js","cmt":"/home/kdog3682/CM2/cm.test.js","cmu":"/home/kdog3682/2023/cm-utils.js","b":"/home/kdog3682/PYTHON/base.py","c":"/home/kdog3682/2023/clip.js","d":"/home/kdog3682/CWF/public/demo.html","e":"element-controller.js","f":"/home/kdog3682/2023/vuetify.js","bashrc":"~/.bashrc","h":"/home/kdog3682/CWF/public/h.js","i":"/home/kdog3682/2023/index.html","cmraw":"/home/kdog3682/CM2/cm.raw.js","m":"/home/kdog3682/2023/node_modules/@lezer/python/src/","n":"/home/kdog3682/2023/notes.txt","o":"/mnt/chromeos/MyFiles/Downloads/myext/options.js","p":"/home/kdog3682/PYTHON/pdf.py","q":"q.html","r":"render.js","s":"/home/kdog3682/2023/TEXTS/scratchpad.txt","t":"/home/kdog3682/2024/tickets.txt","u":"/home/kdog3682/2023/utils.js","v":"/home/kdog3682/2023/vuetify.js","x":"class.js.extracts.09-30-2022.log","env":"/home/kdog3682/PYTHON/env.py","enx":"/home/kdog3682/2023/next.js","hb":"/home/kdog3682/2023/pl-htmlBuilder.js","gram":"/home/kdog3682/CWF/gram.lang","ps1":"/home/kdog3682/2023/Puppeteer.js","v2":"/home/kdog3682/.vim/ftplugin/variables.10-12-2023.vim","rq":"/home/kdog3682/reddit-questions.txt","serf":"/home/kdog3682/2023/serveFile.js","firesj":"/home/kdog3682/FIREBASE/server.js","goo":"/home/kdog3682/CWF/public/goo.css","ttr":"./ttr.py","tts":"/home/kdog3682/2023/temp.txt.js","eca":"/home/kdog3682/2023/cssApps.js","rs":"/home/kdog3682/CWF/request-service.py","pa":"/home/kdog3682/2023/parse.js","lgc":"/home/kdog3682/latest-git-cloned-repo/files/en-us/web/css/align-self/index.md","pc":"/home/kdog3682/2023/pdfgen.colors.js","vue":"/home/kdog3682/2023/vuetify.js","rt":"/home/kdog3682/TEXTS/reddit.txt","ecm":"/home/kdog3682/2023/ec-main.js","pj":"/home/kdog3682/2023/package.json","pl":"/home/kdog3682/2023/parselib.js","pm":"/home/kdog3682/2023/packageManager.js","voice":"/home/kdog3682/CWF/public/voice-callbacks.js","cnt":"/home/kdog3682/2023/code-notes.txt","fb":"/home/kdog3682/PYTHON/fb.py","pr":"/home/kdog3682/CWF/public/print.js","ps":"/home/kdog3682/2023/Puppeteer2.js","tf4":"/home/kdog3682/CWD/testfile4.js","fh":"/home/kdog3682/CWF/file-help.txt","fi":"folder-info.json","gdata":"/home/kdog3682/2023/git-data2.json","fl":"/home/kdog3682/2024/files.log","fm":"/home/kdog3682/.vim/ftplugin/math.vim","fn":"/home/kdog3682/2024/function-notes.txt","fo":"foo.json","sto":"/home/kdog3682/CWF/storage.py","gdoc":"https://docs.google.com/document/d/1nx2EPubUQl4EQ9bT1coFVtoEyYeGMlhb3fCAjAZ55ew/edit","foo":"/home/kdog3682/CWF/public/foo.css","str":"/home/kdog3682/CWF/String.py","myeo":"/mnt/chromeos/MyFiles/Downloads/myext/options.js","boa":"https://bankofamerica.com","cmpj":"/home/kdog3682/CM2/package.json","sty":"/home/kdog3682/2024/style.css","var":"/home/kdog3682/2023/variables.js","txt":"/home/kdog3682/Resources2023/text.txt","cg":"/home/kdog3682/PYTHON/chatgpt.py","reportlab":"/mnt/chromeos/MyFiles/Downloads/reportlab-userguide.pdf","plug":"/home/kdog3682/.vim/autoload/plug.vim","eod":"/home/kdog3682/PYTHON/endOfDay.py","scra":"/home/kdog3682/CWF/scrape.py","ns":"/home/kdog3682/2023/nerdSolver.js","lpg":"/home/kdog3682/2023/node_modules/@lezer/python/src/python.grammar","g2":"/home/kdog3682/PYTHON/githubscript2.py","g3":"/home/kdog3682/RESOURCES/pl-htmlBuilder.js","cj":"/home/kdog3682/TEXTS/code.journal.txt","mr":"/home/kdog3682/2023/math-review.txt","hs":"/home/kdog3682/2023/hammy.js","co2":"/home/kdog3682/2023/codeOrganizer2.js","EC":"/home/kdog3682/2023/ElementController.js","tc":"/home/kdog3682/CWF/public/text-commands.vim","tur":"/home/kdog3682/2023/turtle.js","pm2":"/home/kdog3682/2023/packageManager2.js","gpt":"https://chat.openai.com","esm":"/home/kdog3682/2023/cm.esm.js","qg":"/home/kdog3682/CWF/public/question-generator.js","gist":"gist.html","dec":"/home/kdog3682/CWF/decorators.py","pug":"/home/kdog3682/CWF/public/pug.js","ga":"/home/kdog3682/PYTHON/ga.py","gb":"/home/kdog3682/2023/getBlocks.js","qq":"qq.html","cr":"/home/kdog3682/CWF/public/code-runner.js","qs":"/home/kdog3682/questions.js","pconf":"/home/kdog3682/2023/production.config.js","gh":"/home/kdog3682/2023/graph-helpers.js","gi":"/home/kdog3682/2023/.gitignore","ann":"/home/kdog3682/CWF/public2/annyang.js","gl":"/home/kdog3682/2024/git-logs.txt","mathematics":"/home/kdog3682/CWF/public/math","cuo":"/home/kdog3682/CWF/public/css-utils.js","gr":"/home/kdog3682/TEXTS/grades.txt","gs":"/home/kdog3682/CWF/GLOBALS.py","cmx":"/home/kdog3682/2023/cm-next.js","pye":"/home/kdog3682/PYTHON/examples.py","wc2":"/home/kdog3682/2023/worksheet-components-2.js","krt":"/home/kdog3682/CWF/public/katex.ref.txt","git2":"/home/kdog3682/PYTHON/githubscript2.py","flt":"/home/kdog3682/2024/file-notes.txt","ffr":"/home/kdog3682/2024/ffr.json","ein":"/home/kdog3682/2023/index.html","java":"/home/kdog3682/2023/javascript.dependencies.json","r1":"/home/kdog3682/CWD/raw.js","r2":"/home/kdog3682/CWF/public/r2.html","sam":"/home/kdog3682/2023/serverArgManager.js","r4":"/home/kdog3682/CWF/public/r4.js","r5":"/home/kdog3682/CWF/public/r5.html","r6":"/home/kdog3682/CWF/public/r6.html","Co":"/home/kdog3682/2023/CodeOrganizer.js","hb2":"/home/kdog3682/2023/htmlBuilder2.js","pup":"/home/kdog3682/CWF/public/puppet.js","mst":"/home/kdog3682/2023/math.singletons.txt","enu":"/home/kdog3682/2023/node-utils.js","h2":"/home/kdog3682/CWD/html2.js","ih2":"/home/kdog3682/2023/index2.html","lorem":"/home/kdog3682/2023/lorem.js","rD":"recursive.drafts.js","eps":"/home/kdog3682/2023/Puppeteer.js","net":"https://google.com","scss":"/home/kdog3682/2023/style.css","tvd":"/home/kdog3682/CWF/public/temp-vue-data.html","gui":"/home/kdog3682/CWF/public/gui.txt","dj":"/home/kdog3682/CWF/public/d.js","piph":"/home/kdog3682/pip.history","firei":"/home/kdog3682/FIREBASE/index.html","firej":"/home/kdog3682/FIREBASE/package.json","ws":"/home/kdog3682/2023/WindowStorage.js","new":"/home/kdog3682/CWF/public/new.js","gith":"git.html","fires":"/home/kdog3682/FIREBASE/index.js","gitj":"git.js","lib":"/home/kdog3682/CWF/libra.py","rc":"/home/kdog3682/2023/report-cards.txt","lss":"/home/kdog3682/2023/lezer-sampleString.js","emu":"/home/kdog3682/2023/ma.js","rh":"/home/kdog3682/CWF/public/r4.html","strf":"https://strftime.org/","rj":"run.js","rm":"/home/kdog3682/2023/raw-math.txt","nx":"/home/kdog3682/2023/next.js","rp":"/home/kdog3682/PYTHON/run.py","js2":"newhelpers.js2","he":"/home/kdog3682/CWF/public/html-edit.js","hf":"/home/kdog3682/CWD/helperfunctions.js","ru":"/home/kdog3682/CWF/reportlab-utils.py","hh":"/home/kdog3682/CWD/html-helpers.js","nerd":"/home/kdog3682/CWF/public/nerdamer-utils.js","hj":"/home/kdog3682/CWD/html3.js","hp":"/home/kdog3682/2023/htmlParser.js","bray":"/home/kdog3682/2023/bray.math.index.es.js","pub":"/home/kdog3682/CWF/public/public","ht":"/home/kdog3682/CWF/public/html-transform.js","emv":"/home/kdog3682/2023/my-files.json","vcj":"/home/kdog3682/2023/vite.config.js","myebg":"/mnt/chromeos/MyFiles/Downloads/myext/background.js","cpg":"/home/kdog3682/2023/code-playground.html","al":"/home/kdog3682/2024/actions.log","gp":"/home/kdog3682/2023/gitParser.js","html":"/home/kdog3682/CWF/10-29-2021.html","le2":"/home/kdog3682/2023/LineEdit2.js","cfd":"/home/kdog3682/2023/CSSFunctionDict.js","s2":"/home/kdog3682/2023/sampleString2.js","ftext":"/home/kdog3682/.vim/ftplugin/text.vim","test":"/mnt/chromeos/MyFiles/Downloads/test.pdf","pac":"/home/kdog3682/PYTHON/pac.txt","cwf":"/home/kdog3682/CWF.files.json","ceem":"/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/email_this_page/background.js","jsc":"/home/kdog3682/CWF/public/jsc.js","jsa":"/home/kdog3682/CWD/jsa.js","umq":"/home/kdog3682/RESOURCES/Unsorted Math Questions.txt","rlc":"/home/kdog3682/CWF/reportlab-current.py","hmf":"https://hammymathclass.github.io/flashcards","plhb":"/home/kdog3682/2023/pl-htmlBuilder.js","story":"/home/kdog3682/Resources2023/story.md","egi":"/home/kdog3682/2023/.gitignore","fsr":"/home/kdog3682/CWF/fileservice.py","vd2":"/home/kdog3682/2023/directives2.js","ref2":"/home/kdog3682/2023/runExampleFile2.js","eo":"/home/kdog3682/2023/elementObjects.js","vuedirective":"https://v2.vuejs.org/v2/guide/custom-directive.html","out":"/home/kdog3682/CWF/public/output.js","bfe":"/home/kdog3682/CWF/public/browser-file-editor.js","sc2":"/home/kdog3682/2023/StateContext2.js","ewc":"/home/kdog3682/2023/worksheet-components.js","sa":"/home/kdog3682/CWF/public/socket-action.js","rbu":"/home/kdog3682/CWF/rawbackup.js","sc":"/home/kdog3682/2023/StateContext.js","sd":"/home/kdog3682/2024/shsat.dialogue","sf":"/home/kdog3682/2023/serveFile.js","sh":"/home/kdog3682/VIM/setup.sh","si":"/home/kdog3682/CWF/public/build/index.html","sj":"/home/kdog3682/2023/server.js","sk":"/home/kdog3682/2023/splitKatex.js","sl":"/home/kdog3682/CWF/public/file-loader.js","sm":"/home/kdog3682/MATH/story.math","so":"/home/kdog3682/CWD/source.js","sp":"/home/kdog3682/PYTHON/scratchpad.py","firestoreconsole":"https://console.cloud.google.com/apis/credentials/key/491dccbc-2dd8-409e-b8bd-8d599d0582fa?project=hammy-math-class","sr":"/home/kdog3682/CWF/public/sr.js","ss":"/home/kdog3682/2023/style.stylus","shf":"/home/kdog3682/2023/serve_html_file.js","su":"/home/kdog3682/CWF/public/string-utils.js","ih":"/home/kdog3682/2023/cm-inputHandler.js","ij":"/home/kdog3682/CWF/public/index.js","in":"/home/kdog3682/2023/index.html","vi2":"/home/kdog3682/2023/vite1/index2.html","smd":"/home/kdog3682/Resources2023/story.md","gmail":"https://gmail.com","foot":"/home/kdog3682/2023/foo.txt","ex":"/home/kdog3682/2023/examples.template.js","pubc":"/home/kdog3682/CWF/public/current.js","d3":"/home/kdog3682/2023/pl-d3Builder.js","nx2":"/home/kdog3682/2023/next2.js","plc":"/home/kdog3682/2023/pl-create.js","ugit":"https://github.com/kdog3682/2023/blob/main/utils.js","ceem2":"/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/email_this_page/content_script.js","t2":"/home/kdog3682/2023/today2.js","t3":"/home/kdog3682/CWF/public/test3.html","t4":"/home/kdog3682/CWD/testfile4.js","t5":"/home/kdog3682/CWF/public/t5.js","t6":"/home/kdog3682/CWF/public/t6.js","lc":"/home/kdog3682/2023/lezer-common.js","enn":"/home/kdog3682/2023/notes.txt","eft":"/home/kdog3682/2023/files.txt","vr":"/home/kdog3682/2023/vue-registrar.js","ij2":"/home/kdog3682/CWF/public/index2.js","next":"/home/kdog3682/2023/next.js","le":"/home/kdog3682/RESOURCES/code.learning.txt","tD":"/home/kdog3682/CWF/public/t.drafts.js","vf2":"/home/kdog3682/.vim/ftplugin/functions2.vim","cml":"/home/kdog3682/2023/cml.txt","csv1":"/mnt/chromeos/MyFiles/Downloads/history (1).csv","cmm":"/home/kdog3682/2023/cm-mixins.js","lud":"/home/kdog3682/CWF/public/lud.js","cmn":"/home/kdog3682/2023/cm-next.js","sv":"/home/kdog3682/2023/serveVite.js","clip":"/home/kdog3682/CWF/public/clip.js","index":"/home/kdog3682/CWF/index.html","github":"https://github.com/kdog3682/2023/blob/main/","ft":"/home/kdog3682/RESOURCES/file-table.txt","gsw":"/home/kdog3682/2023/gold-star-worksheets.txt","cme":"/home/kdog3682/2023/CodeMirrorEditor.js","pdfu":"/home/kdog3682/CWF/pdf_utils.py","td":"https://docs.google.com/document/d/1xUr6FP9NZJ49rGp5ZGsCH6VAfJUZImuVz-6KIgJ_Daw/edit","te":"/home/kdog3682/2023/textEdit.js","tf":"/home/kdog3682/CWF/public/tempfiles.txt","gd":"/home/kdog3682/2023/git-data3.json","th":"/home/kdog3682/2023/test.html","dhb":"/home/kdog3682/DIST/pl-htmlBuilder.js","git":"/home/kdog3682/PYTHON/githubscript.py","tm":"/home/kdog3682/CWF/public/text-messages.txt","tdj":"/home/kdog3682/2023/today.guotie.js","vob":"/home/kdog3682/2023/vob.worksheet.js","tp":"/home/kdog3682/2024/TrackProgress.txt","jc":"/home/kdog3682/2023/jsbin.css","jd":"/mnt/chromeos/GoogleDrive/MyDrive/JSONS/jd.june.json","lm":"/home/kdog3682/2023/lezer-main.js","tt":"/home/kdog3682/2024/temp.txt","jg":"/home/kdog3682/2023/node_modules/@lezer/javascript/src/javascript.grammar","voi":"/home/kdog3682/CWF/public/voice-to-command.js","ijh":"/home/kdog3682/JAVASCRIPT/index.html","jj":"/home/kdog3682/CLIPS/file-identifier-reference.june.json","vimrc":"/home/kdog3682/.vimrc","jm":"/home/kdog3682/PYTHON/javascriptModule.py","files":"/home/kdog3682/2023/files.txt","home":"kdog3682 .bash_profile","ju":"/home/kdog3682/CWF/public/jsxgraph-utils.js","jv":"/home/kdog3682/.vim/ftplugin/javascript.vim","cre":"/home/kdog3682/2023/compileRE.js","ace":"/mnt/chromeos/MyFiles/Downloads/Acing the New SAT Math PDF Book.pdf","grades":"/home/kdog3682/TEXTS/grades.txt","pcd":"/home/kdog3682/2023/pdfgen.components.document.js","esk":"/home/kdog3682/2023/splitKatex.js","pmh":"/home/kdog3682/CWF/public/pm-helpers.js","u2":"/home/kdog3682/2023/utils2.js","chi":"/home/kdog3682/CWF/public/chinese.txt","help":"/home/kdog3682/TEXTS/help.txt","np":"/home/kdog3682/PYTHON/next.py","pmu":"/home/kdog3682/CWF/public/prosemirror-utils.js","node":"node_modules","bg":"/mnt/chromeos/MyFiles/Downloads/myext/background.js","logs":"/home/kdog3682/logs.txt","g":"/home/kdog3682/TEXTS/grades.txt","pcm":"/home/kdog3682/2023/pl-comprehensiveMarkdown.js","bh":"~/.bash_history","ess":"/home/kdog3682/2023/scratchpad.js","ete":"/home/kdog3682/2023/textEdit.js","rsg":"/home/kdog3682/CWF/render.jsgithub","eii":"/home/kdog3682/2023/index.html","a1":"/home/kdog3682/CWF/jch/app.js","a2":"/home/kdog3682/CWF/public/app2.js","pdfgen":"/home/kdog3682/CWF/public/playground.js","a4":"/home/kdog3682/CWF/public/a4.js","eng":"/home/kdog3682/PYTHON/githubscript.py","mu2":"/home/kdog3682/2023/math-utils.js","tod":"/home/kdog3682/2023/today.js","gts":"/home/kdog3682/2023/geometry.template.js","vite":"/home/kdog3682/2023/viteServe.js","time":"timesheet","dia":"/home/kdog3682/2023/dialogue3.js","lts":"/home/kdog3682/2023/lezer.template.js","deps":"/home/kdog3682/LOGS/dependencies.log","ur":"/home/kdog3682/CWF/public/useful-references.js","ut":"/home/kdog3682/CWF/public/utils.js","wea":"https://www.google.com/search?q=weather&rlz=1CACCBQ_enUS943US943&oq=weather&aqs=chrome.0.69i59j35i39j46i131i199i433i465i512j0i131i433i512j0i67i131i433i457j0i402l2j69i61.541j1j7&sourceid=chrome&ie=UTF-8","est":"/home/kdog3682/2023/saved.txt","fth":"/home/kdog3682/.vim/ftplugin/html.vim","ftj":"/home/kdog3682/.vim/ftplugin/javascript.vim","ereg":"epa","ftm":"/home/kdog3682/.vim/ftplugin/math.vim","kq":"/home/kdog3682/CWD/katex-question.js","ftp":"/home/kdog3682/.vim/ftplugin/python.vim","af":"afsgsdfgsfsdfasdf.json","csb":"/home/kdog3682/2023/CSSParserBuilder.js","ujs":"/home/kdog3682/CWF/public/utils.js","ftt":"/home/kdog3682/.vim/ftplugin/txt.vim","aj":"/home/kdog3682/CWF/public/a.js","ftv":"/home/kdog3682/.vim/ftplugin/vim.vim","vdata":"/home/kdog3682/2023/vueData.js","am":"/home/kdog3682/2023/appscript.js","save":"/home/kdog3682/CWF/public/html-utils.js","ap":"/home/kdog3682/CWF/a.py","as":"asdfasdf.json","au":"/home/kdog3682/CWF/public/app-utils.js","css":"/home/kdog3682/2023/component-sampleString.js","cst":"/home/kdog3682/2023/cm-simpleTextExtensions.js","v1":"/home/kdog3682/2023/base-components.v1.js","gmailsent":"https://gmail.com/sent","v2docs":"https://v2.vuejs.org/v2/guide/custom-directive.html#Directive-Hook-Arguments","tf2":"/home/kdog3682/CWD/testfile2.js","tf3":"/home/kdog3682/CWD/testfile3.js","ser":"server.js","mics":"/home/kdog3682/2023/material-icons.css","pdf":"/home/kdog3682/PYTHON/pdf.py","git2023":"https://github.com/kdog3682/2023","pdh":"/home/kdog3682/CWF/public/demo.html","cold":"/home/kdog3682/CWF/public/clip.js","a3":"/home/kdog3682/CWF/public/a3.js","ets":"/home/kdog3682/2023/examples.template.js","spy":"/home/kdog3682/PYTHON/scratchpad.py","exs":"/home/kdog3682/2023/examples.js","bsh":"/home/kdog3682/2023/buildServerHTML.js","Cl":"/home/kdog3682/2023/Classroom.js","jiu":"https://9animetv.to/watch/jujutsu-kaisen-2nd-season-18413?ep=102662","mcj":"/home/kdog3682/CWF/public/math.config.js","red":"/home/kdog3682/PYTHON/reddit_script.py","mcl":"/home/kdog3682/CWF/public/mycodelog.txt","ref":"/home/kdog3682/2023/runExampleFile.js","citi":"https://docs.google.com/spreadsheets/d/1Y3KRa7m3Nc8Z9ZGnKDFflGl5mldGBcosY1XIBYMF_Uo/edit#gid=1470853595","ljs":"/home/kdog3682/CWF/public/learning.js","va":"/home/kdog3682/2023/vite1/a.js","vb":"/home/kdog3682/CWF/public/vue-base.js","vc":"/home/kdog3682/2023/pl-comprehensiveMarkdown.js","vd":"/home/kdog3682/.vim/ftplugin/variables.09-15-2023.vim","st":"/home/kdog3682/2023/saved.txt","vf":"/home/kdog3682/.vim/ftplugin/functions.vim","vg":"/home/kdog3682/2023/vim.grammar","vh":"/home/kdog3682/2023/vite.html","gac":"/home/kdog3682/2023/googleAppConnector.js","mecs":"/mnt/chromeos/MyFiles/Downloads/myext/content_script.js","ist":"/home/kdog3682/MARKDOWN/Ivy and Sandy Teach Hammy Decimals.md","asd":"/home/kdog3682/CWF/public/asd","ed3":"/home/kdog3682/2023/pl-d3Builder.js","gaj":"/home/kdog3682/2023/gas-script.js","tur2":"/home/kdog3682/2023/turtle2.js","ld":"/home/kdog3682/CWF/chrome-extensions-samples/mv2-archive/extensions/catblock/loldogs.js","vs":"/home/kdog3682/2023/vueSetup.js","vt":"/home/kdog3682/CWD/vue-transform.js","vu":"/home/kdog3682/2023/vue-utils.js","nxn":"/home/kdog3682/CWF/public/na-xie-nian.js","li":"/home/kdog3682/CWF/libra.py","lj":"/home/kdog3682/2023/log.json","lcl":"/home/kdog3682/2023/lezer-CodeLibrary.js","this":"timesheet","md1":"https://docs.google.com/document/d/1-FgzbtB3k29hJ_utfQxhX_ZEc30r81F4Ak-6z_nQW3o/edit?usp=drivesdk","ba":"~/.bash_aliases","lp":"/home/kdog3682/2023/lezer-prettier.js","bc":"/home/kdog3682/2023/baseComponents.js","pya":"/home/kdog3682/PYTHON/apps.py","pyc":"/home/kdog3682/CWF/pyconnector.py","lu":"/home/kdog3682/CWF/public/lezer-utils.js","appscript":"https://script.google.com/home/projects/1udnFRvx5ObFrf-T36H4-Wnj3bjNDZkfqC1qwj4JUdLfu5sSJXYm4280J/edit","classroom":"https://drive.google.com/drive/folders/1sD9pfkJVa0WBH_FPygLQ-gCaJQRGaO-B","bj":"/home/kdog3682/CWF/public/b.js","pos":"/home/kdog3682/CWF/public/position-control.js","strftime":"https://strftime.org/","spl":"/home/kdog3682/CWF/public/split.txt","gi24":"/home/kdog3682/2024/.gitignore","mathdraft1":"https://docs.google.com/document/d/1-FgzbtB3k29hJ_utfQxhX_ZEc30r81F4Ak-6z_nQW3o/edit?usp=drivesdk","bs":"/home/kdog3682/2023/bootstrap.css","sfe":"/home/kdog3682/SERVER/server-frontend.js","bu":"/home/kdog3682/2023/browser-utils.js","pys":"/home/kdog3682/CWF/pystuff.py","vda":"/home/kdog3682/CWF/public/vue-data.js","r3c":"/home/kdog3682/CWF/public/r3c.js","w2":"/home/kdog3682/2023/ws2.vob.js","ec3":"/home/kdog3682/2023/cm3.js","int":"/home/kdog3682/2023/Interactive.js","r3h":"/home/kdog3682/CWF/public/r3.html","esj":"/home/kdog3682/2023/server.js","anime":"/home/kdog3682/CWF/public/anime.js","cjs":"/home/kdog3682/CWF/public/comments.js","temp":"/home/kdog3682/2023/temp.txt","m2":"/home/kdog3682/2023/math.txt","print":"/home/kdog3682/CWF/public/print.js","jobs":"/home/kdog3682/2023/jobs.txt","bch":"/home/kdog3682/2023/baseComponents.html","bcs":"/home/kdog3682/2023/base.css","eut":"/home/kdog3682/2023/utils.js","lez":"/home/kdog3682/2023/Lezer.js","clm":"/home/kdog3682/LOGS/CHANGELOG.md","comp":"/home/kdog3682/2023/compiled.js","c2":"/home/kdog3682/2023/clip2.js","c3":"/home/kdog3682/CWF/public/class3.js","c4":"/home/kdog3682/CWF/public/class4.js","cu2":"/home/kdog3682/2023/css-utils2.js","zip":"/home/kdog3682/PYTHON/zipscript.py","mdp":"/home/kdog3682/2023/markdownParser.js","epj":"/home/kdog3682/2023/package.json","mds":"/home/kdog3682/CWF/public/math-doc-string.txt","pygi":"/home/kdog3682/PYTHON/.gitignore","gitpython":"https://github.com/kdog3682/python","teachingdiary":"https://docs.google.com/document/d/1xUr6FP9NZJ49rGp5ZGsCH6VAfJUZImuVz-6KIgJ_Daw/edit","hc":"/home/kdog3682/2023/hammyComponents.js","pld3":"/home/kdog3682/2023/pl-d3Builder.js","jcl":"/home/kdog3682/JAVASCRIPT/class.js","wc":"/home/kdog3682/2023/worksheet-components.js","bjs":"/home/kdog3682/2023/b.js","backup":"/home/kdog3682/2023/backup.js","ma":"/home/kdog3682/TEXTS/math.archive.txt","mb":"mathbook.raw.txt","mc":"/home/kdog3682/2023/mathComponents.js","md":"/home/kdog3682/CWF/math.dict","me":"/home/kdog3682/2023/me.txt","a":"/home/kdog3682/2023/a.js","mg":"/home/kdog3682/2023/mathgen.js","mh":"/home/kdog3682/CWD/math-helpers.js","mj":"/home/kdog3682/TEXTS/me.journal.txt","tl":"/home/kdog3682/LOGS/today.log","ws2":"/home/kdog3682/2023/ws2.vob.js","mp":"/home/kdog3682/2023/mathProblems.js","cc":"/home/kdog3682/2023/common.css","cd":"/home/kdog3682/CWF/public/clip-data.js","ms":"/home/kdog3682/MATH/story.math","mt":"/home/kdog3682/2023/mappings.txt","mu":"/home/kdog3682/2023/ma.js","ch":"/home/kdog3682/2023/ContextHandle.js","pd":"/home/kdog3682/CWF/public/demo.js","cl":"/home/kdog3682/2023/class.js","cm":"/home/kdog3682/2023/cm-main.js","cn":"/home/kdog3682/2023/code-notes.txt","co":"/home/kdog3682/2023/codeOrganizer.js","cp":"/home/kdog3682/2023/cssParser.js","afs":"afsgdfghdfghsdfgsfsdfasdf.json","cs":"/mnt/chromeos/MyFiles/Downloads/10_28_2022 (4).css","ct":"/home/kdog3682/2024/completionTracker.txt","cu":"/home/kdog3682/2023/css-utils.js","cur":"/home/kdog3682/MATH/current.math","cx":"/home/kdog3682/2023/cx.js","myf":"/home/kdog3682/LOGS/myFiles.log","geo":"/home/kdog3682/CWF/public/geometry.js","hmc":"https://hammymath.github.io/","gtc":"/home/kdog3682/2023/git-checkout.temp.js","r4h":"/home/kdog3682/CWF/public/r4.html","fhtml":"/home/kdog3682/.vim/ftplugin/html.vim","r4l":"/home/kdog3682/CWF/public/r4leftovers.js","acejson":"/mnt/chromeos/MyFiles/Downloads/Acing the New SAT Math PDF Book.pdf.json","myr":"/home/kdog3682/.reddit.json","exp":"/home/kdog3682/PYTHON/examples.py","lore":"/home/kdog3682/2023/lorem.js","n2":"/home/kdog3682/2023/next2.js","prep":"/home/kdog3682/CWF/public/prepare-reddit.js","cab":"/home/kdog3682/2023/cabmap.js","wsa":"https://script.google.com/home/projects/1udnFRvx5ObFrf-T36H4-Wnj3bjNDZkfqC1qwj4JUdLfu5sSJXYm4280J/edit","cap":"/home/kdog3682/2023/cssApps.js","pfs":"/home/kdog3682/2023/pythonFileServer.js","resume":"https://docs.google.com/document/d/11PzEB137TPCDX4xr8Hcy3ysJ4FPRwm24jRMhIb7Lb6k/edit","d2":"/home/kdog3682/CWF/public/demo2.html","hlez":"/home/kdog3682/.npm-global/lib/node_modules/@lezer/markdown/dist/index.cjs","eba":"/home/kdog3682/2023/base.css","ebc":"/home/kdog3682/2023/baseComponents.js","ega":"/home/kdog3682/2023/googleAppConnector.js","ftc":"/home/kdog3682/.vim/ftplugin/css.vim","gmc":"/home/kdog3682/2023/generateMultipleChoice.js","bkl":"/home/kdog3682/CWF/bkl.py","vuedoc":"https://v2.vuejs.org/v2/guide/render-function.html","xs2":"/home/kdog3682/2023/xmlString2.js","jdj":"/home/kdog3682/2023/javascript.dependencies.json","pugt":"/home/kdog3682/CWF/public/pug.txt","chl":"/home/kdog3682/2023/changelog.md","log":"/home/kdog3682/2023/log.json","par":"/home/kdog3682/2023/parse.js","vimc":"/home/kdog3682/2023/vimConnector.js","vimd":"/home/kdog3682/CWF/vim-dictionaries.vim","gd3":"/home/kdog3682/2023/git-data3.json","lop":"/home/kdog3682/2023/lazyObjectParser.js","nc":"/home/kdog3682/CWF/public/nc.js","firegi":"/home/kdog3682/FIREBASE/.gitignore","xs":"/home/kdog3682/2023/xmlString.js","gco":"/home/kdog3682/2023/git-checkout.temp.js","nh":"/home/kdog3682/CWD/nodehelpers.js","em2":"/home/kdog3682/2023/math.txt","pcj":"/home/kdog3682/2023/production.config.js","no":"/home/kdog3682/CWF/notes.txt","db":"/home/kdog3682/2023/DomBuilder.js","npj":"/home/kdog3682/CWF/generator/node_modules/rollup-plugin-typescript2/node_modules/tslib/package.json","de":"/mnt/chromeos/MyFiles/Downloads/demo.js","gap":"/home/kdog3682/PYTHON/googleAppScript.py","nu":"/home/kdog3682/2023/node-utils.js","dh":"/home/kdog3682/CWF/public/demo.html","ec2":"/home/kdog3682/CWF/public/element-controller.js","pu":"/home/kdog3682/CWF/public/prose-utils.js","vim":"/home/kdog3682/CWF/vim.py","mdw":"/home/kdog3682/2023/my-data-website.js","do":"/home/kdog3682/2023/DateObject.js","dt":"/home/kdog3682/2023/dialogue.txt","srt":"/home/kdog3682/2023/story.readings.txt","dv":"/home/kdog3682/.vim/ftplugin/dialogue.vim","lego":"/home/kdog3682/CWF/public/lego.js","cle":"https://newyork.craigslist.org/search/edu#search=1~list~0~0","iab":"/home/kdog3682/CWF/iab.vim","cej":"/home/kdog3682/2023/cm.esm.js","norm":"/home/kdog3682/CWF/public/normalize.css","vv":"/home/kdog3682/VIM/variables.vim","cmdoc":"https://codemirror.net/docs/ref/#view.Decoration"}

const jspyref = {"vim":{"echoTemplate":"echo \"%s: \" . string(%s)","highFrequencyWords":[],"logTemplate":"call s:red(\"$1\", $1)","solWords":["call s:myappend","let s = getline()"],"functionBlockTemplate":"function %s(%s) {\r}\u000fO","objectBlockTemplate":"x","elseTemplate":"if 1\n    $1\nendif","reservedKeywords":["let","g:","b:","l:","a:","if","else","while","for","echo","try","catch","abort","exit","match","add"],"returnTemplate":"return s:red(\"$1\", $1)","mainFunctionBlockTemplate":"function Main(s)\n\t\nendfunction","echoInputTemplate":"call input('$1: ' . s:string($1))","bookmarkCommentEnd":"\"\"\"","function_re":"(function!?) \\zs\\w+","fileFromFunctionBlockTemplate":"$importString\n\n$1","commonFunctionWords":["Transform","string"],"commentPrefix":"\"","backslash":"\\","functionRefFile":"/home/kdog3682/.vim/ftplugin/functions2.vim","temporaryLogTemplate":"","shuntIndexKey":"smart","functionTemplate":"function $1($2) {\n    $n}","execFunctions":{"csf":"Create_s_function_from_reg_function","gft":"s:get_file_type","ivc":"InsertFunctionIntoVimConnector"},"equalDict":{"ref":{"replaceWith":"ref","value":"{\n\\'': \"\",\n\\}"},"lang":"&filetype\r","s":"getline('.')\r","gsi":{"entries":{"s":"getline('.')","index":"line('.')","spaces":"matchstr(s, '^ *')"}},"si":{"replaceWith":"s","value":"getline(i)\r"},"scol":{"entries":{"s":"getline('.')","pos":"col('.') - 1"}},"ind":"GetIndent()","ab":{"replaceWith":"[a,b]"}},"shuntdownGrabRE":"^(iab|iabbrev|nnoremap|inoremap|vnoremap|cnoremap|nnoremenu|inoremenu|vnoremenu|cnoremenu|noreabbrev|noremenu|nmap|imap|vmap|cmap|inoreab|set|iunmap|nunmap|source)>","echoLogThrowTemplate":"ec $1","bookmarkCommentStart":"\"\"\"","libraryLoaderKeys":"vimkeys","blockexitre":"^ *(\\\\\\]|\\\\\\},?|end\\w+|else) *$","echoWordTemplate":"","nativeFunctions":["copy","map","filter"],"identifierRE":"(^ *\\w+ +)\\zs\\[?\\w+.{-}\\ze *\\=","templateExpressions":{"tl":"aaaaaa"},"importDependencyStringTemplate":"","shellTemplate":"","functionWrapTemplate":"","blockPairs":{"\\{ *$":"\\}","^ *(if|elseif)>":"(else|end)if","[ *$":"\\]","^ *for":"endfor","^ *try":"endtry"},"prefix":"let ","qqqqCompletionItems":[{"a":"%(^| \\zs)[a-z]+$","fn":"MarkdownSpaceCompletion"}],"functionTemplateLines":["function Abc()","endfunction"],"wrapLambdaTemplate":"","echoReturnTemplate":"return s:print($1)","functionNames":[],"lineCommentPrefix":"\" ","gcwre":"[:a-z0-9\\._-]+","lineContinuationMarker":"\\","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"<[a-z]:[a-z]+$","fn":"VimVarCompletion"},{"a":"[a-z]+$","b":"^\\w+","fn":"WrapCompletion"},{"a":"[a-z]+$","fn":"WordSpiralCompletion"}],"throwTemplate":"call s:red(\"$1\", $1)\\nthrow \"stop\"","commentTemplate":"\" $1","echoLogTemplate":"ec $1","tryTemplate":"try\n    $1\ncatch\nendtry","functionLineRE":"^function!? +\\w","regexDelim":"''","blockenterre":"^ *(if|elseif|else|for|while|do|function|\\{|\\[|`)>"},"template":{"shuntIndexKey":"belowCursor"},"markdown":{"reservedKeywords":[],"execFunctions":{"cr":"CreateMarkdownSection","sf":"GetSetFn('AppMarkdownSpellFix')","m":"ToggleMarkdownCompletion"},"qqqqCompletionItems":[{"a":"%(^| \\zs)[a-z]+$","fn":"MarkdownSpaceCompletion"}],"blockexit":".","shuntIndexKey":"belowCursor","blockenterre":".","qqqCompletionItems":[{"a":"[^a-z]$","value":" "},{"a":"%(^| \\zs)[a-z]+$","fn":"MarkdownSpaceCompletion"}]},"dialogue":{"execFunctions":{"dr":"DialogueReplace"}},"stylus":{"blockPairs":{"\\{ *$":"\\}","^ *(if|elseif)>":"(else|end)if","[ *$":"\\]","^ *for":"endfor","^ *try":"endtry"},"execFunctions":{"sayhi":"Sayhi(\"stylus\")"},"functionBlockTemplate":"def $1(${Paramify($2)})\n\t$c","commentPrefix":"//","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"[a-z]+$","fn":"StylusWordSpiralCompletion"}]},"text":{"commentPrefix":"#","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"/([a-z])+$","source":"g:dir2023"},{"a":"[a-z]+$","fn":"GetCompletionWords"}]},"html":{"commentTemplate":"<!-- $1 -->"},"javascript":{"echoTemplate":"console.log(\"%s\", %s)","highFrequencyWords":["name","async ","javascript","markdown","python","Words"],"logTemplate":"console.log({$1})","methodBlockTemplate":"%s(%s) {\r}\u000fO","solWords":[],"functionBlockTemplate":"function %s(%s) {\r}\u000fO","objectBlockTemplate":"%s(%s) {\r},\u000fO","elseTemplate":"else {\n    $1\n}","reservedKeywords":["await","break","case","catch","class","const","do","else","false","for","if","in","let","new","null","super","this","throw","true","try","var","while","with","yield"],"returnTemplate":"return red(\"$1\", $1)","mainFunctionBlockTemplate":"function main(s) {\n\t\n}","echoInputTemplate":"console.log(\"%s\", $1)","bookmarkCommentEnd":"**/","function_re":"(class|(async )?function) \\zs\\w+","fileFromFunctionBlockTemplate":"$importString\nexport { $2 }\n $1","commonFunctionWords":"","commentPrefix":"//","backslash":"","functionRefFile":"/home/kdog3682/2023/utils.js","temporaryLogTemplate":"console.temporary($1)","shuntIndexKey":"smart","functionTemplate":"function $1($2) {\n    $c\n}","execFunctions":{"gen":"GenerateJavascriptTest"},"equalDict":{"v":{"replaceWith":"value"},"ab":{"replaceWith":"[a,b]"},"suf":{"replaceWith":"m","value":"sort(unique(findall(r, s)))"},"ts":{"replaceWith":"text","value":"s.trim()"},"fa":{"replaceWith":"m","value":"findall(r, s)"}},"shuntdownGrabRE":"^(#|//|\\w+(\\.\\w+)*\\().+","echoLogThrowTemplate":"console.log($1); throw \"$1\"","bookmarkCommentStart":"/**","libraryLoaderKeys":"javascriptkeys","blockexitre":"^ *([\\]}])\\)?,? *$","echoWordTemplate":"display('$cw', $cw, 0)","nativeFunctions":["print"],"identifierRE":"(^ *\\w+ +)\\zs[\\{\\[]?\\w+.{-}\\ze *\\=","templateExpressions":{"tl":"console.log($1); throw \"throwing\""},"importDependencyStringTemplate":"import { $1 } from './$2'","shellTemplate":"!node $1","functionWrapTemplate":"function runner(s) {\n    $1\n}","blockPairs":{"\\{ *$":"}","[ *$":"]","^ *(for|while|if|else|do|function)>":"}"},"prefix":"const ","localHighFrequencyWords":["checkValue","computedValue","JSON.stringify"],"lineCommentPrefix":"// ","functionTemplateLines":["function abc(s) {","}"],"wrapLambdaTemplate":"function $prompt(s) {\n    $1\n}","echoReturnTemplate":"return $1","functionNames":[],"gcwre":"[a-z0-9\\._-]+","lineContinuationMarker":"","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"r:[a-z]+$","fn":"s:regex_completion"},{"a":"/[a-z]+$","fn":"JavascriptFileCompletion"},{"a":"f?:[a-z]+$","fn":"JavascriptFarawayFunctionCompletion"},{"a":"[a-z]+$","fn":"JavascriptWordSpiralCompletion"}],"throwTemplate":"console.log(\"$1\", $1); throw \"throwing\";","commentTemplate":"// $1","echoLogTemplate":"console.log($1)","tryTemplate":"c","functionLineRE":"^(const|class|(async )?function\\*?) +\\w","regexDelim":"//","blockenterre":"^ *(if|else if|else|while|do|for|(async )?function|try|class)|[{\\[] *$"},"css":{"commentTemplate":"/* $1 */","execFunctions":{"cr":"CssCreateClass","if":"CssImportFont","sv":"CssSetVarValue","dup":"CssDupLine","var":"CssVarialize","gather":"VisualCssGatherPropertiesFromBlock","bs":"OpenBuffer4('bootstrap.css')","anime":"CssAnime","font":"CssImportFont"},"blockexit":"[{\\[:] *$","blockenterre":"[{\\[:] *$","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"--\\w*$","fn":"CssDashCompletion"},{"a":": *\\zs[a-z]\\d$","fn":"CssColorCompletion"},{"a":"^ *\\zs[a-z]+$","fn":"CssCompletion"},{"a":"[a-z]+$","fn":"CssWordSpiralCompletion"}]},"python":{"echoTemplate":"print(\"%s\", %s)","highFrequencyWords":[],"logTemplate":"red(\"$1\", $1)","methodBlockTemplate":"def %s(self, %s) :\r","solWords":[],"functionBlockTemplate":"def $1(${Paramify($2)}):\n\t$c","objectBlockTemplate":"x","elseTemplate":"b","reservedKeywords":["and","as","async","await","break","class","def","del","elif","else","for","from","if","in","is","not","or","pass","raise","try","while","with","yield"],"returnTemplate":"return red(\"$1\", $1)","mainFunctionBlockTemplate":"def main(s)\n\t","echoInputTemplate":"prompt('$1', $1)","bookmarkCommentEnd":"\"\"\"","function_re":"(class|def) \\zs\\w+","fileFromFunctionBlockTemplate":"$importString\n\n$1","commentPrefix":"#","backslash":"","functionRefFile":"/home/kdog3682/PYTHON/base.py","temporaryLogTemplate":"","shuntIndexKey":"smart","execFunctions":{"pe":"PythonExtract","uv":"UnmapPython"},"equalDict":{"s":"getline('.')\r"},"shuntdownGrabRE":"^(#|//|\\w+(\\.\\w+)*\\().+","commonFunctionWordAtoms":"","echoLogThrowTemplate":"b","bookmarkCommentStart":"\"\"\"","libraryLoaderKeys":"pythonkeys","blockexitre":"^ *([\\]}]) $","echoWordTemplate":"","nativeFunctions":["console.log"],"identifierRE":"^ *\\w+.{-}\\ze *\\=","templateExpressions":{},"importDependencyStringTemplate":"","shellTemplate":"!python3 $1","functionWrapTemplate":"","blockPairs":{"\\{ *$":"}","[ *$":"]"},"prefix":"","lineCommentPrefix":"# ","functionTemplateLines":["def abc():",""],"wrapLambdaTemplate":"","echoReturnTemplate":"return $1","functionNames":[],"gcwre":"[a-z0-9\\._-]+","lineContinuationMarker":"","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"[a-z]+$","fn":"LocalCompletion"},{"a":"[a-z]+$","sourceFunction":"s:get_python_identifiers"}],"throwTemplate":"return red(\"$1\", $1)","commentTemplate":"# $1","echoLogTemplate":"b","tryTemplate":"b","functionLineRE":"^(def|class) +\\w","regexDelim":"''","blockenterre":"[{\\[:] *$"},"grammar":{"reservedKeywords":[],"commentPrefix":"//","qqqCompletionItems":[{"a":"^\\s*$","value":"\t"},{"a":"[a-z]+$","fn":"GenericWordSpiralCompletion"}]}}
jspyref.typst = {prefix: '#let '}



const vueImplicitDataKeyRef = {
    input: '',
    showItem: true,
    boolean: false,
    falsy: false,
    truthy: true,
    selected: [],
    array: [],
    dict: {},
    object: {},
    number: 0,
    string: "howdy",
    input: "",
    depth: 0,
    response: {},
    files: [],
    isReadOnly: true,
    activeElement: "",
    currentTemplate: "",
    input: "",
    names: []
}

const filetypeMap = {
    js: 'javascript',
    py: 'python',
    md: 'markdown',
    html: 'html',
    css: 'css',
    rb: 'ruby',
    php: 'php',
    java: 'java',
    cpp: 'cpp',
    c: 'c',
    ts: 'typescript',
    jsx: 'javascriptreact',
    tsx: 'typescriptreact',
    json: 'json',
    xml: 'xml',
    yml: 'yaml',
    sql: 'sql',
    sh: 'sh',
    bash: 'sh',
    zsh: 'sh',
    go: 'go',
    rs: 'rust',
    pl: 'perl',
    lua: 'lua',
    typ: 'typst',
    vimrc: 'vim',
    vim: 'vim',
    tex: 'tex',
    csv: 'csv',
    log: 'log',
    ini: 'dosini',
};

const filetypes = Object.values(filetypeMap)

const easy = [
  "AmbientDeclaration",
  "ArrayExpression",
  "ArrayPattern",
  "ArrowFunction",
  "AssignmentExpression",
  "AwaitExpression",
  "BinaryExpression",
  "BlockComment",
  "ClassBody",
  "ClassDeclaration",
  "ClassExpression",
  "Decorator",
  "EnumDeclaration",
  "ExportDeclaration",
  "ExportGroup",
  "ForInSpec",
  "ForOfSpec",
  "FunctionDeclaration",
  "FunctionExpression",
  "ImportDeclaration",
  "ImportGroup",
  "IndexedType",
  "IndexSignature",
  "InterfaceDeclaration",
  "Interpolation",
  "InterpolationStart",
  "LessThan",
  "LineComment",
  "MemberExpression",
  "MethodDeclaration",
  "MethodType",
  "NamespaceDeclaration",
  "ObjectPattern",
  "ObjectType",
  "Optional",
  "ParamList",
  "ParamTypeList",
  "ParenthesizedExpression",
  "PatternProperty",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  "Property",
  "PropertyDeclaration",
  "PropertyDefinition",
  "PropertyName",
  "PropertyType",
  "SequenceExpression",
  "SingleClassItem",
  "SingleExpression",
  "TemplateString",
  "TemplateType",
  "UnaryExpression",
  "VariableDeclaration",
  "VariableDefinition",
  "VariableName",
  "YieldExpression",
  "RegExp",
  "ArgList"
]

/* 
 * creating a language that can be evaluated
 * */


const getCallerKeys = ['consoleLog', 'getCaller', 'getCallerObject', 'log']

const commonFirstLetterWords = [
    "the",
    "okay",
    "are",
    "um",
    "hi",
    "bye",
    "i",
    "it",
    "as",
    "this",
    "that",
    "and",
    "look",
    "does",
    "yes",
    "soon",
    "stop",
    "for",
    "with",
    "after",
    "before",
    "when",
    "while",
    "since",
    "because",
    "although",
    "if",
    "we",
    "you",
    "they",
    "he",
    "she",
    "an",
    "a",
    "but",
    "or",
    "nor",
    "so",
    "yet",
    "each",
    "either",
    "neither",
    "these",
    "those",
    "there",
    "how",
    "why",
    "where",
    "what",
    "who",
    "whom",
    "whose",
    "which",
    "in",
    "on",
    "at",
    "by",
    "to",
    "from",
    "up",
    "down",
    "over",
    "under",
    "again",
    "further",
    "then",
    "once",
    "here",
    "there",
    "all",
    "any",
    "both",
    "more",
    "most",
    "other",
    "some",
    "such",
    "no",
    "not",
    "only",
    "own",
    "same",
    "so",
    "than",
    "too",
    "very",
    "can",
    "will",
    "just",
    "should",
    "now"
]

const vueNativeFunctionKeys = [
    "deactivated",
    "activated",
    "destroyed",
    "beforeDestroy",
    "updated",
    "beforeUpdate",
    "mounted",
    "beforeMount",
    "created",
    "beforeCreate",
    "data",
    "render"
]

const vueNativeAttrs = ["v-if", "v-else-if", "v-model", "ref", "v-show"]


const seasons = [
    'winter', 'spring',
    'spring', 'spring', 'spring',
    'summer', 'summer', 'summer',
    'autumn', 'autumn', 'autumn',
    'winter',
]
const weekdays = [
    'sunday',
    'monday',
    'tuesday',
    'wednesday',
    'thursday',
    'friday',
    'saturday',
]

const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

const monthNames = [
  "january",
  "february",
  "march",
  "april",
  "may",
  "june",
  "july",
  "august",
  "september",
  "october",
  "november",
  "december"
]

const allSvgTags = [
    'svg',
    'g',
    'circle',
    'ellipse',
    'line',
    'path',
    'polygon',
    'polyline',
    'rect',
    'text',
    'defs',
    'linearGradient',
    'radialGradient',
    'stop',
    'clipPath',
    'mask',
    'filter',
    'feBlend',
    'feColorMatrix',
    'feComponentTransfer',
    'feComposite',
    'feConvolveMatrix',
    'feDiffuseLighting',
    'feDisplacementMap',
    'feDistantLight',
    'feFlood',
    'feFuncA',
    'feFuncB',
    'feFuncG',
    'feFuncR',
    'feGaussianBlur',
    'feImage',
    'feMerge',
    'feMergeNode',
    'feMorphology',
    'feOffset',
    'fePointLight',
    'feSpecularLighting',
    'feSpotLight',
    'feTile',
    'feTurbulence',
    'foreignObject',
    'script',
    'style',
    'switch',
    'symbol',
    'textPath',
    'title',
    'use'
];

const sampleLanguages = [
    "go",
    "javascript",
    "python",
    "rust",
    "swift",
    "kotlin",
    "elixir",
    "java",
    "lisp",
    "v",
    "zig",
    "nim",
    "rescript",
    "d",
    "haskell",
]

const vimFiles = [
    '/home/kdog3682/.vim/ftplugin/functions.vim',
    '/home/kdog3682/.vim/ftplugin/variables.vim',
    '/home/kdog3682/.vim/ftplugin/variables.09-15-2023.vim',
    '/home/kdog3682/.vim/ftplugin/functions.09-15-2023.vim',
    '/home/kdog3682/.vim/ftplugin/variables.10-12-2023.vim',
    '/home/kdog3682/.vim/ftplugin/packages.vim', // empty
]

const shellEscapeDict = {
  "\n": "nl",
  "'": "sq",
  "}": "rcb",
  "{": "lcb",
  "<": "lt",
  "@": "at",
  ">": "gt",
  "^": "caret",
  "%": "percent",
  "*": "star",
  "&": "ampersand",
  "_": "underscore",
  "$": "dollar",
  "\\\\": "backslash",
  "\\": "bs2",
  "#": "hash",
  ":": "colon",
  ";": "semi",
  "\"": "dq",
  ".": "dot",
  " ": "s",
  ")": "rp",
  "(": "lp",
  "!": "exc"
}
    const shellUnescapeDict = {
        newline: "\n",
        sq: "'",
        rcb: "}",
        lcb: "{",
        lt: "<",
        at: '@',
        gt: ">",
        caret: '^',
        percent: '%',
        star: '*',
        ampersand: '&',
        underscore: '_',
        dollar: "$",
        backslash: "\\",
        bs2: "\\",
        hash: "#",
        colon: ":",
        semi: ";",
        dq: '"',
        dot: ".",
        s: " ",
        rp: ")",
        lp: "(",
        exc: "!",
        nl: "\n",
    }

const shellEscapeRE = /[\n\t'}{<@>^%*&_$\\#:;". )(!]/m

const googleFontAliases = {
    cursive: 'Cedarville Cursive',
    cursive: 'Style Script',
    cursive: 'Princess Sofia',
}


    const webdevLanguages = [
        "javascript",
        "python",
        "html",
        "css",
    ]

